// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: logic.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from logic.proto</summary>
public static partial class LogicReflection {

  #region Descriptor
  /// <summary>File descriptor for logic.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LogicReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgtsb2dpYy5wcm90byIkCglsMmNfZXJyb3ISFwoCaWQYASABKA4yCy5Mb2dp",
          "Y01zZ0lEIk0KDVBUR2FtZUVsZW1lbnQSHwoFZVR5cGUYASABKA4yEC5HYW1l",
          "RWxlbWVudFR5cGUSCwoDbklEGAIgASgFEg4KBm5Db3VudBgDIAEoBSJECglN",
          "dXRleE5vZGUSHAoEdHlwZRgBIAEoDjIOLk11dGV4Tm9kZVR5cGUSCgoCaWQY",
          "AiABKAUSDQoFbm9kZXMYAyADKAUiOQoQUmFuZG9tU3RhZ2VJbmRleBIQCghz",
          "dGFnZV9pZBgBIAEoBRITCgtjcmVhdGVfdGltZRgCIAEoAyIhCg1sMmNfbG9n",
          "b25fYXNrEhAKCGtleV9zZWVkGAEgASgNIooCCg9jMmxfbG9nb25fcHJvb2YS",
          "EgoKYWNjb3VudF9pZBgBIAEoDRIQCgh1c2VybmFtZRgCIAEoCRITCgtjbGll",
          "bnRfc2VlZBgDIAEoDRINCgVwcm9vZhgEIAEoCRIvCgtkZXZpY2VfaW5mbxgF",
          "IAEoCzIaLmMybF9sb2dvbl9wcm9vZi5Mb2dvbkluZm8afAoJTG9nb25JbmZv",
          "Eg8KB2NoYW5uZWwYBSABKAkSDgoGZGV2aWNlGAYgASgJEhIKCmRldmljZW5h",
          "bWUYByABKAkSDQoFYXBwaWQYCCABKA0SDAoEbWRpZBgJIAEoDRIdCgZzZGtf",
          "aWQYCiABKA4yDS5Mb2dvblNES1R5cGUiMwoNbDJjX2xvZ29uX3JlcBIiCgZy",
          "ZXN1bHQYASABKA4yEi5DaGFyYWN0ZXJPcFJlc3VsdCKhAQoRbDJjX3N2Y19l",
          "eGNlcHRpb24SLwoGZV9pbmZvGAEgASgOMh8ubDJjX3N2Y19leGNlcHRpb24u",
          "U3ZjRXhjZXB0aW9uIlsKDFN2Y0V4Y2VwdGlvbhIYChRTVkNfRVhDRVBUSU9O",
          "X1JFSkVDVBAAEhYKElNWQ19FWENFUFRJT05fQlVTWRABEhkKFVNWQ19FWENF",
          "UFRJT05fRU5RVUVVRRACIjIKGGMybF9jcmVhdGVfY2hhcmFjdGVyX3JlcRIW",
          "Cg5jaGFyYWN0ZXJfbmFtZRgBIAEoCSKdAQoYbDJjX2NyZWF0ZV9jaGFyYWN0",
          "ZXJfcmVwEjAKBnJlc3VsdBgBIAEoDjIgLmwyY19jcmVhdGVfY2hhcmFjdGVy",
          "X3JlcC5SZXN1bHQiTwoGUmVzdWx0EhIKDnJlc3VsdF9zdWNjZWVkEAASGAoU",
          "cmVzdWx0X2FscmVhZHlfZXhpc3QQARIXChNyZXN1bHRfaWxsZWdhbF9uYW1l",
          "EAIiEgoQbDJjX25vX2NoYXJhY3RlciILCglsMmNfcmVhZHkiCwoJYzJsX3Jl",
          "YWR5IrICCg5sMmNfaW5pdGlhbGl6ZRIMCgRuYW1lGAEgASgJEgwKBGljb24Y",
          "AiABKAUSEAoIaWNvbl9yaW0YAyABKAUSDQoFbW9uZXkYBCABKAMSEAoIdml0",
          "YWxpdHkYBSABKAUSDwoHZGlhbW9uZBgGIAEoBRIUCgxmcmVlX2RpYW1vbmQY",
          "ByABKAUSEQoJY29vbF9kb3duGAggASgFEjQKCm5hdGlvbl9leHAYCyADKAsy",
          "IC5sMmNfaW5pdGlhbGl6ZS5OYXRpb25SZXB1dGF0aW9uEhAKCG1heG5vbWFs",
          "GBAgASgFEhMKC21heGRpZmZjdWx0GBEgASgFGjoKEE5hdGlvblJlcHV0YXRp",
          "b24SCgoCaWQYASABKAUSCwoDZXhwGAIgASgFEg0KBWxldmVsGAMgASgFIhUK",
          "E2MybF9pbml0aWFsaXplX2l0ZW0iiAEKE2wyY19pbml0aWFsaXplX2l0ZW0S",
          "EgoKdG90YWxfcGFnZRgBIAEoBRIQCghwYWdlX251bRgCIAEoBRIoCgVpdGVt",
          "cxgDIAMoCzIZLmwyY19pbml0aWFsaXplX2l0ZW0uSXRlbRohCgRJdGVtEgoK",
          "AmlkGAEgASgFEg0KBWNvdW50GAIgASgFIhYKFGMybF9pbml0aWFsaXplX2Vx",
          "dWlwItsBChRsMmNfaW5pdGlhbGl6ZV9lcXVpcBISCgp0b3RhbF9wYWdlGAEg",
          "ASgFEhAKCHBhZ2VfbnVtGAIgASgFEjcKCmVxdWlwbWVudHMYAyADKAsyIy5s",
          "MmNfaW5pdGlhbGl6ZV9lcXVpcC5FcXVpcG1lbnRJbmZvGmQKDUVxdWlwbWVu",
          "dEluZm8SCgoCaWQYASABKAUSDQoFbGV2ZWwYAiABKAUSCwoDZXhwGAMgASgF",
          "Eg0KBXN0YXJzGAQgASgFEg0KBXN0YWdlGAUgASgFEg0KBWNvdW50GAYgASgF",
          "IhoKGGMybF9pbml0aWFsaXplX2NoYXJhY3RlciL2AwoYbDJjX2luaXRpYWxp",
          "emVfY2hhcmFjdGVyEjsKCmNoYXJhY3RlcnMYASADKAsyJy5sMmNfaW5pdGlh",
          "bGl6ZV9jaGFyYWN0ZXIuQ2hhcmFjdGVySW5mbxqcAwoNQ2hhcmFjdGVySW5m",
          "bxIKCgJpZBgBIAEoBRINCgVsZXZlbBgCIAEoBRIRCglsZXZlbF9leHAYAyAB",
          "KAUSEQoJZmF2b3VyaXRlGAQgASgFEhUKDWZhdm91cml0ZV9leHAYBSABKAUS",
          "EgoKZmlyc3RfaGFpchgGIAEoBRISCgpmaXJzdF9mYWNlGAcgASgFEhMKC2Zp",
          "cnN0X2RyZXNzGAggASgFEhMKC2ZpcnN0X2NoZXN0GAkgASgFEhIKCmZpcnN0",
          "X2NhcGUYCiABKAUSEwoLZmlyc3RfZXh0cmEYCyABKAUSEwoLc2Vjb25kX2hh",
          "aXIYDCABKAUSEwoLc2Vjb25kX2ZhY2UYDSABKAUSFAoMc2Vjb25kX2RyZXNz",
          "GA4gASgFEhQKDHNlY29uZF9jaGVzdBgPIAEoBRITCgtzZWNvbmRfY2FwZRgQ",
          "IAEoBRIUCgxzZWNvbmRfZXh0cmEYESABKAUSEQoJaW5waGFsYW54GBIgASgI",
          "EiQKCHJlbGF0aW9uGBMgASgOMhIuQ2hhcmFjdGVyUmVsYXRpb24iMgoSYzJs",
          "X2FkZF9lbGVtZW50X2dtEhwKBGVsZXMYASADKAsyDi5QVEdhbWVFbGVtZW50",
          "IiQKEmwyY19hZGRfZWxlbWVudF9nbRIOCgZyZXN1bHQYASABKAgiEwoRYzJs",
          "X3Jlc2V0X2NudHNfZ20iIwoRbDJjX3Jlc2V0X2NudHNfZ20SDgoGcmVzdWx0",
          "GAEgASgIIhYKFGMybF9nZXRfYWxsX2Nsb3RoX2dtIiYKFGwyY19nZXRfYWxs",
          "X2Nsb3RoX2dtEg4KBnJlc3VsdBgBIAEoCCLAAQoObDJjX3VwZF9wbGF5ZXIS",
          "DAoEbmFtZRgBIAEoCRIMCgRpY29uGAIgASgFEhAKCGljb25fcmltGAMgASgF",
          "Eg0KBW1vbmV5GAQgASgDEhAKCHZpdGFsaXR5GAUgASgFEg8KB2RpYW1vbmQY",
          "BiABKAUSFAoMZnJlZV9kaWFtb25kGAcgASgFEhAKCG1heG5vbWFsGAggASgF",
          "EhMKC21heGRpZmZjdWx0GAkgASgFEhEKCWNvb2xfZG93bhgKIAEoBSKgAwoR",
          "bDJjX3VwZF9jaGFyYWN0ZXISCgoCaWQYASABKAUSDQoFbGV2ZWwYAiABKAUS",
          "EQoJbGV2ZWxfZXhwGAMgASgFEhEKCWZhdm91cml0ZRgEIAEoBRIVCg1mYXZv",
          "dXJpdGVfZXhwGAUgASgFEhIKCmZpcnN0X2hhaXIYBiABKAUSEgoKZmlyc3Rf",
          "ZmFjZRgHIAEoBRITCgtmaXJzdF9kcmVzcxgIIAEoBRITCgtmaXJzdF9jaGVz",
          "dBgJIAEoBRISCgpmaXJzdF9jYXBlGAogASgFEhMKC2ZpcnN0X2V4dHJhGAsg",
          "ASgFEhMKC3NlY29uZF9oYWlyGAwgASgFEhMKC3NlY29uZF9mYWNlGA0gASgF",
          "EhQKDHNlY29uZF9kcmVzcxgOIAEoBRIUCgxzZWNvbmRfY2hlc3QYDyABKAUS",
          "EwoLc2Vjb25kX2NhcGUYECABKAUSFAoMc2Vjb25kX2V4dHJhGBEgASgFEhEK",
          "CWlucGhhbGFueBgSIAEoCBIkCghyZWxhdGlvbhgTIAEoDjISLkNoYXJhY3Rl",
          "clJlbGF0aW9uImgKEWwyY191cGRfZXF1aXBtZW50EgoKAmlkGAEgASgFEg0K",
          "BWxldmVsGAIgASgFEgsKA2V4cBgDIAEoBRINCgVzdGFycxgEIAEoBRINCgVz",
          "dGFnZRgFIAEoBRINCgVjb3VudBgGIAEoBSIpCgxsMmNfdXBkX2l0ZW0SCgoC",
          "aWQYASABKAUSDQoFY291bnQYAiABKAUiOAoObDJjX3VwZF9uYXRpb24SCgoC",
          "aWQYASABKAUSCwoDZXhwGAIgASgFEg0KBWxldmVsGAMgASgFIiQKDmMybF9z",
          "dG9yeV9pbml0EhIKCmNoYXB0ZXJfaWQYASABKAUiXwoKQ29tYmF0SW5mbxIN",
          "CgVsaW1pdBgBIAEoBRILCgN3aW4YAiABKAgSDQoFc3RhcnMYAyADKAUSFQoN",
          "a2lsbF9tb25zdGVycxgEIAMoBRIPCgdwaGFsYW54GAUgAygFIn4KDVN0b3J5",
          "TG9ja0luZm8SMQoNdHJpZ2dlcl9pbmZvcxgBIAMoCzIaLlN0b3J5TG9ja0lu",
          "Zm8uVHJpZ2dlckluZm8aOgoLVHJpZ2dlckluZm8SFAoMdHJpZ2dlcl90eXBl",
          "GAEgASgFEhUKDXRyaWdnZXJfcGFyYW0YAiADKAUiigIKDWwyY19zdG9yeV91",
          "cGQSEAoIc3RhZ2VfaWQYASABKAUSEQoJZnJvbnRfaWRzGAIgAygFEhoKBXN0",
          "YXRlGAMgASgOMgsuU3RhZ2VTdGF0ZRIRCglsaW1pdF9zZWMYBSABKAMSDAoE",
          "Y29zdBgGIAEoCBIQCghidXlfY250cxgHIAEoBRIVCg1wbG90X2NvbXBsZXRl",
          "GAogASgIEhYKDmZpbmlzaGVkX2NvdW50GAsgASgFEg0KBW5vZGVzGAwgAygF",
          "EiMKDmNvbWJhdGVfcmVzdWx0GA4gASgLMgsuQ29tYmF0SW5mbxIiCgpsb2Nr",
          "X2luZm9zGA8gAygLMg4uU3RvcnlMb2NrSW5mbyKBAQoPbDJjX2NoYXB0ZXJf",
          "dXBkEg8KB2NoYXB0ZXIYASABKAUSEgoKZGlmZmN1bHRseRgCIAEoBRITCgtp",
          "c19jb21wZWxlZBgDIAEoCBIXCg9jdXJfc3RhZ2Vfc3RhcnMYBCABKAUSGwoT",
          "Y3VyX3N0YWdlX3RyZWFzdXJlcxgFIAMoBSISChBjMmxfY2hhcHRlcl9pbml0",
          "IjoKEGwyY19jaGFwdGVyX2luaXQSJgoMY2hhcHRlcl9pbmZvGAIgAygLMhAu",
          "bDJjX2NoYXB0ZXJfdXBkIjQKDmwyY19zdG9yeV9pbml0EiIKCnN0YWdlX2lu",
          "Zm8YASADKAsyDi5sMmNfc3RvcnlfdXBkIikKFGMybF9zdG9yeV9zdGFnZV9p",
          "bml0EhEKCXN0YWdlX2lkcxgBIAMoBSI6ChRsMmNfc3Rvcnlfc3RhZ2VfaW5p",
          "dBIiCgpzdGFnZV9pbmZvGAEgAygLMg4ubDJjX3N0b3J5X3VwZCJLCg9jMmxf",
          "c3Rvcnlfc3RhcnQSEAoIc3RhZ2VfaWQYASABKAUSJgoLcmFuZG9tX2luZm8Y",
          "AiABKAsyES5SYW5kb21TdGFnZUluZGV4IkYKD2wyY19zdG9yeV9zdGFydBIQ",
          "CghzdGFnZV9pZBgBIAEoBRIhCgZyZXN1bHQYAiABKA4yES5TdGFnZVN0YXJ0",
          "UmVzdWx0IuMBChBjMmxfc3RvcnlfcmVzdWx0EhAKCHN0YWdlX2lkGAEgASgF",
          "EhUKDXBsb3RfY29tcGxldGUYAiABKAgSFQoNZmluc2hlZF9jb3VudBgDIAEo",
          "BRINCgVub2RlcxgEIAMoBRIfCgttdXRleF9ub2RlcxgFIAMoCzIKLk11dGV4",
          "Tm9kZRImCgtyYW5kb21faW5mbxgHIAEoCzIRLlJhbmRvbVN0YWdlSW5kZXgS",
          "IwoOY29tYmF0ZV9yZXN1bHQYDiABKAsyCy5Db21iYXRJbmZvEhIKCnNldHRs",
          "ZW1lbnQYDyABKAUinAEKEGwyY19zdG9yeV9yZXdhcmQSIAoIZWxlbWVudHMY",
          "ASADKAsyDi5QVEdhbWVFbGVtZW50EjkKD2NoYXJhY3Rlcl9sZXZlbBgCIAMo",
          "CzIgLmwyY19zdG9yeV9yZXdhcmQuQ2hhcmFjdGVyTGV2ZWwaKwoOQ2hhcmFj",
          "dGVyTGV2ZWwSCgoCaWQYASABKAUSDQoFbGV2ZWwYAiABKAUiTgoRYzJsX3N0",
          "YXJfdHJlYXN1cmUSDwoHY2hhcHRlchgBIAEoBRISCgpkaWZmY3VsdGx5GAIg",
          "ASgFEhQKDHRyZWFzdXJlX251bRgDIAMoBSJGChFsMmNfc3Rhcl90cmVhc3Vy",
          "ZRITCgt0cmVhc3VyZV9pZBgBIAMoBRIcCgRlbGVzGAIgAygLMg4uUFRHYW1l",
          "RWxlbWVudCIxCg5jMmxfc3RvcnlfZmFzdBIQCghzdGFnZV9pZBgBIAEoBRIN",
          "CgV0aW1lcxgCIAEoBSI1Cg5sMmNfc3RvcnlfZmFzdBIjCghlbGVtZW50cxgB",
          "IAMoCzIRLmwyY19zdG9yeV9yZXdhcmQiJgoSYzJsX3N0b3J5X2FkZF9jbnRz",
          "EhAKCHN0b3J5X2lkGAEgASgFIrcCChhjMmxfc3RyZW5ndGhlbl9lcXVpcG1l",
          "bnQSLwoHb3BfdHlwZRgBIAEoDjIeLmMybF9zdHJlbmd0aGVuX2VxdWlwbWVu",
          "dC5UeXBlEhQKDGVxdWlwbWVudF9pZBgCIAEoBRI5Cgtjb25zdW1hYmxlcxgD",
          "IAMoCzIkLmMybF9zdHJlbmd0aGVuX2VxdWlwbWVudC5Db25zdW1hYmxlGjEK",
          "CkNvbnN1bWFibGUSDwoHaXRlbV9pZBgBIAEoBRISCgppdGVtX2NvdW50GAIg",
          "ASgFImYKBFR5cGUSHQoZU1RSRU5HVEhFTl9UWVBFX1JBSVNFX0VYUBAAEh4K",
          "GlNUUkVOR1RIRU5fVFlQRV9SQUlTRV9TVEFSEAESHwobU1RSRU5HVEhFTl9U",
          "WVBFX1JBSVNFX1NUQUdFEAIiuQEKGGwyY19zdHJlbmd0aGVuX2VxdWlwbWVu",
          "dBIUCgxlcXVpcG1lbnRfaWQYASABKAUSMAoGcmVzdWx0GAIgASgOMiAubDJj",
          "X3N0cmVuZ3RoZW5fZXF1aXBtZW50LlJlc3VsdCJVCgZSZXN1bHQSHQoZU1RS",
          "RU5HVEhFTl9SRVNVTFRfU1VDQ0VFRBAAEiwKKFNUUkVOR1RIRU5fUkVTVUxU",
          "X0NPTlNVTUFCTEVTX0RFRklDSUVOQ1kQASKJAQoVYzJsX3N1YmxpbWVfZXF1",
          "aXBtZW50EjQKCmVxdWlwbWVudHMYASADKAsyIC5jMmxfc3VibGltZV9lcXVp",
          "cG1lbnQuRXF1aXBtZW50GjoKCUVxdWlwbWVudBIUCgxlcXVpcG1lbnRfaWQY",
          "ASABKAUSFwoPZXF1aXBtZW50X2NvdW50GAIgASgFIpcBChVsMmNfc3VibGlt",
          "ZV9lcXVpcG1lbnQSLQoGcmVzdWx0GAEgASgOMh0ubDJjX3N1YmxpbWVfZXF1",
          "aXBtZW50LlJlc3VsdCJPCgZSZXN1bHQSGgoWU1VCTElNRV9SRVNVTFRfU1VD",
          "Q0VFRBAAEikKJVNVQkxJTUVfUkVTVUxUX0NPTlNVTUFCTEVTX0RFRklDSUVO",
          "Q1kQASKyAQoYYzJsX3N5bnRoZXNpemVfZXF1aXBtZW50EhQKDGVxdWlwbWVu",
          "dF9pZBgBIAEoBRISCgp0YWlsb3JfaWR4GAIgASgFEjkKC2NvbnN1bWFibGVz",
          "GAMgAygLMiQuYzJsX3N5bnRoZXNpemVfZXF1aXBtZW50LkNvbnN1bWFibGUa",
          "MQoKQ29uc3VtYWJsZRIPCgdpdGVtX2lkGAEgASgFEhIKCml0ZW1fY291bnQY",
          "AiABKAUitQIKGGwyY19zeW50aGVzaXplX2VxdWlwbWVudBIwCgZyZXN1bHQY",
          "AiABKA4yIC5sMmNfc3ludGhlc2l6ZV9lcXVpcG1lbnQuUmVzdWx0IuYBCgZS",
          "ZXN1bHQSJAogU1lOVEhFU0laRV9SRVNVTFRfTk9STUFMX1NVQ0NFRUQQABIh",
          "Ch1TWU5USEVTSVpFX1JFU1VMVF9CSUdfU1VDQ0VFRBABEh4KGlNZTlRIRVNJ",
          "WkVfUkVTVUxUX1NVUlBSSVNFEAISIwofU1lOVEhFU0laRV9SRVNVTFRfTk9S",
          "TUFMX0ZBSUxFRBADEiAKHFNZTlRIRVNJWkVfUkVTVUxUX05PX0ZPUk1VTEEQ",
          "BBIsCihTWU5USEVTSVpFX1JFU1VMVF9DT05TVU1BQkxFU19ERUZJQ0lFTkNZ",
          "EAUi4QIKEWMybF9lcXVpcF9vdXRmaXRzEi8KDGNoYXJfb3V0Zml0cxgBIAMo",
          "CzIZLmMybF9lcXVpcF9vdXRmaXRzLk91dGZpdBqaAgoGT3V0Zml0EhQKDGNo",
          "YXJhY3Rlcl9pZBgBIAEoBRISCgpmaXJzdF9oYWlyGAYgASgFEhIKCmZpcnN0",
          "X2ZhY2UYByABKAUSEwoLZmlyc3RfZHJlc3MYCCABKAUSEwoLZmlyc3RfY2hl",
          "c3QYCSABKAUSEgoKZmlyc3RfY2FwZRgKIAEoBRITCgtmaXJzdF9leHRyYRgL",
          "IAEoBRITCgtzZWNvbmRfaGFpchgMIAEoBRITCgtzZWNvbmRfZmFjZRgNIAEo",
          "BRIUCgxzZWNvbmRfZHJlc3MYDiABKAUSFAoMc2Vjb25kX2NoZXN0GA8gASgF",
          "EhMKC3NlY29uZF9jYXBlGBAgASgFEhQKDHNlY29uZF9leHRyYRgRIAEoBSJA",
          "Cg1FcXVpcFN1aXRJbmZvEg8KB3N1aXRfaWQYASABKAUSDQoFbm9kZXMYAiAD",
          "KAUSDwoHYWN0aXZlcxgDIAMoBSIsCgxsMmNfc3VpdF91cGQSHAoEc3VpdBgB",
          "IAEoCzIOLkVxdWlwU3VpdEluZm8iDwoNYzJsX3N1aXRfaW5pdCIuCg1sMmNf",
          "c3VpdF9pbml0Eh0KBXN1aXRzGAEgAygLMg4uRXF1aXBTdWl0SW5mbyIiCg9j",
          "Mmxfc3VpdF9yZXdhcmQSDwoHc3VpdF9pZBgBIAEoBSIvCg9sMmNfc3VpdF9y",
          "ZXdhcmQSHAoEZWxlcxgBIAMoCzIOLlBUR2FtZUVsZW1lbnQimAEKFWMybF9j",
          "aGFyYWN0ZXJfdXBsZXZlbBIUCgxjaGFyYWN0ZXJfaWQYASABKAUSNgoLY29u",
          "c3VtYWJsZXMYAiADKAsyIS5jMmxfY2hhcmFjdGVyX3VwbGV2ZWwuQ29uc3Vt",
          "YWJsZRoxCgpDb25zdW1hYmxlEg8KB2l0ZW1faWQYASABKAUSEgoKaXRlbV9j",
          "b3VudBgCIAEoBSKzAQoVbDJjX2NoYXJhY3Rlcl91cGxldmVsEhQKDGNoYXJh",
          "Y3Rlcl9pZBgBIAEoBRItCgZyZXN1bHQYAiABKA4yHS5sMmNfY2hhcmFjdGVy",
          "X3VwbGV2ZWwuUmVzdWx0IlUKBlJlc3VsdBIdChlDSEFSQUNURVJfVVBMRVZF",
          "TF9TVUNDRUVEEAASLAooQ0hBUkFDVEVSX1VQTEVWRUxfQ09OU1VNQUJMRVNf",
          "REVGSUNJRU5DWRABIlsKDkRhaWx5U3RhZ2VJbmZvEgwKBHR5cGUYASABKAUS",
          "HAoUcmVtYWluY2hhbGxlbmdlY291bnQYAiABKAUSHQoJc3RhZ2VMaXN0GAMg",
          "AygLMgouU3RhZ2VJbmZvIjcKCVN0YWdlSW5mbxIKCgJpZBgBIAEoBRINCgVz",
          "dGF0ZRgCIAEoBRIPCgdzdGFybnVtGAMgAygFIhYKFGMybF9kYWlseV9zdGFn",
          "ZV9pbml0IlQKFGwyY19kYWlseV9zdGFnZV9pbml0EhEKCW9wZW50eXBlcxgB",
          "IAMoBRIpChBkYWlseV9zdGFnZV9pbmZvGAIgAygLMg8uRGFpbHlTdGFnZUlu",
          "Zm8iIwoPYzJsX2RhaWx5X3N0YXJ0EhAKCGRhaWx5X2lkGAEgASgFIjMKD2wy",
          "Y19kYWlseV9zdGFydBIQCghkYWlseV9pZBgBIAEoBRIOCgZyZXN1bHQYAiAB",
          "KAgiYwoNbDJjX2RhaWx5X3VwZBIMCgR0eXBlGAEgASgFEhAKCGRhaWx5X2lk",
          "GAIgASgFEg0KBXN0YXRlGAMgASgFEhQKDG5Db21iYXRsaW1pdBgEIAEoBRIN",
          "CgVzdGFycxgFIAMoBSI4ChJsMmNfZGFpbHlfY250c191cGQSDAoEdHlwZRgB",
          "IAEoBRIUCgxuQ29tYmF0bGltaXQYBCABKAUiZQoQYzJsX2RhaWx5X3Jlc3Vs",
          "dBIQCghkYWlseV9pZBgBIAEoBRIMCgR0eXBlGAIgASgFEg0KBXN0YXJzGAMg",
          "AygFEhEKCWtpbGxucGNpZBgEIAMoBRIPCgdwaGFsYW54GAUgAygFIjEKDmMy",
          "bF9kYWlseV9mYXN0EhAKCGRhaWx5X2lkGAEgASgFEg0KBXRpbWVzGAIgASgF",
          "IjUKDmwyY19kYWlseV9mYXN0EiMKCGVsZW1lbnRzGAEgAygLMhEubDJjX2Rh",
          "aWx5X3Jlc3VsdCLnAQoQbDJjX2RhaWx5X3Jlc3VsdBI5Cg9jaGFyYWN0ZXJf",
          "bGV2ZWwYAiADKAsyIC5sMmNfZGFpbHlfcmVzdWx0LkNoYXJhY3RlckxldmVs",
          "EjEKC25wY19lbGVtZW50GAMgAygLMhwubDJjX2RhaWx5X3Jlc3VsdC5OcGNF",
          "bGVtZW50GisKDkNoYXJhY3RlckxldmVsEgoKAmlkGAEgASgFEg0KBWxldmVs",
          "GAIgASgFGjgKCk5wY0VsZW1lbnQSCgoCaWQYASABKAUSHgoGcmV3YXJkGAIg",
          "AygLMg4uUFRHYW1lRWxlbWVudCJqCg9jMmxfdXBkX3BoYWxhbngSKwoHb3Bf",
          "aW5mbxgBIAMoCzIaLmMybF91cGRfcGhhbGFueC5PcGVyYXRpb24aKgoJT3Bl",
          "cmF0aW9uEgoKAmlkGAEgASgFEhEKCWlucGhhbGFueBgCIAEoCCK4AgoPU2lu",
          "Z2xlU3RhZ2VJbmZvEgwKBHJvbGUYASABKAUSEQoJc3RhZ2VfaWR4GAIgASgF",
          "EhEKCWlzX2ZpbmlzaBgDIAEoCBIQCghzdGFnZV9pZBgEIAEoBRIRCgljZmdf",
          "cm91bmQYCyABKAUSEgoKY2ZnX2F0dHlwZRgMIAEoCRISCgpjZmdfbnBjc2V0",
          "GA0gASgJEhgKEGNmZ19zcGVjaWFsX2J1ZmYYDiABKAkSFwoPY2ZnX25wY19k",
          "aXNwbGF5GA8gASgJEhkKEWNmZ193aW5fY29uZGl0aW9uGBAgASgJEhgKEGNm",
          "Z19zcGVjaWFsX3RleHQYESABKAUSGgoSY2ZnX2ZhaWxfY29uZGl0aW9uGBIg",
          "ASgJEiAKGGNmZ19iZ21fY2hhbmdlX2NvbmRpdGlvbhgTIAEoCSJwChRTaW5n",
          "bGVTdGFnZUxhc3RBd2FyZBIPCgdyb2xlX2lkGAEgASgFEh4KBmF3YXJkcxgC",
          "IAMoCzIOLlBUR2FtZUVsZW1lbnQSFQoNbGFzdF9zdGFnZV9pZBgDIAEoBRIQ",
          "Cghpc19hd2FyZBgEIAEoCCIYChZjMmxfc2luZ2xlX2NvbWJhdF9pbml0Ip8C",
          "ChZsMmNfc2luZ2xlX2NvbWJhdF9pbml0EjkKCXJvbGVfaW5mbxgBIAMoCzIm",
          "LmwyY19zaW5nbGVfY29tYmF0X2luaXQuU2luZ2xlUm9sZUluZm8SKgoLbGFz",
          "dF9yZXdhcmQYAiADKAsyFS5TaW5nbGVTdGFnZUxhc3RBd2FyZBITCgtyZW1h",
          "aW5fc2VjcxgDIAEoBRqIAQoOU2luZ2xlUm9sZUluZm8SDwoHcm9sZV9pZBgB",
          "IAEoBRIVCg1idWZmX2VxdWlwX2lkGAIgAygFEhUKDW1heF9zdGFnZV9pZHgY",
          "AyABKAUSJAoKc3RhZ2VfaW5mbxgEIAEoCzIQLlNpbmdsZVN0YWdlSW5mbxIR",
          "Cglpc19jaG9vc2UYBSABKAgiKwoXYzJsX3NpbmdsZV9jb21iYXRfc3RhcnQS",
          "EAoIc3RhZ2VfaWQYASABKAUiOwoXbDJjX3NpbmdsZV9jb21iYXRfc3RhcnQS",
          "EAoIc3RhZ2VfaWQYASABKAUSDgoGcmVzdWx0GAIgASgIIjwKGGMybF9zaW5n",
          "bGVfY29tYmF0X3Jlc3VsdBIQCghzdGFnZV9pZBgBIAEoBRIOCgZyZXN1bHQY",
          "AiABKAgiTAoYbDJjX3NpbmdsZV9jb21iYXRfcmVzdWx0EhAKCHN0YWdlX2lk",
          "GAEgASgFEh4KBnJld2FyZBgCIAMoCzIOLlBUR2FtZUVsZW1lbnQiYQoUbDJj",
          "X3NpbmdsZV9zdGFnZV91cGQSEAoIc3RhZ2VfaWQYASABKAUSEQoJaXNfZmlu",
          "aXNoGAIgASgIEiQKCnN0YWdlX2luZm8YAyABKAsyEC5TaW5nbGVTdGFnZUlu",
          "Zm8iJAoRYzJsX3NpbmdsZV9yZXdhcmQSDwoHcm9sZV9pZBgBIAMoBSJfChFs",
          "MmNfc2luZ2xlX3Jld2FyZBIeCgZhd2FyZHMYASADKAsyDi5QVEdhbWVFbGVt",
          "ZW50EioKC2xhc3RfcmV3YXJkGAIgAygLMhUuU2luZ2xlU3RhZ2VMYXN0QXdh",
          "cmQiZQoSbDJjX2VuZ2FnZW1lbnRfdXBkEgoKAmlkGAEgASgFEh8KBXN0YXRl",
          "GAIgASgOMhAuRW5nYWdlbWVudFN0YXRlEg0KBW5vZGVzGAMgAygFEhMKC3Vu",
          "bG9ja190aW1lGAQgASgDIiMKE2MybF9lbmdhZ2VtZW50X2luaXQSDAoEcm9s",
          "ZRgBIAEoBSJyChNsMmNfZW5nYWdlbWVudF9pbml0EgwKBHJvbGUYASABKAUS",
          "EgoKdG90YWxfcGFnZRgCIAEoBRIQCghwYWdlX251bRgDIAEoBRInCgplbmdh",
          "Z2VtZW50GAQgAygLMhMubDJjX2VuZ2FnZW1lbnRfdXBkIkAKFWMybF9lbmdh",
          "Z2VtZW50X3VubG9jaxIKCgJpZBgBIAEoBRIbCgNlbGUYAiABKAsyDi5QVEdh",
          "bWVFbGVtZW50Ii0KFGMybF9zdGFydF9lbmdhZ2VtZW50EhUKDWVuZ2FnZW1l",
          "bnRfaWQYASABKAUiPQoUbDJjX3N0YXJ0X2VuZ2FnZW1lbnQSFQoNZW5nYWdl",
          "bWVudF9pZBgBIAEoBRIOCgZyZXN1bHQYAiABKAgixwEKE2MybF9lbmRzX2Vu",
          "Z2FnZW1lbnQSFQoNZW5nYWdlbWVudF9pZBgBIAEoBRIUCgxmaW5pc2hfY291",
          "bnQYAiABKAUSFQoNY2hvb3NlZF9ub2RlcxgDIAMoDRIoCgVnaWZ0cxgEIAMo",
          "CzIZLmMybF9lbmRzX2VuZ2FnZW1lbnQuZ2lmdBIfCgttdXRleF9ub2RlcxgF",
          "IAMoCzIKLk11dGV4Tm9kZRohCgRnaWZ0EgoKAmlkGAEgASgFEg0KBWNvdW50",
          "GAIgASgFInUKE2wyY19lbmRzX2VuZ2FnZW1lbnQSFQoNZW5nYWdlbWVudF9p",
          "ZBgBIAEoBRITCgtmYXZvcl9sZXZlbBgCIAEoBRIRCglmYXZvcl9leHAYAyAB",
          "KAUSHwoHcmV3YXJkcxgEIAMoCzIOLlBUR2FtZUVsZW1lbnQiTAoRRmlzaGlu",
          "Z0VxdWlwbWVudHMSEwoLZmlzaGluZ19yb2QYASABKAUSDAoEYmFpdBgCIAEo",
          "BRIUCgxjaGFyYWN0ZXJfaWQYAyABKAUiVQoORmlzaFJlY29yZERhdGESDwoH",
          "ZmlzaF9pZBgBIAEoBRIOCgZhbW91bnQYAiABKAUSEAoIbWluX3NpemUYAyAB",
          "KAUSEAoIbWF4X3NpemUYBCABKAUiDwoNYzJsX2Zpc2hfaW5mbyJrCg1sMmNf",
          "ZmlzaF9pbmZvEhUKDWZpc2hpbmdfbGV2ZWwYASABKAUSEwoLZmlzaGluZ19l",
          "eHAYAiABKAUSLgoSZmlzaGluZ19lcXVpcG1lbnRzGAMgASgLMhIuRmlzaGlu",
          "Z0VxdWlwbWVudHMiWQoPbDJjX2Zpc2hfcmVjb3JkEhIKCnRvdGFsX3BhZ2UY",
          "ASABKAUSEAoIcGFnZV9udW0YAiABKAUSIAoHcmVjb3JkcxgDIAMoCzIPLkZp",
          "c2hSZWNvcmREYXRhIjcKE2wyY19maXNoX3JlY29yZF91cGQSIAoHcmVjb3Jk",
          "cxgBIAEoCzIPLkZpc2hSZWNvcmREYXRhIkwKGmMybF91cGRfZmlzaGluZ19l",
          "cXVpcG1lbnRzEi4KEmZpc2hpbmdfZXF1aXBtZW50cxgBIAEoCzISLkZpc2hp",
          "bmdFcXVpcG1lbnRzImoKEWMybF9zdGFydF9maXNoaW5nEhUKDWZpc2hpbmdf",
          "c3BhY2UYASABKAUSJgoLcmFuZG9tX2luZm8YAiABKAsyES5SYW5kb21TdGFn",
          "ZUluZGV4EhYKDmlzX3JhbmRvbV9pbml0GAMgASgIIm8KEWwyY19zdGFydF9m",
          "aXNoaW5nEhUKDWZpc2hpbmdfc3BhY2UYASABKAUSDgoGcmVzdWx0GAIgASgI",
          "Eg8KB2Zpc2hfaWQYAyABKAUSDQoFZmF2b3IYBCABKAUSEwoLcmVtYWluX3Nl",
          "Y3MYBiABKAMiVAoTYzJsX2Zpc2hpbmdfc3VjY2VzcxIVCg1maXNoaW5nX3Nw",
          "YWNlGAEgASgFEiYKC3JhbmRvbV9pbmZvGAIgASgLMhEuUmFuZG9tU3RhZ2VJ",
          "bmRleCKXAQoTbDJjX2Zpc2hpbmdfc3VjY2VzcxIVCg1maXNoaW5nX3NwYWNl",
          "GAEgASgFEg8KB2Zpc2hfaWQYAiABKAUSEQoJZmlzaF9zaXplGAMgASgFEh8K",
          "B3Jld2FyZHMYBCADKAsyDi5QVEdhbWVFbGVtZW50Eg8KB3Byb2Nlc3MYBiAB",
          "KAUSEwoLcmVtYWluX3NlY3MYByABKAMiUwoZYzJsX3JhbmRvbV9maXNoaW5n",
          "X3Jlc3VsdBImCgtyYW5kb21faW5mbxgBIAEoCzIRLlJhbmRvbVN0YWdlSW5k",
          "ZXgSDgoGcmVzdWx0GAIgASgIIkwKGWwyY19yYW5kb21fZmlzaGluZ19yZXN1",
          "bHQSDgoGcmVzdWx0GAEgASgIEh8KB3Jld2FyZHMYAiADKAsyDi5QVEdhbWVF",
          "bGVtZW50IhcKFWMybF9lbmN5Y2xvcGVkaWFfaW5pdCJiChVsMmNfZW5jeWNs",
          "b3BlZGlhX2luaXQSEgoKdG90YWxfcGFnZRgBIAEoBRIQCghwYWdlX251bRgC",
          "IAEoBRIOCgZ2YWx1ZXMYAyADKAUSEwoLcmVhZF92YWx1ZXMYBCADKAUiKAoU",
          "bDJjX2VuY3ljbG9wZWRpYV91cGQSEAoIbmV3X25vZGUYASABKAUiKgoVYzJs",
          "X2VuY3ljbG9wZWRpYV9yZWFkEhEKCXJlYWRfbm9kZRgBIAMoBSJcCg5sMmNf",
          "d2VjaGF0X21zZxIKCgJpZBgBIAEoBRIMCgR0aW1lGAMgASgDEhAKCGNvbXBs",
          "ZXRlGAQgASgIEg0KBW5vZGVzGAUgAygFEg8KB2Nob2ljZXMYBiADKAUiXgoQ",
          "bDJjX3dlY2hhdF92b2ljZRIKCgJpZBgBIAEoBRIMCgR0aW1lGAMgASgDEhAK",
          "CGNvbXBsZXRlGAQgASgFEg0KBW5vZGVzGAUgAygFEg8KB2Nob2ljZXMYBiAD",
          "KAUivwEKG2wyY193ZWNoYXRfb2ZmaWNpYWxfYWNjb3VudBIKCgJpZBgBIAEo",
          "BRIPCgdpc19yZWFkGAIgASgIEgwKBHRpbWUYAyABKAMSNQoHdGFwaW5mbxgG",
          "IAMoCzIkLmwyY193ZWNoYXRfb2ZmaWNpYWxfYWNjb3VudC5UYXBJbmZvGj4K",
          "B1RhcEluZm8SDwoHY29tbWVudBgBIAEoBRIPCgd0YXBfbnVtGAIgASgFEhEK",
          "CXRhcF9zdGF0ZRgDIAEoCCIRCg9jMmxfd2VjaGF0X2luaXQiXQoTbDJjX3dl",
          "Y2hhdF9tc2dfaW5pdBISCgp0b3RhbF9wYWdlGAEgASgFEhAKCHBhZ2VfbnVt",
          "GAIgASgFEiAKB3JlY29yZHMYAyADKAsyDy5sMmNfd2VjaGF0X21zZyJhChVs",
          "MmNfd2VjaGF0X3ZvaWNlX2luaXQSEgoKdG90YWxfcGFnZRgBIAEoBRIQCghw",
          "YWdlX251bRgCIAEoBRIiCgdyZWNvcmRzGAMgAygLMhEubDJjX3dlY2hhdF92",
          "b2ljZSJ3CiBsMmNfd2VjaGF0X29mZmljaWFsX2FjY291bnRfaW5pdBISCgp0",
          "b3RhbF9wYWdlGAEgASgFEhAKCHBhZ2VfbnVtGAIgASgFEi0KB3JlY29yZHMY",
          "AyADKAsyHC5sMmNfd2VjaGF0X29mZmljaWFsX2FjY291bnQiUgoSYzJsX3dl",
          "Y2hhdF9tc2dfdXBkEgoKAmlkGAEgASgFEhAKCGNvbXBsZXRlGAIgASgIEg0K",
          "BW5vZGVzGAMgAygFEg8KB2Nob2ljZXMYBCADKAUiVAoUYzJsX3dlY2hhdF92",
          "b2ljZV91cGQSCgoCaWQYASABKAUSEAoIY29tcGxldGUYAiABKAUSDQoFbm9k",
          "ZXMYAyADKAUSDwoHY2hvaWNlcxgEIAMoBSJiCh9jMmxfd2VjaGF0X29mZmlj",
          "aWFsX2FjY291bnRfdXBkEgoKAmlkGAEgASgFEg8KB2NvbW1lbnQYAiABKAUS",
          "EQoJdGFwX3N0YXRlGAMgASgIEg8KB2lzX3JlYWQYBCABKAgijwEKGGwyY193",
          "ZWNoYXRfbmlja25hbWVfaW5pdBI/CgluaWNrbmFtZXMYASADKAsyLC5sMmNf",
          "d2VjaGF0X25pY2tuYW1lX2luaXQuV2VjaGF0Tmlja05hbWVJbmZvGjIKEldl",
          "Y2hhdE5pY2tOYW1lSW5mbxIKCgJpZBgBIAEoBRIQCghuaWNrbmFtZRgCIAEo",
          "CSI6ChpjMmxfd2VjaGF0X25pY2tuYW1lX3JlbmFtZRIKCgJpZBgBIAEoBRIQ",
          "CghuaWNrbmFtZRgCIAEoCSI4ChpsMmNfd2VjaGF0X25pY2tuYW1lX3JlbmFt",
          "ZRIKCgJpZBgBIAEoBRIOCgZyZXN1bHQYAiABKAUiMwobYzJsX2dlbmVyYXRl",
          "X3JlY2hhcmdlX29yZGVyEhQKDGNvbW1vZGl0eV9pZBgBIAEoBSJxChtsMmNf",
          "Z2VuZXJhdGVfcmVjaGFyZ2Vfb3JkZXISFAoMYXBwX29yZGVyX25vGAEgASgJ",
          "EhUKDXRocm91Z2hfcGFyYW0YAiABKAkSDwoHaXNfdGVzdBgDIAEoCBIUCgxj",
          "b21tb2RpdHlfaWQYBCABKAUiTAoWbDJjX3JlY2hhcmdlX29yZGVyX3VwZBIU",
          "CgxhcHBfb3JkZXJfbm8YASABKAkSHAoEZWxlcxgCIAMoCzIOLlBUR2FtZUVs",
          "ZW1lbnQi8QEKFmwyY19yZWNoYXJnZV9nb29kc191cGQSOQoIc3VtX2luZm8Y",
          "ASADKAsyJy5sMmNfcmVjaGFyZ2VfZ29vZHNfdXBkLlN1bVJlY2hhcmdlSW5m",
          "bxIUCgxkb3VibGVfZ29vZHMYAiADKAUSDwoHaXNfY29zdBgDIAEoCBp1Cg9T",
          "dW1SZWNoYXJnZUluZm8SEQoJYWN0aXZlX2lkGAEgASgFEhEKCXN1bV9tb25l",
          "eRgCIAEoAxIUCgxjYW5fYXdhcmRfaWQYAyADKAUSFAoMb3duX2F3YXJkX2lk",
          "GAQgAygFEhAKCGRlYWRsaW5lGAUgASgDIhkKF2MybF9yZWNoYXJnZV9nb29k",
          "c19pbml0IkEKF2wyY19yZWNoYXJnZV9nb29kc19pbml0EiYKBWdvb2RzGAEg",
          "ASgLMhcubDJjX3JlY2hhcmdlX2dvb2RzX3VwZCJBChpjMmxfcmVjaGFyZ2Vf",
          "Z2V0X3N1bV9hd2FyZBIRCglhY3RpdmVfaWQYASABKAUSEAoIYXdhcmRfaWQY",
          "AiABKAUiTAoabDJjX3JlY2hhcmdlX2dldF9zdW1fYXdhcmQSDgoGcmVzdWx0",
          "GAEgASgIEh4KBmF3YXJkcxgCIAMoCzIOLlBUR2FtZUVsZW1lbnQiFwoVYzJs",
          "X2lvc19yZWNoYXJnZV9pbml0IiwKFWwyY19pb3NfcmVjaGFyZ2VfaW5pdBIT",
          "CgtpZF90b19jbG9zZRgBIAMoCSJCChpjMmxfcmVjaGFyZ2VfY29tbW9kaXR5",
          "X2FzaxIUCgxjb21tb2RpdHlfaWQYASABKAkSDgoGcXV0aXR5GAIgASgFImUK",
          "GmwyY19yZWNoYXJnZV9jb21tb2RpdHlfcmVwEgwKBGFibGUYASABKAgSFAoM",
          "Y29tbW9kaXR5X2lkGAIgASgJEg4KBnF1dGl0eRgDIAEoBRITCgtvcmRlcl9p",
          "bmRleBgEIAEoCSLuAQoQYzJsX2lvc19yZWNoYXJnZRIVCg10b3RhbF9wYWNr",
          "YWdlGAEgASgFEhUKDXBhY2thZ2VfaW5kZXgYAiABKAUSEQoJcGF5X3Rva2Vu",
          "GAMgASgJEjUKCWlkX2Nsb3NlZBgEIAMoCzIiLmMybF9pb3NfcmVjaGFyZ2Uu",
          "dHJhbnNhY3Rpb25faW5mbxpiChB0cmFuc2FjdGlvbl9pbmZvEhYKDnRyYW5z",
          "YWN0aW9uX2lkGAEgASgJEhQKDGNvbW1vZGl0eV9pZBgCIAEoCRILCgNudW0Y",
          "AyABKAUSEwoLb3JkZXJfaW5kZXgYBCABKAkiegoUbDJjX2lvc19yZWNoYXJn",
          "ZV9yZXASKwoPcmVjaGFyZ2VfcmVzdWx0GAEgASgOMhIuSU9TUmVjaGFyZ2VS",
          "ZXN1bHQSFwoPdHJhbnNhY3Rpb25faWRzGAIgAygJEhwKBGVsZXMYAyADKAsy",
          "Di5QVEdhbWVFbGVtZW50IjAKF2MybF9pb3NfcmVjaGFyZ2VfY2xvc2VkEhUK",
          "DW9yZGVyX2RlbGV0ZWQYASADKAkiRgoXYzJsX21pbmlnYW1lX2Nsb3RoX3N0",
          "YXISCgoCaWQYASABKA0SDQoFbGV2ZWwYAiABKA0SEAoIY2xvdGhfaWQYAyAD",
          "KAUiUAofbDJjX3NlbmRfbWluaWdhbWVfY2xvdGhfc3VjY2VzcxIfCgdyZXdh",
          "cmRzGAEgAygLMg4uUFRHYW1lRWxlbWVudBIMCgRzdGFyGAIgASgNIlIKFEJy",
          "YW5jaG1vZGVsRGFpbHlSYWlkEhAKCG1heHRpbWVzGAEgASgFEhYKDnJlbWFp",
          "bmluZ3RpbWVzGAIgASgFEhAKCG9wZW5kYXlzGAMgAygFIj0KFUJyYW5jaG1v",
          "ZGVsU2luZ2xlUmFpZBITCgtjaG9vc2VkX251bRgBIAEoBRIPCgdtYXhfbnVt",
          "GAIgASgFIhcKFWMybF9zdGFnZV9icmFuY2htb2RlbCLEAQoVbDJjX3N0YWdl",
          "X2JyYW5jaG1vZGVsEicKCGNvaW5yYWlkGAEgASgLMhUuQnJhbmNobW9kZWxE",
          "YWlseVJhaWQSJgoHZXhwcmFpZBgCIAEoCzIVLkJyYW5jaG1vZGVsRGFpbHlS",
          "YWlkEioKC2h1Y2hlbmdyYWlkGAMgASgLMhUuQnJhbmNobW9kZWxEYWlseVJh",
          "aWQSLgoOaW5kaXZpZHVhbHJhaWQYBCABKAsyFi5CcmFuY2htb2RlbFNpbmds",
          "ZVJhaWQiLAoKU3RvcmVHb29kcxIPCgdnb29kX2lkGAEgASgFEg0KBWNvdW50",
          "GAIgASgFIk4KDVN0b3JlUGFja2FnZXMSEgoKcGFja2FnZV9pZBgBIAEoBRIT",
          "CgtyZW1haW5fY250cxgCIAEoBRIUCgxyZWZyZXNoX3NlY3MYAyABKAUiIwoO",
          "YzJsX3N0b3JlX2luaXQSEQoJc3RvcmVfaWRzGAEgAygFInQKDWwyY19zdG9y",
          "ZV91cGQSEAoIc3RvcmVfaWQYASABKAUSEwoLcmVtYWludGltZXMYAiABKAUS",
          "GgoFZ29vZHMYAyADKAsyCy5TdG9yZUdvb2RzEiAKCHBhY2thZ2VzGAQgAygL",
          "Mg4uU3RvcmVQYWNrYWdlcyIvCg5sMmNfc3RvcmVfaW5pdBIdCgVpbmZvcxgB",
          "IAMoCzIOLmwyY19zdG9yZV91cGQiQgoNYzJsX3N0b3JlX2J1eRIQCghzdG9y",
          "ZV9pZBgBIAEoBRISCgpjb250ZW50X2lkGAIgASgFEgsKA251bRgDIAEoBSIf",
          "Cg1sMmNfc3RvcmVfYnV5Eg4KBnJlc3VsdBgBIAEoCCJDChNsMmNfc3RvcmVf",
          "Z29vZHNfdXBkEhAKCHN0b3JlX2lkGAEgASgFEhoKBWdvb2RzGAIgASgLMgsu",
          "U3RvcmVHb29kcyJKChVsMmNfc3RvcmVfcGFja2FnZV91cGQSEAoIc3RvcmVf",
          "aWQYASABKAUSHwoHcGFja2FnZRgCIAEoCzIOLlN0b3JlUGFja2FnZXMiLgoJ",
          "R3VpZGVJbmZvEhEKCXNlY3Rpb25JRBgBIAEoBRIOCgZzdGVwSUQYAiABKAUi",
          "EAoOYzJsX2d1aWRlX2luaXQiKwoObDJjX2d1aWRlX2luaXQSGQoFZ3VpZGUY",
          "ASADKAsyCi5HdWlkZUluZm8iLgoRYzJsX2d1aWRlX3NlY3Rpb24SGQoFZ3Vp",
          "ZGUYASABKAsyCi5HdWlkZUluZm8ihgIKCE1haWxJbmZvEgoKAmlkGAEgASgF",
          "Eg4KBnNlbmRlchgCIAEoCRINCgV0aXRsZRgDIAEoCRIPCgdjb250ZW50GAQg",
          "ASgJEhMKC2NyZWF0ZV90aW1lGAUgASgDEhAKCGR1ZV90aW1lGAYgASgDEhIK",
          "CmlzX2ZvcmV2ZXIYByABKAgSDwoHaXNfcmVhZBgIIAEoCBIPCgdpc19ob2xk",
          "GAkgASgIEhMKC3JlYWRfZGVsZXRlGAogASgIEiIKCmF0dGFjaG1lbnQYCyAD",
          "KAsyDi5QVEdhbWVFbGVtZW50EhIKCmlzX2NvbGxlY3QYDCABKAgSFAoMY291",
          "bnRlcl90aWNrGA0gASgFIg8KDWMybF9tYWlsX2luaXQiTwoNbDJjX21haWxf",
          "aW5pdBISCgp0b3RhbF9wYWdlGAEgASgFEhAKCHBhZ2VfbnVtGAIgASgFEhgK",
          "BW1haWxzGAMgAygLMgkuTWFpbEluZm8iOwoNYzJsX21haWxfcmVhZBIeCghv",
          "cHRfdHlwZRgBIAEoDjIMLk1haWxPcHRUeXBlEgoKAmlkGAIgASgFIjsKDWwy",
          "Y19tYWlsX3JlYWQSHgoIb3B0X3R5cGUYASABKA4yDC5NYWlsT3B0VHlwZRIK",
          "CgJpZBgDIAMoBSIoCg1sMmNfbWFpbF9zZW5kEhcKBG1haWwYASABKAsyCS5N",
          "YWlsSW5mbyJyCgpOb3RpY2VJbmZvEgoKAmlkGAEgASgNEhIKCnN0YXJ0X3Rp",
          "bWUYAyABKAQSEAoIZW5kX3RpbWUYBCABKAQSEgoKY3ljbGVfdGltZRgFIAEo",
          "DRINCgV0aXRsZRgGIAEoCRIPCgdjb250ZW50GAcgASgJIhEKD2MybF9ub3Rp",
          "Y2VfaW5pdCIvCg9sMmNfbm90aWNlX2luaXQSHAoHbm90aWNlcxgDIAEoCzIL",
          "Lk5vdGljZUluZm8iLgoPbDJjX25vdGljZV9zZW5kEhsKBm5vdGljZRgBIAEo",
          "CzILLk5vdGljZUluZm8ijQQKD0V4cGxvcmF0aW9uSW5mbxINCgVpbmRleBgB",
          "IAEoBRISCgptaXNzaW9uX2lkGAIgASgFEhQKDGNoYXJhY3Rlcl9pZBgDIAEo",
          "BRIOCgZzdGF0dXMYBCABKAUSEgoKZmluc2hfc2VjcxgFIAEoBRIUCgxyZWZy",
          "ZXNoX3NlY3MYBiABKAUSFAoMcmVmcmVzaF90aW1lGAcgASgDEiwKCGNoaWxk",
          "cmVuGAggAygLMhouRXhwbG9yYXRpb25JbmZvLkNoaWxkSW5mbxITCgtza2ls",
          "bF9jYXJkcxgJIAMoBRpnChJFeHBsb3JhdGlvbkVsZW1lbnQSHwoFZVR5cGUY",
          "ASABKA4yEC5HYW1lRWxlbWVudFR5cGUSCwoDbklEGAIgASgFEg4KBm5Db3Vu",
          "dBgDIAEoBRITCgtuRXh0cmFDb3VudBgEIAEoBRrEAQoJQ2hpbGRJbmZvEhEK",
          "CWV2ZW50X2lkeBgBIAEoBRISCgptaXNzaW9uX2lkGAIgASgFEhMKC3JlbWFp",
          "bl9zZWNzGAQgASgFEhAKCGVuZF90aW1lGAUgASgDEjIKBWl0ZW1zGAYgAygL",
          "MiMuRXhwbG9yYXRpb25JbmZvLkV4cGxvcmF0aW9uRWxlbWVudBI1CghzcGVp",
          "Y2FscxgHIAMoCzIjLkV4cGxvcmF0aW9uSW5mby5FeHBsb3JhdGlvbkVsZW1l",
          "bnQiNAoZbDJjX2V4cGxvcmF0aW9uX2NhcmRzX3VwZBIXCg9vd25fc2tpbGxf",
          "Y2FyZHMYASADKAUiFgoUYzJsX2V4cGxvcmF0aW9uX2luaXQiYwoUbDJjX2V4",
          "cGxvcmF0aW9uX2luaXQSDgoGcmVzdWx0GAEgASgFEiIKCG1pc3Npb25zGAIg",
          "AygLMhAuRXhwbG9yYXRpb25JbmZvEhcKD293bl9za2lsbF9jYXJkcxgDIAMo",
          "BSJnChVjMmxfZXhwbG9yYXRpb25fc3RhcnQSDQoFaW5kZXgYASABKAUSFAoM",
          "Y2hhcmFjdGVyX2lkGAIgASgFEhQKDHJlZnJlc2hfdGltZRgDIAEoAxITCgtz",
          "a2lsbF9jYXJkcxgEIAMoBSJKChVsMmNfZXhwbG9yYXRpb25fc3RhcnQSIQoH",
          "bWlzc2lvbhgBIAEoCzIQLkV4cGxvcmF0aW9uSW5mbxIOCgZyZXN1bHQYAiAB",
          "KAUiOAoTbDJjX2V4cGxvcmF0aW9uX3VwZBIhCgdtaXNzaW9uGAEgASgLMhAu",
          "RXhwbG9yYXRpb25JbmZvIjkKFWMybF9leHBsb3JhdGlvbl9hd2FyZBINCgVp",
          "bmRleBgBIAEoBRIRCglvcGVyX3R5cGUYAiABKAUiWQoVbDJjX2V4cGxvcmF0",
          "aW9uX2F3YXJkEiEKB21pc3Npb24YASABKAsyEC5FeHBsb3JhdGlvbkluZm8S",
          "HQoFaXRlbXMYAiADKAsyDi5QVEdhbWVFbGVtZW50IhUKE2MybF9zZXZlbmxv",
          "Z2luX2luaXQiRwoVbDJjX3NldmVubG9naW5fcmV3YXJkEg0KBWRheWlkGAEg",
          "ASgFEh8KB3Jld2FyZHMYAiADKAsyDi5QVEdhbWVFbGVtZW50It0BCg9sMmNf",
          "b3B0aW9uc191cGQSFgoOb3duX2hlYWRfZnJhbWUYASADKAUSFgoOb3duX2Jh",
          "Y2tncm91bmQYAiADKAUSFgoOb3duX2hlYWRfaW1hZ2UYAyADKAUSFwoPaXNf",
          "Zmlyc3RfcmVuYW1lGAQgASgIEhYKDmN1cl9oZWFkX2ZyYW1lGAUgASgFEhYK",
          "DmN1cl9oZWFkX2ltYWdlGAYgASgFEhYKDmN1cl9iYWNrZ3JvdW5kGAcgASgF",
          "EhEKCXBob25lX251bRgIIAEoCRIOCgZyZXdhcmQYCSABKAgiEgoQYzJsX29w",
          "dGlvbnNfaW5pdCIzChBsMmNfb3B0aW9uc19pbml0Eh8KBWluZm9zGAUgASgL",
          "MhAubDJjX29wdGlvbnNfdXBkIj8KEmMybF9vcHRpb25zX21vZGlmeRIaCgR0",
          "eXBlGAEgASgOMgwuT3B0aW9uc1R5cGUSDQoFdmFsdWUYAiABKAkiJwoSbDJj",
          "X29wdGlvbnNfbW9kaWZ5EhEKCWlzX3Jlc3VsdBgBIAEoCCI5Cg9jMmxfb3B0",
          "aW9uc19idXkSGgoEdHlwZRgBIAEoDjIMLk9wdGlvbnNUeXBlEgoKAmlkGAIg",
          "ASgFIiQKD2wyY19vcHRpb25zX2J1eRIRCglpc19yZXN1bHQYASABKAgiHQob",
          "YzJsX29wdGlvbnNfZGl5X2hlYWRpbWdfdXBkIjYKEGMybF9sb3R0ZXJ5X2Nv",
          "c3QSDwoHcG9vbF9pZBgBIAEoBRIRCgljb3N0X2NudHMYAiABKAUizgEKEGwy",
          "Y19sb3R0ZXJ5X2Nvc3QSLAoHcmVzdWx0cxgBIAMoCzIbLmwyY19sb3R0ZXJ5",
          "X2Nvc3QuR2FjaGFJbmZvEhEKCWlzX2VuYWJsZRgCIAEoCBIOCgZyZXN1bHQY",
          "AyABKAUaaQoJR2FjaGFJbmZvEg0KBWluZGV4GAEgASgFEh0KBWl0ZW1zGAIg",
          "ASgLMg4uUFRHYW1lRWxlbWVudBIeCgZhdHRhY2gYAyADKAsyDi5QVEdhbWVF",
          "bGVtZW50Eg4KBmlzX25ldxgEIAEoCCI0Cg9jMmxfbG90dGVyeV9hZGQSDwoH",
          "cG9vbF9pZBgBIAEoBRIQCghhZGRfY250cxgCIAEoBSJVCg9sMmNfbG90dGVy",
          "eV9hZGQSHwoHdGlja2V0cxgBIAMoCzIOLlBUR2FtZUVsZW1lbnQSEQoJaXNf",
          "ZW5hYmxlGAIgASgIEg4KBnJlc3VsdBgDIAEoBSJLChRsMmNfbG90dGVyeV9w",
          "b29sX3VwZBIPCgdwb29sX2lkGAEgASgFEhAKCGVuZF9zZWNzGAIgASgFEhAK",
          "CGVuZF90aW1lGAMgASgDIhcKFWMybF9sb3R0ZXJ5X3Bvb2xfaW5pdCI9ChVs",
          "MmNfbG90dGVyeV9wb29sX2luaXQSJAoFaW5mb3MYASADKAsyFS5sMmNfbG90",
          "dGVyeV9wb29sX3VwZCKJAgoPbDJjX3NpZ25faW5fdXBkEhEKCWN1cl9tb250",
          "aBgBIAEoBRIPCgdjdXJfZGF5GAIgASgFEjMKC21vbnRoX2NhcmRzGAMgAygL",
          "Mh4ubDJjX3NpZ25faW5fdXBkLk1vbnRoQ2FyZEluZm8SHAoEZWxlcxgFIAMo",
          "CzIOLlBUR2FtZUVsZW1lbnQSHQoFbW9udGgYBiADKAsyDi5QVEdhbWVFbGVt",
          "ZW50GmAKDU1vbnRoQ2FyZEluZm8SFQoNbW9udGhfY2FyZF9pZBgBIAEoBRIb",
          "ChNtb250aF9jYXJkX2VuZF90aW1lGAMgASgDEhsKE21vbnRoX2NhcmRfZW5k",
          "X3NlY3MYBCABKAUiEgoQYzJsX3NpZ25faW5faW5pdCJYChBsMmNfc2lnbl9p",
          "bl9pbml0EhIKCnB1bmNoX2RheXMYASADKAUSEAoIaXNfcHVuY2gYAiABKAgS",
          "HgoEaW5mbxgDIAEoCzIQLmwyY19zaWduX2luX3VwZCIWChRjMmxfYWNoaWV2",
          "ZW1lbnRfaW5pdCJtChpsMmNfYWNoaWV2ZW1lbnRfc3RhZ2VfaW5pdBISCgp0",
          "b3RhbF9wYWdlGAEgASgFEhAKCHBhZ2VfbnVtGAIgASgFEikKBXN0YWdlGAMg",
          "AygLMhoubDJjX2FjaGlldmVtZW50X3N0YWdlX3VwZCIuChpjMmxfYWNoaWV2",
          "ZW1lbnRfZ2V0X3Jld2FyZBIQCghzdGFnZV9pZBgBIAEoBSJPChpsMmNfYWNo",
          "aWV2ZW1lbnRfZ2V0X3Jld2FyZBIQCghzdGFnZV9pZBgBIAEoBRIfCgdyZXdh",
          "cmRzGAIgAygLMg4uUFRHYW1lRWxlbWVudCIaChhjMmxfYWNoaWV2ZW1lbnRf",
          "bGV2ZWxfdXAiTgoYbDJjX2FjaGlldmVtZW50X2xldmVsX3VwEhEKCW5ld19s",
          "ZXZlbBgBIAEoBRIfCgdyZXdhcmRzGAIgAygLMg4uUFRHYW1lRWxlbWVudCI1",
          "ChNsMmNfYWNoaWV2ZW1lbnRfdXBkEhEKCW5vd19sZXZlbBgBIAEoBRILCgNl",
          "eHAYAiABKAUitgEKGWwyY19hY2hpZXZlbWVudF9zdGFnZV91cGQSEAoIc3Rh",
          "Z2VfaWQYASABKAUSFgoOY29tcGxldGVfY291bnQYAiABKAUSIgoGc3RhdHVz",
          "GAMgASgOMhIuQWNoaWV2ZW1lbnRTdGF0dXMSFQoNY29tcGxldGVfdGltZRgE",
          "IAEoAxIbChNjb21wbGV0ZV9wcm9wb3J0aW9uGAUgASgFEhcKD3Byb2dyZXNz",
          "X3RhcmdldBgGIAEoBSIVChNjMmxfZGFpbHlfdGFza19pbml0Io4BChNsMmNf",
          "ZGFpbHlfdGFza19pbml0EhIKCnRvdGFsX3BhZ2UYASABKAUSEAoIcGFnZV9u",
          "dW0YAiABKAUSIQoEdGFzaxgDIAMoCzITLmwyY19kYWlseV90YXNrX3VwZBIS",
          "CgphY3RpdmVfbnVtGAQgASgFEhoKEnRyaWdnZXJfYWN0aXZlX251bRgFIAEo",
          "BSIsChljMmxfZGFpbHlfdGFza19nZXRfcmV3YXJkEg8KB3Rhc2tfaWQYASAB",
          "KAUiYQoZbDJjX2RhaWx5X3Rhc2tfZ2V0X3Jld2FyZBIPCgd0YXNrX2lkGAEg",
          "ASgFEh8KB3Jld2FyZHMYAiADKAsyDi5QVEdhbWVFbGVtZW50EhIKCmFjdGl2",
          "ZV9udW0YAyABKAUihAEKEmwyY19kYWlseV90YXNrX3VwZBIPCgd0YXNrX2lk",
          "GAEgASgFEhYKDmNvbXBsZXRlX2NvdW50GAIgASgFEiAKBnN0YXR1cxgDIAEo",
          "DjIQLkRhaWx5VGFza1N0YXR1cxITCgtyZW1haW5fdGltZRgEIAEoBRIOCgZ0",
          "YXJnZXQYBSABKAUiSwoaYzJsX3Jlc291cmNlX3B1cmNoYXNlX2luaXQSIQoH",
          "dHlwZV9pZBgBIAEoDjIQLkdhbWVFbGVtZW50VHlwZRIKCgJpZBgCIAEoBSKA",
          "AQoabDJjX3Jlc291cmNlX3B1cmNoYXNlX2luaXQSFAoMcmVzb3VyY2VfbnVt",
          "GAEgASgFEgwKBGNvc3QYAiABKAUSIQoHdHlwZV9pZBgDIAEoDjIQLkdhbWVF",
          "bGVtZW50VHlwZRIKCgJpZBgEIAEoBRIPCgdyZXNfbnVtGAUgASgFIkoKGWMy",
          "bF9yZXNvdXJjZV9wdXJjaGFzZV9idXkSIQoHdHlwZV9pZBgBIAEoDjIQLkdh",
          "bWVFbGVtZW50VHlwZRIKCgJpZBgCIAEoBSIxChlsMmNfcmVzb3VyY2VfcHVy",
          "Y2hhc2VfYnV5EhQKDHN1Y2Nlc3NfZmxhZxgBIAEoBSIVChNjMmxfb250aW1l",
          "X3ZpdF9pbml0IkoKE2wyY19vbnRpbWVfdml0X2luaXQSIgoEdHlwZRgBIAEo",
          "DjIULk9udGltZVZpdFVwZGF0ZVR5cGUSDwoHdml0X251bRgCIAEoBSIVChNj",
          "Mmxfb250aW1lX3ZpdF9yZWN2IisKE2wyY19vbnRpbWVfdml0X3JlY3YSFAoM",
          "c3VjY2Vzc19mbGFnGAEgASgFIkkKEmwyY19vbnRpbWVfdml0X3VwZBIiCgR0",
          "eXBlGAEgASgOMhQuT250aW1lVml0VXBkYXRlVHlwZRIPCgd2aXRfbnVtGAIg",
          "ASgFIloKEGMybF91c2Vfdml0X3Byb3ASIwoJY29zdF90eXBlGAEgASgOMhAu",
          "R2FtZUVsZW1lbnRUeXBlEg8KB2Nvc3RfaWQYAiABKAUSEAoIY29zdF9udW0Y",
          "AyABKAUiKAoQbDJjX3VzZV92aXRfcHJvcBIUCgxzdWNjZXNzX2ZsYWcYASAB",
          "KAUiHQobYzJsX3RpbWVfbGltaXRfcGFja2FnZV9pbml0IkYKG2wyY190aW1l",
          "X2xpbWl0X3BhY2thZ2VfaW5pdBITCgtyZW1haW5fdGltZRgBIAEoBRISCgpw",
          "YWNrYWdlX2lkGAIgASgFIm0KGmwyY190aW1lX2xpbWl0X3BhY2thZ2VfdXBk",
          "EiYKBHR5cGUYASABKA4yGC5UaW1lTGltaXRQYWNrYWdlVXBkVHlwZRITCgty",
          "ZW1haW5fdGltZRgCIAEoBRISCgpwYWNrYWdlX2lkGAMgASgFIhoKGGMybF9j",
          "aGFwdGVyX3BhY2thZ2VfaW5pdCJHChhsMmNfY2hhcHRlcl9wYWNrYWdlX2lu",
          "aXQSKwoFaW5mb3MYASADKAsyHC5sMmNfdGltZV9saW1pdF9wYWNrYWdlX2lu",
          "aXQiOQoVYzJsX3ZhbHVlX3BhY2thZ2VfYnV5EgoKAmlkGAEgASgFEhQKDHBh",
          "Y2thZ2VfdHlwZRgCIAEoBSJJChVsMmNfdmFsdWVfcGFja2FnZV9idXkSDgoG",
          "cmVzdWx0GAEgASgIEiAKCHJld2VhcmRzGAIgAygLMg4uUFRHYW1lRWxlbWVu",
          "dCJ6ChdjMmxfYmluZF9waG9uZV9zZW5kX21zZxIRCglwaG9uZV9udW0YASAB",
          "KAkSCwoDdWlkGAIgASgJEg8KB3BhcHBfaWQYAyABKAkSDgoGYXBwX2lkGAQg",
          "ASgJEg4KBmNjaF9pZBgFIAEoCRIOCgZzb3VyY2UYBiABKAkiQQoXbDJjX2Jp",
          "bmRfcGhvbmVfc2VuZF9tc2cSFAoMc3VjY2Vzc19mbGFnGAEgASgIEhAKCGVy",
          "cl9jb2RlGAIgASgFIoYBChVjMmxfYmluZF9waG9uZV92ZXJpZnkSEQoJcGhv",
          "bmVfbnVtGAEgASgJEgsKA3VpZBgCIAEoCRIPCgdwYXBwX2lkGAMgASgJEg4K",
          "BmFwcF9pZBgEIAEoCRIOCgZjY2hfaWQYBSABKAkSDgoGc291cmNlGAYgASgJ",
          "EgwKBGNvZGUYByABKAkiXwoVbDJjX2JpbmRfcGhvbmVfdmVyaWZ5EhQKDHN1",
          "Y2Nlc3NfZmxhZxgBIAEoCBIQCghlcnJfY29kZRgCIAEoBRIeCgZhd2FyZHMY",
          "AyADKAsyDi5QVEdhbWVFbGVtZW50IhcKFWMybF92b2ljZV9yZXZpZXdfaW5p",
          "dCJiChVsMmNfdm9pY2VfcmV2aWV3X2luaXQSEgoKdG90YWxfcGFnZRgBIAEo",
          "BRIQCghwYWdlX251bRgCIAEoBRIOCgZ2YWx1ZXMYAyADKAUSEwoLcmVhZF92",
          "YWx1ZXMYBCADKAUiKAoUbDJjX3ZvaWNlX3Jldmlld191cGQSEAoIbmV3X25v",
          "ZGUYASABKAUiKgoVYzJsX3ZvaWNlX3Jldmlld19yZWFkEhEKCXJlYWRfbm9k",
          "ZRgBIAEoBSIRCg9jMmxfc3BlZWNoX2luaXQiJwoPbDJjX3NwZWVjaF9pbml0",
          "EhQKDHNwZWVjaF9jb3VudBgBIAEoBSJKChFjMmxfc3BlZWNoX3Jlc3VsdBIR",
          "CglzcGVlY2hfaWQYASABKAUSEQoJY2xvdGhfaWRzGAIgAygFEg8KB29wdGlv",
          "bnMYAyADKAUicAoRbDJjX3NwZWVjaF9yZXN1bHQSDQoFc2NvcmUYASABKAUS",
          "HgoGYXdhcmRzGAIgAygLMg4uUFRHYW1lRWxlbWVudBIUCgxhbGxfYmVzdF90",
          "YWcYAyABKAgSFgoOaGF2ZV93b3JzdF90YWcYBCABKAgiYQoERG9sbBIeCgR0",
          "eXBlGAEgASgOMhAuR2FtZUVsZW1lbnRUeXBlEgoKAmlkGAIgASgFEg0KBWNv",
          "dW50GAMgASgFEg0KBWluZGV4GAQgASgFEg8KB2RvbGxfaWQYBSABKAUiKQoT",
          "YzJsX2dyYWJfZG9sbF9zdGFydBISCgptYWNoaW5lX2lkGAEgASgFImcKE2wy",
          "Y19ncmFiX2RvbGxfc3RhcnQSEwoLcmVtYWluX3RpbWUYASABKAUSHgoPc3Vj",
          "Y2Vzc19kb2xsX2lkGAIgAygLMgUuRG9sbBIbCgxzaG93X2RvbGxfaWQYAyAD",
          "KAsyBS5Eb2xsIkoKFGMybF9ncmFiX2RvbGxfcmVzdWx0Eh4KD2dyYWJiZWRf",
          "ZG9sbF9pZBgBIAMoCzIFLkRvbGwSEgoKbWFjaGluZV9pZBgCIAEoBSI2ChRs",
          "MmNfZ3JhYl9kb2xsX3Jlc3VsdBIeCgZhd2FyZHMYASADKAsyDi5QVEdhbWVF",
          "bGVtZW50IhoKGGMybF9idXlfZ3JhYl9kb2xsX3RpY2tldCI6ChhsMmNfYnV5",
          "X2dyYWJfZG9sbF90aWNrZXQSHgoGYXdhcmRzGAEgAygLMg4uUFRHYW1lRWxl",
          "bWVudCIQCg5Qcm9maWxlTXNnRGF0YSIOCgxCYWRnZU1zZ0RhdGEiggEKFUZy",
          "aWVuZFJlbGF0aW9uTXNnRGF0YRIZChFhZGRfcmVsYXRpb25fdGltZRgBIAEo",
          "AxITCgt0b2RheV90aHVtYhgCIAEoCBIbChNyZWN2X2FjdGl2ZV9wYWNrYWdl",
          "GAMgASgIEhwKBGRhdGEYBCABKAsyDi5GcmllbmRNc2dEYXRhIv8CCg1Gcmll",
          "bmRNc2dEYXRhEhIKCmFjY291bnRfaWQYASABKA0SDAoEbmFtZRgCIAEoCRIN",
          "CgVsZXZlbBgDIAEoBRIRCglzaWduYXR1cmUYBSABKAkSDwoHcHJvZmlsZRgG",
          "IAEoBRIRCglvd25fYmFkZ2UYByADKAUSEgoKc2hvd19iYWRnZRgIIAMoBRIZ",
          "ChFhY2hpZXZlbWVudF9sZXZlbBgJIAEoBRISCgpmaXNoX2xldmVsGAogASgF",
          "EhgKEGxhc3Rfb25saW5lX3RpbWUYCyABKAMSFAoMdG9kYXlfYWN0aXZlGAwg",
          "ASgIEhIKCmJhY2tncm91bmQYDiABKAkSEQoJdGh1bWJfbnVtGA8gASgFEhYK",
          "DnByb2ZpbGVfY2lyY2xlGBEgASgFEhEKCWlzX29ubGluZRgTIAEoCBIUCgx0",
          "aXRsZV9wcmVmaXgYFCABKAUSFAoMdGl0bGVfbWlkZml4GBUgASgFEhUKDXRp",
          "dGxlX3Bvc3RmaXgYFiABKAUiEQoPYzJsX2ZyaWVuZF9pbml0IqcBCg9sMmNf",
          "ZnJpZW5kX2luaXQSEgoKdG90YWxfcGFnZRgBIAEoBRIQCghwYWdlX251bRgC",
          "IAEoBRIrCgtmcmllbmRfZGF0YRgDIAMoCzIWLkZyaWVuZFJlbGF0aW9uTXNn",
          "RGF0YRIqCgphcHBseV9kYXRhGAQgAygLMhYuRnJpZW5kUmVsYXRpb25Nc2dE",
          "YXRhEhUKDXJlY3ZfZ2lmdF9udW0YBSABKAUiJQoPYzJsX2ZyaWVuZF9maW5k",
          "EhIKCmFjY291bnRfaWQYASABKA0iNgoPbDJjX2ZyaWVuZF9maW5kEiMKC2Zy",
          "aWVuZF9kYXRhGAEgASgLMg4uRnJpZW5kTXNnRGF0YSIkCg5jMmxfZnJpZW5k",
          "X2FkZBISCgphY2NvdW50X2lkGAEgASgNIi4KDmwyY19mcmllbmRfYWRkEhwK",
          "BHR5cGUYASABKA4yDi5GcmllbmRSZXRUeXBlIicKEWMybF9mcmllbmRfZGVs",
          "ZXRlEhIKCmFjY291bnRfaWQYASABKA0iMQoRbDJjX2ZyaWVuZF9kZWxldGUS",
          "HAoEdHlwZRgBIAEoDjIOLkZyaWVuZFJldFR5cGUiJgoQYzJsX2ZyaWVuZF90",
          "aHVtYhISCgphY2NvdW50X2lkGAEgASgNIjAKEGwyY19mcmllbmRfdGh1bWIS",
          "HAoEdHlwZRgBIAEoDjIOLkZyaWVuZFJldFR5cGUiSgoWYzJsX2ZyaWVuZF9y",
          "ZXFfcGFja2FnZRIcCgR0eXBlGAEgASgOMg4uRnJpZW5kUmVxVHlwZRISCgph",
          "Y2NvdW50X2lkGAIgASgNInEKFmwyY19mcmllbmRfcmVxX3BhY2thZ2USHAoE",
          "dHlwZRgBIAEoDjIOLkZyaWVuZFJldFR5cGUSHgoGYXdhcmRzGAIgAygLMg4u",
          "UFRHYW1lRWxlbWVudBIZChFyZWN2ZWRfYWN0aXZlX251bRgDIAEoBSI6ChNs",
          "MmNfZnJpZW5kX2RhdGFfdXBkEiMKC2ZyaWVuZF9kYXRhGAEgASgLMg4uRnJp",
          "ZW5kTXNnRGF0YSIfCh1jMmxfZnJpZW5kX3BlcnNvbmFsX2RhdGFfaW5pdCKK",
          "AQodbDJjX2ZyaWVuZF9wZXJzb25hbF9kYXRhX2luaXQSHAoEZGF0YRgBIAEo",
          "CzIOLkZyaWVuZE1zZ0RhdGESGAoQcmVjdmVkX3RodW1iX251bRgCIAEoBRIW",
          "Cg5uZXh0X3RodW1iX251bRgDIAEoBRIZChFyZWN2ZWRfYWN0aXZlX251bRgE",
          "IAEoBSJcCh9jMmxfZnJpZW5kX3BlcnNvbmFsX2RhdGFfbW9kaWZ5EhEKCXNp",
          "Z25hdHVyZRgBIAEoCRISCgpzaG93X2JhZGdlGAIgAygFEhIKCmJhY2tncm91",
          "bmQYAyABKAkiPwofbDJjX2ZyaWVuZF9wZXJzb25hbF9kYXRhX21vZGlmeRIc",
          "CgR0eXBlGAEgASgOMg4uRnJpZW5kUmV0VHlwZSJNChRjMmxfZnJpZW5kX29w",
          "dF9hcHBseRIhCgR0eXBlGAEgASgOMhMuRnJpZW5kQXBwbHlPcHRUeXBlEhIK",
          "CmFjY291bnRfaWQYAiABKA0iNAoUbDJjX2ZyaWVuZF9vcHRfYXBwbHkSHAoE",
          "dHlwZRgBIAEoDjIOLkZyaWVuZFJldFR5cGUiPAocbDJjX2ZyaWVuZF9wZXJz",
          "b25hbF9kYXRhX3VwZBIcCgRkYXRhGAEgASgLMg4uRnJpZW5kTXNnRGF0YSI8",
          "ChRsMmNfZnJpZW5kX2FwcGx5X3VwZBIkCgRkYXRhGAEgASgLMhYuRnJpZW5k",
          "UmVsYXRpb25Nc2dEYXRhIigKEmwyY19mcmllbmRfZGVsX3VwZBISCgphY2Nv",
          "dW50X2lkGAEgASgNIhYKFGwyY19mcmllbmRfdGh1bWJfdXBkIm8KF2wybF9m",
          "cmllbmRfcmVsYXRpb25fdXBkEhYKDnNvdXJjZV9hY2NvdW50GAEgASgJEhwK",
          "BGRhdGEYAiABKAsyDi5GcmllbmRNc2dEYXRhEgsKA29wdBgDIAEoBRIRCglz",
          "b3VyY2VfaWQYBCABKA0iHgocYzJsX2ZyaWVuZF90aHVtYl9wYWNrYWdlX3Jl",
          "cSJ0ChxsMmNfZnJpZW5kX3RodW1iX3BhY2thZ2VfcmVxEhwKBHR5cGUYASAB",
          "KA4yDi5GcmllbmRSZXRUeXBlEh4KBmF3YXJkcxgCIAMoCzIOLlBUR2FtZUVs",
          "ZW1lbnQSFgoObmV4dF90aHVtYl9udW0YAyABKAUiPwoXbDJjX2ZyaWVuZF9y",
          "ZWxhdGlvbl91cGQSJAoEZGF0YRgBIAEoCzIWLkZyaWVuZFJlbGF0aW9uTXNn",
          "RGF0YSKmAQoPUmFuZG9tU3RhZ2VJbmZvEhIKCnN0YWdlX3R5cGUYASABKAUS",
          "CgoCaWQYAiABKAUSEQoJaXNfYWNjZXB0GAMgASgIEhMKC2NyZWF0ZV90aW1l",
          "GAUgASgDEhAKCGVuZF90aW1lGAYgASgDEhAKCGN1cl9zZWNzGAcgASgFEhEK",
          "CWludF9wYXJhbRgJIAMoBRIUCgxzdHJpbmdfcGFyYW0YCiADKAkiFwoVYzJs",
          "X3JhbmRvbV9zdGFnZV9pbml0IjgKFWwyY19yYW5kb21fc3RhZ2VfaW5pdBIf",
          "CgVpbmZvcxgBIAMoCzIQLlJhbmRvbVN0YWdlSW5mbyJZChRsMmNfcmFuZG9t",
          "X3N0YWdlX3VwZBIhCgRvcHRzGAEgASgOMhMuUmFuZG9tU3RhZ2VPcHRUeXBl",
          "Eh4KBGluZm8YAiABKAsyEC5SYW5kb21TdGFnZUluZm8iQgoZYzJsX3JhbmRv",
          "bV9zdGFnZV9wcm9ncmVzcxIQCghzdGFnZV9pZBgBIAEoBRITCgtjcmVhdGVf",
          "dGltZRgCIAEoAyIQCg5jMmxfdGl0bGVfaW5pdCJVCg5sMmNfdGl0bGVfaW5p",
          "dBIUCgxvd25fdGl0bGVfaWQYASADKAUSDgoGcHJlZml4GAIgASgFEg4KBm1p",
          "ZGZpeBgDIAEoBRINCgVwb2ZpeBgEIAEoBSJBChBjMmxfY2hhbmdlX3RpdGxl",
          "Eg4KBnByZWZpeBgBIAEoBRIOCgZtaWRmaXgYAiABKAUSDQoFcG9maXgYAyAB",
          "KAUiLgoQbDJjX2NoYW5nZV90aXRsZRIaCgNyZXQYASABKA4yDS5UaXRsZVJl",
          "dFR5cGUiKAoUbDJjX3VubG9ja190aXRsZV91cGQSEAoIdGl0bGVfaWQYASAB",
          "KAUiEAoOYzJsX3NoYXJlX2luaXQiLgoNbDJjX3NoYXJlX3VwZBIKCgJpZBgB",
          "IAEoBRIRCglpc19yZXdhcmQYAiABKAgiLwoObDJjX3NoYXJlX2luaXQSHQoF",
          "aW5mb3MYASADKAsyDi5sMmNfc2hhcmVfdXBkIh4KEGMybF9zaGFyZV9yZXdh",
          "cmQSCgoCaWQYASABKAUiQgoQbDJjX3NoYXJlX3Jld2FyZBIOCgZyZXN1bHQY",
          "ASABKAgSHgoGYXdhcmRzGAIgAygLMg4uUFRHYW1lRWxlbWVudCIQCg5jMmxf",
          "YmFkZ2VfaW5pdCI+Cg5sMmNfYmFkZ2VfaW5pdBIVCg1jdXJfYmFkZ2VfaWRz",
          "GAEgAygFEhUKDW93bl9iYWRnZV9pZHMYAiADKAUiGwoNbDJjX2JhZGdlX3Vw",
          "ZBIKCgJpZBgBIAEoBSIoChFjMmxfYmFkZ2VfY2hhbmdlZBITCgtjaGFuZ2Vk",
          "X2lkcxgBIAMoBSIjChFsMmNfYmFkZ2VfY2hhbmdlZBIOCgZyZXN1bHQYASAB",
          "KAgiFQoTYzJsX3JlcHV0YXRpb25faW5pdCLbAQoTbDJjX3JlcHV0YXRpb25f",
          "aW5pdBJDChRsYXN0X3dlZWtfcmVwdXRhdGlvbhgBIAMoCzIlLmwyY19yZXB1",
          "dGF0aW9uX2luaXQuTmF0aW9uUmVwdXRhdGlvbhIaChJpc19hd2FyZF90aGlz",
          "X3dlZWsYAiABKAgSHgoGYXdhcmRzGAMgAygLMg4uUFRHYW1lRWxlbWVudBIU",
          "Cgxjb3VudGVyX3RpY2sYBCABKAUaLQoQTmF0aW9uUmVwdXRhdGlvbhIKCgJp",
          "ZBgBIAEoBRINCgVsZXZlbBgCIAEoBSIeChxjMmxfcmVwdXRhdGlvbl9hY3Rp",
          "dml0eV9pbml0IkcKDlNwZWVjaEFjdGl2aXR5EgoKAmlkGAEgASgFEhQKDGNv",
          "dW50ZXJfdGljaxgCIAEoBRITCgtyZW1haW5fY250cxgDIAEoBSJGChxsMmNf",
          "cmVwdXRhdGlvbl9hY3Rpdml0eV9pbml0EiYKDWFjdGl2aXR5X2luZm8YASAD",
          "KAsyDy5TcGVlY2hBY3Rpdml0eSJFChtsMmNfcmVwdXRhdGlvbl9hY3Rpdml0",
          "eV91cGQSJgoNYWN0aXZpdHlfaW5mbxgBIAMoCzIPLlNwZWVjaEFjdGl2aXR5",
          "IhQKEmMybF91bmxvY2tfY2dfaW5pdCIiChFsMmNfdW5sb2NrX2NnX3JlcBIN",
          "CgVjZ19pZBgBIAMoBSIiChFsMmNfdW5sb2NrX2NnX3VwZBINCgVjZ19pZBgB",
          "IAMoBSIyChpjMmxfZ29vZ2xlX3B1cmNoYXNlX2NyZWF0ZRIUCgxjb21tb2Rp",
          "dHlfaWQYASABKAUiaQoabDJjX2dvb2dsZV9wdXJjaGFzZV9jcmVhdGUSFAoM",
          "YXBwX29yZGVyX25vGAEgASgFEg8KB2lzX3Rlc3QYAiABKAgSFAoMY29tbW9k",
          "aXR5X2lkGAMgASgFEg4KBnJlc3VsdBgEIAEoCCJqChljMmxfZ29vZ2xlX3B1",
          "cmNoYXNlX3Rva2VuEhIKCnByb2R1Y3RfaWQYASABKAkSDQoFdG9rZW4YAiAB",
          "KAkSFAoMY29tbW9kaXR5X2lkGAMgASgFEhQKDGFwcF9vcmRlcl9ubxgFIAEo",
          "BSJVChlsMmNfZ29vZ2xlX3B1cmNoYXNlX3Rva2VuEhQKDGFwcF9vcmRlcl9u",
          "bxgBIAEoBRISCgpwcm9kdWN0X2lkGAIgASgJEg4KBnJlc3VsdBgDIAEoCCp5",
          "ChFDaGFyYWN0ZXJPcFJlc3VsdBIMCghDT1JfTlVMTBAAEgoKBkNPUl9PSxAB",
          "EhUKEUNPUl9OQU1FX1RPT19MT05HEAISGQoVQ09SX0RCX0lOVEVSTkFMX0VS",
          "Uk9SEAQSGAoUQ09SX1BBU1NfV1JPTkdfRVJST1IQBSq8VQoKTG9naWNNc2dJ",
          "RBISCg5MT0dJQ19NU0dfTlVMTBAAEhkKE0xPR0lDX01TR19MMkNfRVJST1IQ",
          "4NQDEh0KF0xPR0lDX01TR19MMkNfTE9HT05fQVNLEP3TAxIfChlMT0dJQ19N",
          "U0dfQzJMX0xPR09OX1BST09GEP7TAxIdChdMT0dJQ19NU0dfTDJDX0xPR09O",
          "X1JFUBD/0wMSIQobTE9HSUNfTVNHX0wyQ19TVkNfRVhDRVBUSU9OEIHUAxIo",
          "CiJMT0dJQ19NU0dfQzJMX0NSRUFURV9DSEFSQUNURVJfUkVREIfUAxIoCiJM",
          "T0dJQ19NU0dfTDJDX0NSRUFURV9DSEFSQUNURVJfUkVQEIjUAxIgChpMT0dJ",
          "Q19NU0dfTDJDX05PX0NIQVJBQ1RFUhCJ1AMSGQoTTE9HSUNfTVNHX0wyQ19S",
          "RUFEWRCR1AMSGQoTTE9HSUNfTVNHX0MyTF9SRUFEWRCS1AMSHgoYTE9HSUNf",
          "TVNHX0wyQ19JTklUSUFMSVpFEJPUAxIjCh1MT0dJQ19NU0dfQzJMX0lOSVRJ",
          "QUxJWkVfSVRFTRCV1AMSIwodTE9HSUNfTVNHX0wyQ19JTklUSUFMSVpFX0lU",
          "RU0QltQDEiQKHkxPR0lDX01TR19DMkxfSU5JVElBTElaRV9FUVVJUBCY1AMS",
          "JAoeTE9HSUNfTVNHX0wyQ19JTklUSUFMSVpFX0VRVUlQEJnUAxIoCiJMT0dJ",
          "Q19NU0dfQzJMX0lOSVRJQUxJWkVfQ0hBUkFDVEVSEJvUAxIoCiJMT0dJQ19N",
          "U0dfTDJDX0lOSVRJQUxJWkVfQ0hBUkFDVEVSEJzUAxIiChxMT0dJQ19NU0df",
          "QzJMX0FERF9FTEVNRU5UX0dNEJ7UAxIiChxMT0dJQ19NU0dfTDJDX0FERF9F",
          "TEVNRU5UX0dNEJ/UAxIhChtMT0dJQ19NU0dfQzJMX1JFU0VUX0NOVFNfR00Q",
          "oNQDEiEKG0xPR0lDX01TR19MMkNfUkVTRVRfQ05UU19HTRCh1AMSJAoeTE9H",
          "SUNfTVNHX0MyTF9HRVRfQUxMX0NMT1RIX0dNEKLUAxIkCh5MT0dJQ19NU0df",
          "TDJDX0dFVF9BTExfQ0xPVEhfR00Qo9QDEh4KGExPR0lDX01TR19MMkNfVVBE",
          "X1BMQVlFUhCZ0wMSIQobTE9HSUNfTVNHX0wyQ19VUERfQ0hBUkFDVEVSEJrT",
          "AxIhChtMT0dJQ19NU0dfTDJDX1VQRF9FUVVJUE1FTlQQm9MDEhwKFkxPR0lD",
          "X01TR19MMkNfVVBEX0lURU0QnNMDEh4KGExPR0lDX01TR19MMkNfVVBEX05B",
          "VElPThCd0wMSHgoYTE9HSUNfTVNHX0MyTF9TVE9SWV9JTklUELXSAxIeChhM",
          "T0dJQ19NU0dfTDJDX1NUT1JZX0lOSVQQttIDEh0KF0xPR0lDX01TR19MMkNf",
          "U1RPUllfVVBEELfSAxIkCh5MT0dJQ19NU0dfQzJMX1NUT1JZX1NUQUdFX0lO",
          "SVQQuNIDEiQKHkxPR0lDX01TR19MMkNfU1RPUllfU1RBR0VfSU5JVBC50gMS",
          "HwoZTE9HSUNfTVNHX0MyTF9TVE9SWV9TVEFSVBC70gMSHwoZTE9HSUNfTVNH",
          "X0wyQ19TVE9SWV9TVEFSVBC80gMSIAoaTE9HSUNfTVNHX0MyTF9TVE9SWV9S",
          "RVNVTFQQvdIDEiIKHExPR0lDX01TR19DMkxfU1RPUllfQUREX0NOVFMQvtID",
          "EiAKGkxPR0lDX01TR19DMkxfQ0hBUFRFUl9JTklUEMDSAxIgChpMT0dJQ19N",
          "U0dfTDJDX0NIQVBURVJfSU5JVBDB0gMSHwoZTE9HSUNfTVNHX0wyQ19DSEFQ",
          "VEVSX1VQRBDC0gMSJwohTE9HSUNfTVNHX0MyTF9TVE9SWV9TVEFSX1RSRUFT",
          "VVJFEMPSAxInCiFMT0dJQ19NU0dfTDJDX1NUT1JZX1NUQVJfVFJFQVNVUkUQ",
          "xNIDEiAKGkxPR0lDX01TR19MMkNfU1RPUllfUkVXQVJEENLSAxIeChhMT0dJ",
          "Q19NU0dfQzJMX1NUT1JZX0ZBU1QQ09IDEh4KGExPR0lDX01TR19MMkNfU1RP",
          "UllfRkFTVBDU0gMSKAoiTE9HSUNfTVNHX0MyTF9TVFJFTkdUSEVOX0VRVUlQ",
          "TUVOVBDR0QMSKAoiTE9HSUNfTVNHX0wyQ19TVFJFTkdUSEVOX0VRVUlQTUVO",
          "VBDS0QMSJQofTE9HSUNfTVNHX0MyTF9TVUJMSU1FX0VRVUlQTUVOVBDV0QMS",
          "JQofTE9HSUNfTVNHX0wyQ19TVUJMSU1FX0VRVUlQTUVOVBDW0QMSKAoiTE9H",
          "SUNfTVNHX0MyTF9TWU5USEVTSVpFX0VRVUlQTUVOVBDY0QMSKAoiTE9HSUNf",
          "TVNHX0wyQ19TWU5USEVTSVpFX0VRVUlQTUVOVBDZ0QMSIQobTE9HSUNfTVNH",
          "X0MyTF9FUVVJUF9PVVRGSVRTENrRAxIdChdMT0dJQ19NU0dfQzJMX1NVSVRf",
          "SU5JVBDb0QMSHQoXTE9HSUNfTVNHX0wyQ19TVUlUX0lOSVQQ3NEDEh8KGUxP",
          "R0lDX01TR19DMkxfU1VJVF9SRVdBUkQQ3dEDEh8KGUxPR0lDX01TR19MMkNf",
          "U1VJVF9SRVdBUkQQ3tEDEhwKFkxPR0lDX01TR19MMkNfU1VJVF9VUEQQ39ED",
          "EiUKH0xPR0lDX01TR19DMkxfQ0hBUkFDVEVSX1VQTEVWRUwQ7dADEiUKH0xP",
          "R0lDX01TR19MMkNfQ0hBUkFDVEVSX1VQTEVWRUwQ7tADEiQKHkxPR0lDX01T",
          "R19DMkxfREFJTFlfU1RBR0VfSU5JVBCJ0AMSJAoeTE9HSUNfTVNHX0wyQ19E",
          "QUlMWV9TVEFHRV9JTklUEIrQAxIfChlMT0dJQ19NU0dfQzJMX0RBSUxZX1NU",
          "QVJUEIvQAxIfChlMT0dJQ19NU0dfTDJDX0RBSUxZX1NUQVJUEIzQAxIdChdM",
          "T0dJQ19NU0dfTDJDX0RBSUxZX1VQRBCN0AMSIAoaTE9HSUNfTVNHX0MyTF9E",
          "QUlMWV9SRVNVTFQQjtADEiAKGkxPR0lDX01TR19MMkNfREFJTFlfUkVTVUxU",
          "EI/QAxIeChhMT0dJQ19NU0dfQzJMX0RBSUxZX0ZBU1QQkNADEh4KGExPR0lD",
          "X01TR19MMkNfREFJTFlfRkFTVBCR0AMSIgocTE9HSUNfTVNHX0wyQ19EQUlM",
          "WV9DTlRTX1VQRBCS0AMSHwoZTE9HSUNfTVNHX0MyTF9VUERfUEhBTEFOWBCl",
          "zwMSJgogTE9HSUNfTVNHX0MyTF9TSU5HTEVfQ09NQkFUX0lOSVQQ3c0DEiYK",
          "IExPR0lDX01TR19MMkNfU0lOR0xFX0NPTUJBVF9JTklUEN7NAxInCiFMT0dJ",
          "Q19NU0dfQzJMX1NJTkdMRV9DT01CQVRfU1RBUlQQ4c0DEicKIUxPR0lDX01T",
          "R19MMkNfU0lOR0xFX0NPTUJBVF9TVEFSVBDizQMSKAoiTE9HSUNfTVNHX0My",
          "TF9TSU5HTEVfQ09NQkFUX1JFU1VMVBDjzQMSKAoiTE9HSUNfTVNHX0wyQ19T",
          "SU5HTEVfQ09NQkFUX1JFU1VMVBDkzQMSJAoeTE9HSUNfTVNHX0wyQ19TSU5H",
          "TEVfU1RBR0VfVVBEEOXNAxIhChtMT0dJQ19NU0dfQzJMX1NJTkdMRV9SRVdB",
          "UkQQ5s0DEiEKG0xPR0lDX01TR19MMkNfU0lOR0xFX1JFV0FSRBDnzQMSIgoc",
          "TE9HSUNfTVNHX0wyQ19FTkdBR0VNRU5UX1VQRBCxywMSIwodTE9HSUNfTVNH",
          "X0MyTF9FTkdBR0VNRU5UX0lOSVQQsssDEiMKHUxPR0lDX01TR19MMkNfRU5H",
          "QUdFTUVOVF9JTklUELPLAxIlCh9MT0dJQ19NU0dfQzJMX0VOR0FHRU1FTlRf",
          "VU5MT0NLELTLAxIkCh5MT0dJQ19NU0dfQzJMX1NUQVJUX0VOR0FHRU1FTlQQ",
          "t8sDEiQKHkxPR0lDX01TR19MMkNfU1RBUlRfRU5HQUdFTUVOVBC4ywMSIwod",
          "TE9HSUNfTVNHX0MyTF9FTkRTX0VOR0FHRU1FTlQQucsDEiMKHUxPR0lDX01T",
          "R19MMkNfRU5EU19FTkdBR0VNRU5UELrLAxIdChdMT0dJQ19NU0dfQzJMX0ZJ",
          "U0hfSU5GTxDNygMSHQoXTE9HSUNfTVNHX0wyQ19GSVNIX0lORk8QzsoDEh8K",
          "GUxPR0lDX01TR19MMkNfRklTSF9SRUNPUkQQz8oDEiMKHUxPR0lDX01TR19M",
          "MkNfRklTSF9SRUNPUkRfVVBEENHKAxIqCiRMT0dJQ19NU0dfQzJMX1VQRF9G",
          "SVNISU5HX0VRVUlQTUVOVFMQ0soDEiEKG0xPR0lDX01TR19DMkxfU1RBUlRf",
          "RklTSElORxDXygMSIQobTE9HSUNfTVNHX0wyQ19TVEFSVF9GSVNISU5HENjK",
          "AxIjCh1MT0dJQ19NU0dfQzJMX0ZJU0hJTkdfU1VDQ0VTUxDbygMSIwodTE9H",
          "SUNfTVNHX0wyQ19GSVNISU5HX1NVQ0NFU1MQ3MoDEikKI0xPR0lDX01TR19D",
          "MkxfUkFORE9NX0ZJU0hJTkdfUkVTVUxUEN/KAxIpCiNMT0dJQ19NU0dfTDJD",
          "X1JBTkRPTV9GSVNISU5HX1JFU1VMVBDgygMSJQofTE9HSUNfTVNHX0MyTF9F",
          "TkNZQ0xPUEVESUFfSU5JVBCFyQMSJQofTE9HSUNfTVNHX0wyQ19FTkNZQ0xP",
          "UEVESUFfSU5JVBCGyQMSJAoeTE9HSUNfTVNHX0wyQ19FTkNZQ0xPUEVESUFf",
          "VVBEEIfJAxIlCh9MT0dJQ19NU0dfQzJMX0VOQ1lDTE9QRURJQV9SRUFEEIjJ",
          "AxIfChlMT0dJQ19NU0dfQzJMX1dFQ0hBVF9JTklUEL3HAxIjCh1MT0dJQ19N",
          "U0dfTDJDX1dFQ0hBVF9NU0dfSU5JVBC/xwMSJQofTE9HSUNfTVNHX0wyQ19X",
          "RUNIQVRfVk9JQ0VfSU5JVBDAxwMSMAoqTE9HSUNfTVNHX0wyQ19XRUNIQVRf",
          "T0ZGSUNJQUxfQUNDT1VOVF9JTklUEMHHAxIeChhMT0dJQ19NU0dfTDJDX1dF",
          "Q0hBVF9NU0cQw8cDEiAKGkxPR0lDX01TR19MMkNfV0VDSEFUX1ZPSUNFEMTH",
          "AxIrCiVMT0dJQ19NU0dfTDJDX1dFQ0hBVF9PRkZJQ0lBTF9BQ0NPVU5UEMXH",
          "AxIiChxMT0dJQ19NU0dfQzJMX1dFQ0hBVF9NU0dfVVBEEMfHAxIkCh5MT0dJ",
          "Q19NU0dfQzJMX1dFQ0hBVF9WT0lDRV9VUEQQyMcDEi8KKUxPR0lDX01TR19D",
          "MkxfV0VDSEFUX09GRklDSUFMX0FDQ09VTlRfVVBEEMnHAxIoCiJMT0dJQ19N",
          "U0dfTDJDX1dFQ0hBVF9OSUNLTkFNRV9JTklUEMvHAxIqCiRMT0dJQ19NU0df",
          "QzJMX1dFQ0hBVF9OSUNLTkFNRV9SRU5BTUUQzMcDEioKJExPR0lDX01TR19M",
          "MkNfV0VDSEFUX05JQ0tOQU1FX1JFTkFNRRDNxwMSKwolTE9HSUNfTVNHX0My",
          "TF9HRU5FUkFURV9SRUNIQVJHRV9PUkRFUhD1xQMSKwolTE9HSUNfTVNHX0wy",
          "Q19HRU5FUkFURV9SRUNIQVJHRV9PUkRFUhD2xQMSJgogTE9HSUNfTVNHX0wy",
          "Q19SRUNIQVJHRV9PUkRFUl9VUEQQ98UDEiYKIExPR0lDX01TR19MMkNfUkVD",
          "SEFSR0VfR09PRFNfVVBEEPvFAxInCiFMT0dJQ19NU0dfQzJMX1JFQ0hBUkdF",
          "X0dPT0RTX0lOSVQQ/MUDEicKIUxPR0lDX01TR19MMkNfUkVDSEFSR0VfR09P",
          "RFNfSU5JVBD9xQMSKgokTE9HSUNfTVNHX0MyTF9SRUNIQVJHRV9HRVRfU1VN",
          "X0FXQVJEEP/FAxIqCiRMT0dJQ19NU0dfTDJDX1JFQ0hBUkdFX0dFVF9TVU1f",
          "QVdBUkQQgMYDEiUKH0xPR0lDX01TR19DMkxfSU9TX1JFQ0hBUkdFX0lOSVQQ",
          "g8YDEiUKH0xPR0lDX01TR19MMkNfSU9TX1JFQ0hBUkdFX0lOSVQQhMYDEioK",
          "JExPR0lDX01TR19DMkxfUkVDSEFSR0VfQ09NTU9ESVRZX0FTSxCFxgMSKgok",
          "TE9HSUNfTVNHX0wyQ19SRUNIQVJHRV9DT01NT0RJVFlfUkVQEIbGAxIgChpM",
          "T0dJQ19NU0dfQzJMX0lPU19SRUNIQVJHRRCHxgMSJAoeTE9HSUNfTVNHX0wy",
          "Q19JT1NfUkVDSEFSR0VfUkVQEIjGAxInCiFMT0dJQ19NU0dfQzJMX0lPU19S",
          "RUNIQVJHRV9DTE9TRUQQicYDEi8KKUxPR0lDX01TR19DMkxfTUlOSUdBTUVf",
          "Q0xPVEhDSEFOR0lOR19TVEFSEK3EAxIyCixMT0dJQ19NU0dfTDJDX01JTklH",
          "QU1FX0NMT1RIQ0hBTkdJTkdfU1VDQ0VTUxCuxAMSJQofTE9HSUNfTVNHX0My",
          "TF9TVEFHRV9CUkFOQ0hNT0RFTBDJwwMSJQofTE9HSUNfTVNHX0wyQ19TVEFH",
          "RV9CUkFOQ0hNT0RFTBDKwwMSHgoYTE9HSUNfTVNHX0MyTF9TVE9SRV9JTklU",
          "EOXCAxIeChhMT0dJQ19NU0dfTDJDX1NUT1JFX0lOSVQQ5sIDEh0KF0xPR0lD",
          "X01TR19MMkNfU1RPUkVfVVBEEOfCAxIdChdMT0dJQ19NU0dfQzJMX1NUT1JF",
          "X0JVWRDowgMSHQoXTE9HSUNfTVNHX0wyQ19TVE9SRV9CVVkQ6cIDEiMKHUxP",
          "R0lDX01TR19MMkNfU1RPUkVfR09PRFNfVVBEEOrCAxIlCh9MT0dJQ19NU0df",
          "TDJDX1NUT1JFX1BBQ0tBR0VfVVBEEOvCAxIeChhMT0dJQ19NU0dfQzJMX0dV",
          "SURFX0lOSVQQgcIDEh4KGExPR0lDX01TR19MMkNfR1VJREVfSU5JVBCCwgMS",
          "IQobTE9HSUNfTVNHX0MyTF9HVUlERV9TRUNUSU9OEIPCAxIdChdMT0dJQ19N",
          "U0dfQzJMX01BSUxfSU5JVBCdwQMSHQoXTE9HSUNfTVNHX0wyQ19NQUlMX0lO",
          "SVQQnsEDEh0KF0xPR0lDX01TR19DMkxfTUFJTF9SRUFEEJ/BAxIdChdMT0dJ",
          "Q19NU0dfTDJDX01BSUxfUkVBRBCgwQMSHQoXTE9HSUNfTVNHX0wyQ19NQUlM",
          "X1NFTkQQocEDEh8KGUxPR0lDX01TR19MMkNfTk9USUNFX0lOSVQQucADEh8K",
          "GUxPR0lDX01TR19MMkNfTk9USUNFX1NFTkQQusADEh8KGUxPR0lDX01TR19D",
          "MkxfTk9USUNFX0lOSVQQu8ADEiQKHkxPR0lDX01TR19DMkxfRVhQTE9SQVRJ",
          "T05fSU5JVBDVvwMSJAoeTE9HSUNfTVNHX0wyQ19FWFBMT1JBVElPTl9JTklU",
          "ENa/AxIlCh9MT0dJQ19NU0dfQzJMX0VYUExPUkFUSU9OX1NUQVJUENe/AxIl",
          "Ch9MT0dJQ19NU0dfTDJDX0VYUExPUkFUSU9OX1NUQVJUENi/AxIjCh1MT0dJ",
          "Q19NU0dfTDJDX0VYUExPUkFUSU9OX1VQRBDavwMSKQojTE9HSUNfTVNHX0wy",
          "Q19FWFBMT1JBVElPTl9DQVJEU19VUEQQ278DEiUKH0xPR0lDX01TR19DMkxf",
          "RVhQTE9SQVRJT05fQVdBUkQQ3L8DEiUKH0xPR0lDX01TR19MMkNfRVhQTE9S",
          "QVRJT05fQVdBUkQQ3b8DEiMKHUxPR0lDX01TR19DMkxfU0VWRU5MT0dJTl9J",
          "TklUEKm9AxIlCh9MT0dJQ19NU0dfTDJDX1NFVkVOTE9HSU5fUkVXQVJEEKq9",
          "AxIfChlMT0dJQ19NU0dfTDJDX09QVElPTlNfVVBEEOG7AxIgChpMT0dJQ19N",
          "U0dfQzJMX09QVElPTlNfSU5JVBDiuwMSIAoaTE9HSUNfTVNHX0wyQ19PUFRJ",
          "T05TX0lOSVQQ47sDEiIKHExPR0lDX01TR19DMkxfT1BUSU9OU19NT0RJRlkQ",
          "5bsDEiIKHExPR0lDX01TR19MMkNfT1BUSU9OU19NT0RJRlkQ5rsDEh8KGUxP",
          "R0lDX01TR19DMkxfT1BUSU9OU19CVVkQ6LsDEh8KGUxPR0lDX01TR19MMkNf",
          "T1BUSU9OU19CVVkQ6bsDEisKJUxPR0lDX01TR19DMkxfT1BUSU9OU19ESVlf",
          "SEVBRElNR19VUEQQ6rsDEiAKGkxPR0lDX01TR19DMkxfTE9UVEVSWV9DT1NU",
          "EJm6AxIgChpMT0dJQ19NU0dfTDJDX0xPVFRFUllfQ09TVBCaugMSHwoZTE9H",
          "SUNfTVNHX0MyTF9MT1RURVJZX0FERBCcugMSHwoZTE9HSUNfTVNHX0wyQ19M",
          "T1RURVJZX0FERBCdugMSJAoeTE9HSUNfTVNHX0wyQ19MT1RURVJZX1BPT0xf",
          "VVBEEJ+6AxIlCh9MT0dJQ19NU0dfQzJMX0xPVFRFUllfUE9PTF9JTklUEKC6",
          "AxIlCh9MT0dJQ19NU0dfTDJDX0xPVFRFUllfUE9PTF9JTklUEKG6AxIgChpM",
          "T0dJQ19NU0dfQzJMX1NJR05fSU5fSU5JVBDRuAMSIAoaTE9HSUNfTVNHX0wy",
          "Q19TSUdOX0lOX0lOSVQQ0rgDEh8KGUxPR0lDX01TR19MMkNfU0lHTl9JTl9V",
          "UEQQ07gDEiMKHUxPR0lDX01TR19DMkxfREFJTFlfVEFTS19JTklUEKS2AxIj",
          "Ch1MT0dJQ19NU0dfTDJDX0RBSUxZX1RBU0tfSU5JVBCltgMSKQojTE9HSUNf",
          "TVNHX0MyTF9EQUlMWV9UQVNLX0dFVF9SRVdBUkQQprYDEikKI0xPR0lDX01T",
          "R19MMkNfREFJTFlfVEFTS19HRVRfUkVXQVJEEKe2AxIiChxMT0dJQ19NU0df",
          "TDJDX0RBSUxZX1RBU0tfVVBEEKi2AxIkCh5MT0dJQ19NU0dfQzJMX0FDSElF",
          "VkVNRU5UX0lOSVQQwbUDEioKJExPR0lDX01TR19MMkNfQUNISUVWRU1FTlRf",
          "U1RBR0VfSU5JVBDCtQMSKgokTE9HSUNfTVNHX0MyTF9BQ0hJRVZFTUVOVF9H",
          "RVRfUkVXQVJEEMW1AxIqCiRMT0dJQ19NU0dfTDJDX0FDSElFVkVNRU5UX0dF",
          "VF9SRVdBUkQQxrUDEigKIkxPR0lDX01TR19DMkxfQUNISUVWRU1FTlRfTEVW",
          "RUxfVVAQyLUDEigKIkxPR0lDX01TR19MMkNfQUNISUVWRU1FTlRfTEVWRUxf",
          "VVAQybUDEiMKHUxPR0lDX01TR19MMkNfQUNISUVWRU1FTlRfVVBEEMu1AxIp",
          "CiNMT0dJQ19NU0dfTDJDX0FDSElFVkVNRU5UX1NUQUdFX1VQRBDMtQMSKgok",
          "TE9HSUNfTVNHX0MyTF9SRVNPVVJDRV9QVVJDSEFTRV9JTklUENy0AxIqCiRM",
          "T0dJQ19NU0dfTDJDX1JFU09VUkNFX1BVUkNIQVNFX0lOSVQQ3bQDEikKI0xP",
          "R0lDX01TR19DMkxfUkVTT1VSQ0VfUFVSQ0hBU0VfQlVZEN60AxIpCiNMT0dJ",
          "Q19NU0dfTDJDX1JFU09VUkNFX1BVUkNIQVNFX0JVWRDftAMSIAoaTE9HSUNf",
          "TVNHX0MyTF9VU0VfVklUX1BST1AQ4LQDEiAKGkxPR0lDX01TR19MMkNfVVNF",
          "X1ZJVF9QUk9QEOG0AxIjCh1MT0dJQ19NU0dfQzJMX09OVElNRV9WSVRfSU5J",
          "VBD4swMSIwodTE9HSUNfTVNHX0wyQ19PTlRJTUVfVklUX0lOSVQQ+bMDEiMK",
          "HUxPR0lDX01TR19DMkxfT05USU1FX1ZJVF9SRUNWEPqzAxIjCh1MT0dJQ19N",
          "U0dfTDJDX09OVElNRV9WSVRfUkVDVhD7swMSIgocTE9HSUNfTVNHX0wyQ19P",
          "TlRJTUVfVklUX1VQRBD8swMSKwolTE9HSUNfTVNHX0MyTF9USU1FX0xJTUlU",
          "X1BBQ0tBR0VfSU5JVBCUswMSKwolTE9HSUNfTVNHX0wyQ19USU1FX0xJTUlU",
          "X1BBQ0tBR0VfSU5JVBCVswMSKgokTE9HSUNfTVNHX0wyQ19USU1FX0xJTUlU",
          "X1BBQ0tBR0VfVVBEEJazAxIoCiJMT0dJQ19NU0dfQzJMX0NIQVBURVJfUEFD",
          "S0FHRV9JTklUEJizAxIoCiJMT0dJQ19NU0dfTDJDX0NIQVBURVJfUEFDS0FH",
          "RV9JTklUEJmzAxIlCh9MT0dJQ19NU0dfQzJMX1ZBTFVFX1BBQ0tBR0VfQlVZ",
          "EJqzAxIlCh9MT0dJQ19NU0dfTDJDX1ZBTFVFX1BBQ0tBR0VfQlVZEJuzAxIn",
          "CiFMT0dJQ19NU0dfQzJMX0JJTkRfUEhPTkVfU0VORF9NU0cQsLIDEicKIUxP",
          "R0lDX01TR19MMkNfQklORF9QSE9ORV9TRU5EX01TRxCxsgMSJQofTE9HSUNf",
          "TVNHX0MyTF9CSU5EX1BIT05FX1ZFUklGWRCysgMSJQofTE9HSUNfTVNHX0wy",
          "Q19CSU5EX1BIT05FX1ZFUklGWRCzsgMSJQofTE9HSUNfTVNHX0MyTF9WT0lD",
          "RV9SRVZJRVdfSU5JVBDNsQMSJQofTE9HSUNfTVNHX0wyQ19WT0lDRV9SRVZJ",
          "RVdfSU5JVBDOsQMSJAoeTE9HSUNfTVNHX0wyQ19WT0lDRV9SRVZJRVdfVVBE",
          "EM+xAxIlCh9MT0dJQ19NU0dfQzJMX1ZPSUNFX1JFVklFV19SRUFEENCxAxIf",
          "ChlMT0dJQ19NU0dfQzJMX1NQRUVDSF9JTklUEOiwAxIfChlMT0dJQ19NU0df",
          "TDJDX1NQRUVDSF9JTklUEOmwAxIhChtMT0dJQ19NU0dfQzJMX1NQRUVDSF9S",
          "RVNVTFQQ6rADEiEKG0xPR0lDX01TR19MMkNfU1BFRUNIX1JFU1VMVBDrsAMS",
          "IwodTE9HSUNfTVNHX0MyTF9HUkFCX0RPTExfU1RBUlQQhLADEiMKHUxPR0lD",
          "X01TR19MMkNfR1JBQl9ET0xMX1NUQVJUEIWwAxIkCh5MT0dJQ19NU0dfQzJM",
          "X0dSQUJfRE9MTF9SRVNVTFQQhrADEiQKHkxPR0lDX01TR19MMkNfR1JBQl9E",
          "T0xMX1JFU1VMVBCIsAMSKAoiTE9HSUNfTVNHX0MyTF9CVVlfR1JBQl9ET0xM",
          "X1RJQ0tFVBCJsAMSKAoiTE9HSUNfTVNHX0wyQ19CVVlfR1JBQl9ET0xMX1RJ",
          "Q0tFVBCKsAMSHwoZTE9HSUNfTVNHX0MyTF9GUklFTkRfSU5JVBCgrwMSHwoZ",
          "TE9HSUNfTVNHX0wyQ19GUklFTkRfSU5JVBChrwMSHwoZTE9HSUNfTVNHX0My",
          "TF9GUklFTkRfRklORBCirwMSHwoZTE9HSUNfTVNHX0wyQ19GUklFTkRfRklO",
          "RBCjrwMSHgoYTE9HSUNfTVNHX0MyTF9GUklFTkRfQUREEKSvAxIeChhMT0dJ",
          "Q19NU0dfTDJDX0ZSSUVORF9BREQQpa8DEiEKG0xPR0lDX01TR19DMkxfRlJJ",
          "RU5EX0RFTEVURRCmrwMSIQobTE9HSUNfTVNHX0wyQ19GUklFTkRfREVMRVRF",
          "EKevAxIgChpMT0dJQ19NU0dfQzJMX0ZSSUVORF9USFVNQhCorwMSIAoaTE9H",
          "SUNfTVNHX0wyQ19GUklFTkRfVEhVTUIQqa8DEiYKIExPR0lDX01TR19DMkxf",
          "RlJJRU5EX1JFUV9QQUNLQUdFEKqvAxImCiBMT0dJQ19NU0dfTDJDX0ZSSUVO",
          "RF9SRVFfUEFDS0FHRRCrrwMSIwodTE9HSUNfTVNHX0wyQ19GUklFTkRfREFU",
          "QV9VUEQQrK8DEi0KJ0xPR0lDX01TR19DMkxfRlJJRU5EX1BFUlNPTkFMX0RB",
          "VEFfSU5JVBCtrwMSLQonTE9HSUNfTVNHX0wyQ19GUklFTkRfUEVSU09OQUxf",
          "REFUQV9JTklUEK6vAxIvCilMT0dJQ19NU0dfQzJMX0ZSSUVORF9QRVJTT05B",
          "TF9EQVRBX01PRElGWRCvrwMSLwopTE9HSUNfTVNHX0wyQ19GUklFTkRfUEVS",
          "U09OQUxfREFUQV9NT0RJRlkQsK8DEiQKHkxPR0lDX01TR19DMkxfRlJJRU5E",
          "X09QVF9BUFBMWRCxrwMSJAoeTE9HSUNfTVNHX0wyQ19GUklFTkRfT1BUX0FQ",
          "UExZELKvAxIsCiZMT0dJQ19NU0dfTDJDX0ZSSUVORF9QRVJTT05BTF9EQVRB",
          "X1VQRBCzrwMSJAoeTE9HSUNfTVNHX0wyQ19GUklFTkRfQVBQTFlfVVBEELSv",
          "AxIiChxMT0dJQ19NU0dfTDJDX0ZSSUVORF9ERUxfVVBEELWvAxIkCh5MT0dJ",
          "Q19NU0dfTDJDX0ZSSUVORF9USFVNQl9VUEQQtq8DEicKIUxPR0lDX01TR19M",
          "MkxfRlJJRU5EX1JFTEFUSU9OX1VQRBC3rwMSLAomTE9HSUNfTVNHX0MyTF9G",
          "UklFTkRfVEhVTUJfUEFDS0FHRV9SRVEQuK8DEiwKJkxPR0lDX01TR19MMkNf",
          "RlJJRU5EX1RIVU1CX1BBQ0tBR0VfUkVRELmvAxInCiFMT0dJQ19NU0dfTDJD",
          "X0ZSSUVORF9SRUxBVElPTl9VUEQQu68DEiUKH0xPR0lDX01TR19DMkxfUkFO",
          "RE9NX1NUQUdFX0lOSVQQva4DEiUKH0xPR0lDX01TR19MMkNfUkFORE9NX1NU",
          "QUdFX0lOSVQQvq4DEiQKHkxPR0lDX01TR19MMkNfUkFORE9NX1NUQUdFX1VQ",
          "RBC/rgMSKQojTE9HSUNfTVNHX0MyTF9SQU5ET01fU1RBR0VfUFJPR1JFU1MQ",
          "wa4DEh4KGExPR0lDX01TR19DMkxfVElUTEVfSU5JVBDZrQMSHgoYTE9HSUNf",
          "TVNHX0wyQ19USVRMRV9JTklUENqtAxIgChpMT0dJQ19NU0dfQzJMX0NIQU5H",
          "RV9USVRMRRDbrQMSIAoaTE9HSUNfTVNHX0wyQ19DSEFOR0VfVElUTEUQ3K0D",
          "EiQKHkxPR0lDX01TR19MMkNfVU5MT0NLX1RJVExFX1VQRBDdrQMSHgoYTE9H",
          "SUNfTVNHX0MyTF9TSEFSRV9JTklUEPWsAxIeChhMT0dJQ19NU0dfTDJDX1NI",
          "QVJFX0lOSVQQ9qwDEh0KF0xPR0lDX01TR19MMkNfU0hBUkVfVVBEEPesAxIg",
          "ChpMT0dJQ19NU0dfQzJMX1NIQVJFX1JFV0FSRBD5rAMSIAoaTE9HSUNfTVNH",
          "X0wyQ19TSEFSRV9SRVdBUkQQ+qwDEh4KGExPR0lDX01TR19DMkxfQkFER0Vf",
          "SU5JVBCRrAMSHgoYTE9HSUNfTVNHX0wyQ19CQURHRV9JTklUEJKsAxIdChdM",
          "T0dJQ19NU0dfTDJDX0JBREdFX1VQRBCTrAMSIQobTE9HSUNfTVNHX0MyTF9C",
          "QURHRV9DSEFOR0VEEJWsAxIhChtMT0dJQ19NU0dfTDJDX0JBREdFX0NIQU5H",
          "RUQQlqwDEiMKHUxPR0lDX01TR19DMkxfUkVQVVRBVElPTl9JTklUEK2rAxIj",
          "Ch1MT0dJQ19NU0dfTDJDX1JFUFVUQVRJT05fSU5JVBCuqwMSLAomTE9HSUNf",
          "TVNHX0MyTF9SRVBVVEFUSU9OX0FDVElWSVRZX0lOSVQQr6sDEiwKJkxPR0lD",
          "X01TR19MMkNfUkVQVVRBVElPTl9BQ1RJVklUWV9JTklUELCrAxIrCiVMT0dJ",
          "Q19NU0dfTDJDX1JFUFVUQVRJT05fQUNUSVZJVFlfVVBEELGrAxIiChxMT0dJ",
          "Q19NU0dfQzJMX1VOTE9DS19DR19JTklUEMmqAxIhChtMT0dJQ19NU0dfTDJD",
          "X1VOTE9DS19DR19SRVAQyqoDEiEKG0xPR0lDX01TR19MMkNfVU5MT0NLX0NH",
          "X1VQRBDLqgMSKAoiTE9HSUNfTVNHX0MyTF9HT09HTEVfUFVSQ0hBU0VfSU5J",
          "VBCBqQMSKAoiTE9HSUNfTVNHX0wyQ19HT09HTEVfUFVSQ0hBU0VfSU5JVBCC",
          "qQMSKgokTE9HSUNfTVNHX0MyTF9HT09HTEVfUFVSQ0hBU0VfQ1JFQVRFEISp",
          "AxIqCiRMT0dJQ19NU0dfTDJDX0dPT0dMRV9QVVJDSEFTRV9DUkVBVEUQhakD",
          "EikKI0xPR0lDX01TR19DMkxfR09PR0xFX1BVUkNIQVNFX1RPS0VOEIepAxIp",
          "CiNMT0dJQ19NU0dfTDJDX0dPT0dMRV9QVVJDSEFTRV9UT0tFThCIqQMSKgok",
          "TE9HSUNfTVNHX0MyTF9HT09HTEVfUFVSQ0hBU0VfVk9JREVEEIqpAxIqCiRM",
          "T0dJQ19NU0dfTDJDX0dPT0dMRV9QVVJDSEFTRV9WT0lERUQQi6kDKssCCg9H",
          "YW1lRWxlbWVudFR5cGUSEwoPR0FNRV9FTEVfVF9OVUxMEAASEwoPR0FNRV9F",
          "TEVfVF9JVEVNEAESEwoPR0FNRV9FTEVfVF9DT0lOEAMSFgoSR0FNRV9FTEVf",
          "VF9ESUFNT05EEAQSHwobR0FNRV9FTEVfVF9SRUNIQVJHRV9ESUFNT05EEAUS",
          "GwoXR0FNRV9FTEVfVF9GUkVFX0RJQU1PTkQQBhIXChNHQU1FX0VMRV9UX1ZJ",
          "VEFMSVRZEAcSGAoUR0FNRV9FTEVfVF9GQVZPVVJJVEUQChIeChpHQU1FX0VM",
          "RV9UX1BST1RBR09OSVNUX0VYUBALEhkKFUdBTUVfRUxFX1RfQ09TVEFSX0VY",
          "UBAMEhoKFkdBTUVfRUxFX1RfRklTSElOR19FWFAQDRIZChVHQU1FX0VMRV9U",
          "X05BVElPTl9FWFAQDiqIAQoRQ2hhcmFjdGVyUmVsYXRpb24SGwoXQ0hBUkFD",
          "VEVSX1JFTEFUSU9OX05VTEwQABIbChdDSEFSQUNURVJfUkVMQVRJT05fS05P",
          "VxABEhsKF0NIQVJBQ1RFUl9SRUxBVElPTl9EQVRFEAISHAoYQ0hBUkFDVEVS",
          "X1JFTEFUSU9OX0JPU09NEAMqaQoNTXV0ZXhOb2RlVHlwZRIYChRNVVRFWF9O",
          "T0RFX1RZUEVfTlVMTBAAEh4KGk1VVEVYX05PREVfVFlQRV9NQUlOX1NUT1JZ",
          "EAESHgoaTVVURVhfTk9ERV9UWVBFX0VOR0FHRU1FTlQQAipECgxMb2dvblNE",
          "S1R5cGUSGAoUTE9HT05fU0RLX1RZUEVfQ0hJTkEQABIaChZMT0dPTl9TREtf",
          "VFlQRV9GT1JFSUdOEAEqZwoKU3RhZ2VTdGF0ZRIVChFTVEFHRV9TVEFURV9D",
          "TE9TRRAAEhQKEFNUQUdFX1NUQVRFX0xPQ0sQARIUChBTVEFHRV9TVEFURV9P",
          "UEVOEAISFgoSU1RBR0VfU1RBVEVfRklOSVNIEAMqqAEKEFN0YWdlU3RhcnRS",
          "ZXN1bHQSEgoOU1RBR0VfU1RBUlRfT0sQABIjCh9TVEFHRV9TVEFSVF9WSVRB",
          "TElUWV9OT1RfRU5PVUdIEAESHwobU1RBR0VfU1RBUlRfU1RBR0VfTk9UX0VY",
          "SVNUEAISHgoaU1RBR0VfU1RBUlRfU1RBR0VfTk9UX09QRU4QAxIaChZTVEFH",
          "RV9TVEFSVF9MSU1JVF9aRVJPEAUqVAoPRW5nYWdlbWVudFN0YXRlEg0KCUVO",
          "R0FfTlVMTBAAEhEKDUVOR0FfQUNDRVNTRUQQARIRCg1FTkdBX0ZJTklTSEVE",
          "EAISDAoIRU5HQV9BTEwQAypWChFJT1NSZWNoYXJnZVJlc3VsdBIUChBSRUNI",
          "QVJHRV9SRUNFSVZFEAASFwoTUkVDSEFSR0VfU0VORF9HT09EUxABEhIKDlJF",
          "Q0hBUkdFX0VSUk9SEAIqkwEKC01haWxPcHRUeXBlEhEKDU1BSUxfT1BUX05V",
          "TEwQABIVChFNQUlMX09QVF9SRUFEX09ORRABEhUKEU1BSUxfT1BUX0hPTERf",
          "T05FEAISFQoRTUFJTF9PUFRfSE9MRF9BTEwQAxIUChBNQUlMX09QVF9DT0xM",
          "RUNUEAQSFgoSTUFJTF9PUFRfVU5DT0xMRUNUEAUqeQoLT3B0aW9uc1R5cGUS",
          "EAoMT1BUSU9OU19OVUxMEAASEAoMT1BUSU9OU19OQU1FEAESFgoST1BUSU9O",
          "U19IRUFEX0ZSQU1FEAISFgoST1BUSU9OU19CQUNLR1JPVU5EEAMSFgoST1BU",
          "SU9OU19IRUFEX0lNQUdFEAQqaQoRQWNoaWV2ZW1lbnRTdGF0dXMSGwoXQUNI",
          "SUVWRU1FTlRfU1RBVFVTX05VTEwQABIbChdBQ0hJRVZFTUVOVF9TVEFUVVNf",
          "T1BFThABEhoKFkFDSElFVkVNRU5UX1NUQVRVU19FTkQQAiprCg9EYWlseVRh",
          "c2tTdGF0dXMSFAoQVEFTS19TVEFUVVNfTE9DSxAAEhQKEFRBU0tfU1RBVFVT",
          "X09QRU4QARIXChNUQVNLX1NUQVRVU19VTkFXQVJEEAISEwoPVEFTS19TVEFU",
          "VVNfRU5EEAMqdAoTT250aW1lVml0VXBkYXRlVHlwZRIgChxPTlRJTUVfVklU",
          "X1RZUEVfTU9STklOR19PUEVOEAASIgoeT05USU1FX1ZJVF9UWVBFX0FGVEVS",
          "Tk9PTl9PUEVOEAESFwoTT05USU1FX1ZJVF9UWVBFX0VORBACKlgKF1RpbWVM",
          "aW1pdFBhY2thZ2VVcGRUeXBlEh4KGlRJTUVfTElNSVRfVVBEX09QVElPTl9P",
          "UEVOEAASHQoZVElNRV9MSU1JVF9VUERfT1BUSU9OX0VORBABKrUICg1Gcmll",
          "bmRSZXRUeXBlEhoKFkVOTV9BRERfRlJJRU5EX1NVQ0NFU1MQABIbChdFTk1f",
          "QUREX0ZSSUVORF9FUlJfRlVMTBACEiMKH0VOTV9BRERfRlJJRU5EX0VSUl9B",
          "Tk9USEVSX0ZVTEwQAxIfChtFTk1fQUREX0ZSSUVORF9FUlJfTk9UX0ZJTkQQ",
          "BBIhCh1FTk1fQUREX0ZSSUVORF9FUlJfWUVUX0ZSSUVORBAFEigKJEVOTV9B",
          "RERfRlJJRU5EX0VSUl9UQVJHRVRfQVBQTFlfRlVMTBAGEiMKH0VOTV9BRERf",
          "RlJJRU5EX0VSUl9UQVJHRVRfV1JPTkcQBxIaChZFTk1fREVMX0ZSSUVORF9T",
          "VUNDRVNTEAoSIQodRU5NX0RFTF9GUklFTkRfRVJSX05PVF9GUklFTkQQCxIf",
          "ChtFTk1fREVMX0ZSSUVORF9FUlJfVVBfTElNSVQQDBIcChhFTk1fVEhVTUJf",
          "RlJJRU5EX1NVQ0NFU1MQFBIiCh5FTk1fVEhVTUJfRlJJRU5EX0VSUl9ZRVRf",
          "VEhVTUIQFRIhCh1FTk1fVEhVTUJfRlJJRU5EX0VSUl9VUF9MSU1JVBAWEiMK",
          "H0VOTV9USFVNQl9GUklFTkRfRVJSX05PVF9GUklFTkQQFxIbChdFTk1fR0lG",
          "VF9GUklFTkRfU1VDQ0VTUxAeEiIKHkVOTV9HSUZUX0ZSSUVORF9FUlJfTk9U",
          "X0ZSSUVORBAfEiAKHEVOTV9HSUZUX0ZSSUVORF9FUlJfVVBfTElNSVQQIBIk",
          "CiBFTk1fR0lGVF9GUklFTkRfRVJSX0NBTl9OT1RfUkVDVhAhEiQKIEVOTV9N",
          "T0RJRllfUEVSU09OQUxfREFUQV9TVUNDRVNTECgSLworRU5NX01PRElGWV9Q",
          "RVJTT05BTF9EQVRBX0VSUl9TRU5TSVRJVkVfV09SRBApEi4KKkVOTV9NT0RJ",
          "RllfUEVSU09OQUxfREFUQV9FUlJfTk9fQkFDS0dST1VORBAqEi4KKkVOTV9N",
          "T0RJRllfUEVSU09OQUxfREFUQV9FUlJfQkFER0VfTk9fR0FJThArEiAKHEVO",
          "TV9BUFBMWV9GUklFTkRfT1BUX1NVQ0NFU1MQMhImCiJFTk1fQVBQTFlfRlJJ",
          "RU5EX0VSUl9OT19USElTX0FQUExZEDMSIgoeRU5NX0FQUExZX0ZSSUVORF9F",
          "UlJfV1JPTkdfT1BUEDQSIQodRU5NX0FQUExZX0ZSSUVORF9FUlJfVVBfTElN",
          "SVQQNRIoCiRFTk1fQVBQTFlfRlJJRU5EX0VSUl9UQVJHRVRfVVBfTElNSVQQ",
          "NhIoCiRFTk1fUkVRX0ZSSUVORF9USFVNQl9QQUNLQUdFX1NVQ0NFU1MQRhIk",
          "CiBFTk1fUkVRX0ZSSUVORF9USFVNQl9OT19DQU5fUkVDVhBHKkwKDUZyaWVu",
          "ZFJlcVR5cGUSGwoXRU5NX0ZSSUVORF9SRVFfVFlQRV9BTEwQABIeChpFTk1f",
          "RlJJRU5EX1JFUV9UWVBFX1NJTkdMRRABKlUKEkZyaWVuZEFwcGx5T3B0VHlw",
          "ZRIeChpFTk1fRlJJRU5EX0FQUExZX09QVF9BR1JFRRAAEh8KG0VOTV9GUklF",
          "TkRfQVBQTFlfT1BUX0lHTk9SRRABKmgKElJhbmRvbVN0YWdlT3B0VHlwZRIa",
          "ChZSQU5ET01fU1RBR0VfT1BUX1RfQUREEAASGgoWUkFORE9NX1NUQUdFX09Q",
          "VF9UX0RFTBABEhoKFlJBTkRPTV9TVEFHRV9PUFRfVF9VUEQQAiqHAQoMVGl0",
          "bGVSZXRUeXBlEhgKFFRJVExFX0NIQU5HRV9TVUNDRVNTEAASHgoaVElUTEVf",
          "Q0hBTkdFX0VSUl9OT19QUkVGSVgQARIdChlUSVRMRV9DSEFOR0VfRVJSX05P",
          "X1BPRklYEAISHgoaVElUTEVfQ0hBTkdFX0VSUl9OT19NSURGSVgQA2IGcHJv",
          "dG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CharacterOpResult), typeof(global::LogicMsgID), typeof(global::GameElementType), typeof(global::CharacterRelation), typeof(global::MutexNodeType), typeof(global::LogonSDKType), typeof(global::StageState), typeof(global::StageStartResult), typeof(global::EngagementState), typeof(global::IOSRechargeResult), typeof(global::MailOptType), typeof(global::OptionsType), typeof(global::AchievementStatus), typeof(global::DailyTaskStatus), typeof(global::OntimeVitUpdateType), typeof(global::TimeLimitPackageUpdType), typeof(global::FriendRetType), typeof(global::FriendReqType), typeof(global::FriendApplyOptType), typeof(global::RandomStageOptType), typeof(global::TitleRetType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_error), global::l2c_error.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PTGameElement), global::PTGameElement.Parser, new[]{ "EType", "NID", "NCount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MutexNode), global::MutexNode.Parser, new[]{ "Type", "Id", "Nodes" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RandomStageIndex), global::RandomStageIndex.Parser, new[]{ "StageId", "CreateTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_logon_ask), global::l2c_logon_ask.Parser, new[]{ "KeySeed" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_logon_proof), global::c2l_logon_proof.Parser, new[]{ "AccountId", "Username", "ClientSeed", "Proof", "DeviceInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_logon_proof.Types.LogonInfo), global::c2l_logon_proof.Types.LogonInfo.Parser, new[]{ "Channel", "Device", "Devicename", "Appid", "Mdid", "SdkId" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_logon_rep), global::l2c_logon_rep.Parser, new[]{ "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_svc_exception), global::l2c_svc_exception.Parser, new[]{ "EInfo" }, null, new[]{ typeof(global::l2c_svc_exception.Types.SvcException) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_create_character_req), global::c2l_create_character_req.Parser, new[]{ "CharacterName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_create_character_rep), global::l2c_create_character_rep.Parser, new[]{ "Result" }, null, new[]{ typeof(global::l2c_create_character_rep.Types.Result) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_no_character), global::l2c_no_character.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_ready), global::l2c_ready.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ready), global::c2l_ready.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_initialize), global::l2c_initialize.Parser, new[]{ "Name", "Icon", "IconRim", "Money", "Vitality", "Diamond", "FreeDiamond", "CoolDown", "NationExp", "Maxnomal", "Maxdiffcult" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_initialize.Types.NationReputation), global::l2c_initialize.Types.NationReputation.Parser, new[]{ "Id", "Exp", "Level" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_initialize_item), global::c2l_initialize_item.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_initialize_item), global::l2c_initialize_item.Parser, new[]{ "TotalPage", "PageNum", "Items" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_initialize_item.Types.Item), global::l2c_initialize_item.Types.Item.Parser, new[]{ "Id", "Count" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_initialize_equip), global::c2l_initialize_equip.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_initialize_equip), global::l2c_initialize_equip.Parser, new[]{ "TotalPage", "PageNum", "Equipments" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_initialize_equip.Types.EquipmentInfo), global::l2c_initialize_equip.Types.EquipmentInfo.Parser, new[]{ "Id", "Level", "Exp", "Stars", "Stage", "Count" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_initialize_character), global::c2l_initialize_character.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_initialize_character), global::l2c_initialize_character.Parser, new[]{ "Characters" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_initialize_character.Types.CharacterInfo), global::l2c_initialize_character.Types.CharacterInfo.Parser, new[]{ "Id", "Level", "LevelExp", "Favourite", "FavouriteExp", "FirstHair", "FirstFace", "FirstDress", "FirstChest", "FirstCape", "FirstExtra", "SecondHair", "SecondFace", "SecondDress", "SecondChest", "SecondCape", "SecondExtra", "Inphalanx", "Relation" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_add_element_gm), global::c2l_add_element_gm.Parser, new[]{ "Eles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_add_element_gm), global::l2c_add_element_gm.Parser, new[]{ "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_reset_cnts_gm), global::c2l_reset_cnts_gm.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_reset_cnts_gm), global::l2c_reset_cnts_gm.Parser, new[]{ "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_get_all_cloth_gm), global::c2l_get_all_cloth_gm.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_get_all_cloth_gm), global::l2c_get_all_cloth_gm.Parser, new[]{ "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_upd_player), global::l2c_upd_player.Parser, new[]{ "Name", "Icon", "IconRim", "Money", "Vitality", "Diamond", "FreeDiamond", "Maxnomal", "Maxdiffcult", "CoolDown" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_upd_character), global::l2c_upd_character.Parser, new[]{ "Id", "Level", "LevelExp", "Favourite", "FavouriteExp", "FirstHair", "FirstFace", "FirstDress", "FirstChest", "FirstCape", "FirstExtra", "SecondHair", "SecondFace", "SecondDress", "SecondChest", "SecondCape", "SecondExtra", "Inphalanx", "Relation" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_upd_equipment), global::l2c_upd_equipment.Parser, new[]{ "Id", "Level", "Exp", "Stars", "Stage", "Count" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_upd_item), global::l2c_upd_item.Parser, new[]{ "Id", "Count" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_upd_nation), global::l2c_upd_nation.Parser, new[]{ "Id", "Exp", "Level" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_story_init), global::c2l_story_init.Parser, new[]{ "ChapterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CombatInfo), global::CombatInfo.Parser, new[]{ "Limit", "Win", "Stars", "KillMonsters", "Phalanx" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StoryLockInfo), global::StoryLockInfo.Parser, new[]{ "TriggerInfos" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::StoryLockInfo.Types.TriggerInfo), global::StoryLockInfo.Types.TriggerInfo.Parser, new[]{ "TriggerType", "TriggerParam" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_story_upd), global::l2c_story_upd.Parser, new[]{ "StageId", "FrontIds", "State", "LimitSec", "Cost", "BuyCnts", "PlotComplete", "FinishedCount", "Nodes", "CombateResult", "LockInfos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_chapter_upd), global::l2c_chapter_upd.Parser, new[]{ "Chapter", "Diffcultly", "IsCompeled", "CurStageStars", "CurStageTreasures" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_chapter_init), global::c2l_chapter_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_chapter_init), global::l2c_chapter_init.Parser, new[]{ "ChapterInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_story_init), global::l2c_story_init.Parser, new[]{ "StageInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_story_stage_init), global::c2l_story_stage_init.Parser, new[]{ "StageIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_story_stage_init), global::l2c_story_stage_init.Parser, new[]{ "StageInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_story_start), global::c2l_story_start.Parser, new[]{ "StageId", "RandomInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_story_start), global::l2c_story_start.Parser, new[]{ "StageId", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_story_result), global::c2l_story_result.Parser, new[]{ "StageId", "PlotComplete", "FinshedCount", "Nodes", "MutexNodes", "RandomInfo", "CombateResult", "Settlement" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_story_reward), global::l2c_story_reward.Parser, new[]{ "Elements", "CharacterLevel" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_story_reward.Types.CharacterLevel), global::l2c_story_reward.Types.CharacterLevel.Parser, new[]{ "Id", "Level" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_star_treasure), global::c2l_star_treasure.Parser, new[]{ "Chapter", "Diffcultly", "TreasureNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_star_treasure), global::l2c_star_treasure.Parser, new[]{ "TreasureId", "Eles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_story_fast), global::c2l_story_fast.Parser, new[]{ "StageId", "Times" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_story_fast), global::l2c_story_fast.Parser, new[]{ "Elements" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_story_add_cnts), global::c2l_story_add_cnts.Parser, new[]{ "StoryId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_strengthen_equipment), global::c2l_strengthen_equipment.Parser, new[]{ "OpType", "EquipmentId", "Consumables" }, null, new[]{ typeof(global::c2l_strengthen_equipment.Types.Type) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_strengthen_equipment.Types.Consumable), global::c2l_strengthen_equipment.Types.Consumable.Parser, new[]{ "ItemId", "ItemCount" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_strengthen_equipment), global::l2c_strengthen_equipment.Parser, new[]{ "EquipmentId", "Result" }, null, new[]{ typeof(global::l2c_strengthen_equipment.Types.Result) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_sublime_equipment), global::c2l_sublime_equipment.Parser, new[]{ "Equipments" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_sublime_equipment.Types.Equipment), global::c2l_sublime_equipment.Types.Equipment.Parser, new[]{ "EquipmentId", "EquipmentCount" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_sublime_equipment), global::l2c_sublime_equipment.Parser, new[]{ "Result" }, null, new[]{ typeof(global::l2c_sublime_equipment.Types.Result) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_synthesize_equipment), global::c2l_synthesize_equipment.Parser, new[]{ "EquipmentId", "TailorIdx", "Consumables" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_synthesize_equipment.Types.Consumable), global::c2l_synthesize_equipment.Types.Consumable.Parser, new[]{ "ItemId", "ItemCount" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_synthesize_equipment), global::l2c_synthesize_equipment.Parser, new[]{ "Result" }, null, new[]{ typeof(global::l2c_synthesize_equipment.Types.Result) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_equip_outfits), global::c2l_equip_outfits.Parser, new[]{ "CharOutfits" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_equip_outfits.Types.Outfit), global::c2l_equip_outfits.Types.Outfit.Parser, new[]{ "CharacterId", "FirstHair", "FirstFace", "FirstDress", "FirstChest", "FirstCape", "FirstExtra", "SecondHair", "SecondFace", "SecondDress", "SecondChest", "SecondCape", "SecondExtra" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::EquipSuitInfo), global::EquipSuitInfo.Parser, new[]{ "SuitId", "Nodes", "Actives" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_suit_upd), global::l2c_suit_upd.Parser, new[]{ "Suit" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_suit_init), global::c2l_suit_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_suit_init), global::l2c_suit_init.Parser, new[]{ "Suits" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_suit_reward), global::c2l_suit_reward.Parser, new[]{ "SuitId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_suit_reward), global::l2c_suit_reward.Parser, new[]{ "Eles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_character_uplevel), global::c2l_character_uplevel.Parser, new[]{ "CharacterId", "Consumables" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_character_uplevel.Types.Consumable), global::c2l_character_uplevel.Types.Consumable.Parser, new[]{ "ItemId", "ItemCount" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_character_uplevel), global::l2c_character_uplevel.Parser, new[]{ "CharacterId", "Result" }, null, new[]{ typeof(global::l2c_character_uplevel.Types.Result) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DailyStageInfo), global::DailyStageInfo.Parser, new[]{ "Type", "Remainchallengecount", "StageList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StageInfo), global::StageInfo.Parser, new[]{ "Id", "State", "Starnum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_daily_stage_init), global::c2l_daily_stage_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_stage_init), global::l2c_daily_stage_init.Parser, new[]{ "Opentypes", "DailyStageInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_daily_start), global::c2l_daily_start.Parser, new[]{ "DailyId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_start), global::l2c_daily_start.Parser, new[]{ "DailyId", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_upd), global::l2c_daily_upd.Parser, new[]{ "Type", "DailyId", "State", "NCombatlimit", "Stars" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_cnts_upd), global::l2c_daily_cnts_upd.Parser, new[]{ "Type", "NCombatlimit" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_daily_result), global::c2l_daily_result.Parser, new[]{ "DailyId", "Type", "Stars", "Killnpcid", "Phalanx" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_daily_fast), global::c2l_daily_fast.Parser, new[]{ "DailyId", "Times" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_fast), global::l2c_daily_fast.Parser, new[]{ "Elements" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_result), global::l2c_daily_result.Parser, new[]{ "CharacterLevel", "NpcElement" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_result.Types.CharacterLevel), global::l2c_daily_result.Types.CharacterLevel.Parser, new[]{ "Id", "Level" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_result.Types.NpcElement), global::l2c_daily_result.Types.NpcElement.Parser, new[]{ "Id", "Reward" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_upd_phalanx), global::c2l_upd_phalanx.Parser, new[]{ "OpInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_upd_phalanx.Types.Operation), global::c2l_upd_phalanx.Types.Operation.Parser, new[]{ "Id", "Inphalanx" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::SingleStageInfo), global::SingleStageInfo.Parser, new[]{ "Role", "StageIdx", "IsFinish", "StageId", "CfgRound", "CfgAttype", "CfgNpcset", "CfgSpecialBuff", "CfgNpcDisplay", "CfgWinCondition", "CfgSpecialText", "CfgFailCondition", "CfgBgmChangeCondition" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SingleStageLastAward), global::SingleStageLastAward.Parser, new[]{ "RoleId", "Awards", "LastStageId", "IsAward" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_single_combat_init), global::c2l_single_combat_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_single_combat_init), global::l2c_single_combat_init.Parser, new[]{ "RoleInfo", "LastReward", "RemainSecs" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_single_combat_init.Types.SingleRoleInfo), global::l2c_single_combat_init.Types.SingleRoleInfo.Parser, new[]{ "RoleId", "BuffEquipId", "MaxStageIdx", "StageInfo", "IsChoose" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_single_combat_start), global::c2l_single_combat_start.Parser, new[]{ "StageId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_single_combat_start), global::l2c_single_combat_start.Parser, new[]{ "StageId", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_single_combat_result), global::c2l_single_combat_result.Parser, new[]{ "StageId", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_single_combat_result), global::l2c_single_combat_result.Parser, new[]{ "StageId", "Reward" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_single_stage_upd), global::l2c_single_stage_upd.Parser, new[]{ "StageId", "IsFinish", "StageInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_single_reward), global::c2l_single_reward.Parser, new[]{ "RoleId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_single_reward), global::l2c_single_reward.Parser, new[]{ "Awards", "LastReward" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_engagement_upd), global::l2c_engagement_upd.Parser, new[]{ "Id", "State", "Nodes", "UnlockTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_engagement_init), global::c2l_engagement_init.Parser, new[]{ "Role" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_engagement_init), global::l2c_engagement_init.Parser, new[]{ "Role", "TotalPage", "PageNum", "Engagement" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_engagement_unlock), global::c2l_engagement_unlock.Parser, new[]{ "Id", "Ele" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_start_engagement), global::c2l_start_engagement.Parser, new[]{ "EngagementId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_start_engagement), global::l2c_start_engagement.Parser, new[]{ "EngagementId", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ends_engagement), global::c2l_ends_engagement.Parser, new[]{ "EngagementId", "FinishCount", "ChoosedNodes", "Gifts", "MutexNodes" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ends_engagement.Types.gift), global::c2l_ends_engagement.Types.gift.Parser, new[]{ "Id", "Count" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_ends_engagement), global::l2c_ends_engagement.Parser, new[]{ "EngagementId", "FavorLevel", "FavorExp", "Rewards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FishingEquipments), global::FishingEquipments.Parser, new[]{ "FishingRod", "Bait", "CharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FishRecordData), global::FishRecordData.Parser, new[]{ "FishId", "Amount", "MinSize", "MaxSize" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_fish_info), global::c2l_fish_info.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_fish_info), global::l2c_fish_info.Parser, new[]{ "FishingLevel", "FishingExp", "FishingEquipments" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_fish_record), global::l2c_fish_record.Parser, new[]{ "TotalPage", "PageNum", "Records" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_fish_record_upd), global::l2c_fish_record_upd.Parser, new[]{ "Records" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_upd_fishing_equipments), global::c2l_upd_fishing_equipments.Parser, new[]{ "FishingEquipments" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_start_fishing), global::c2l_start_fishing.Parser, new[]{ "FishingSpace", "RandomInfo", "IsRandomInit" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_start_fishing), global::l2c_start_fishing.Parser, new[]{ "FishingSpace", "Result", "FishId", "Favor", "RemainSecs" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_fishing_success), global::c2l_fishing_success.Parser, new[]{ "FishingSpace", "RandomInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_fishing_success), global::l2c_fishing_success.Parser, new[]{ "FishingSpace", "FishId", "FishSize", "Rewards", "Process", "RemainSecs" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_random_fishing_result), global::c2l_random_fishing_result.Parser, new[]{ "RandomInfo", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_random_fishing_result), global::l2c_random_fishing_result.Parser, new[]{ "Result", "Rewards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_encyclopedia_init), global::c2l_encyclopedia_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_encyclopedia_init), global::l2c_encyclopedia_init.Parser, new[]{ "TotalPage", "PageNum", "Values", "ReadValues" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_encyclopedia_upd), global::l2c_encyclopedia_upd.Parser, new[]{ "NewNode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_encyclopedia_read), global::c2l_encyclopedia_read.Parser, new[]{ "ReadNode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_msg), global::l2c_wechat_msg.Parser, new[]{ "Id", "Time", "Complete", "Nodes", "Choices" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_voice), global::l2c_wechat_voice.Parser, new[]{ "Id", "Time", "Complete", "Nodes", "Choices" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_official_account), global::l2c_wechat_official_account.Parser, new[]{ "Id", "IsRead", "Time", "Tapinfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_official_account.Types.TapInfo), global::l2c_wechat_official_account.Types.TapInfo.Parser, new[]{ "Comment", "TapNum", "TapState" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_wechat_init), global::c2l_wechat_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_msg_init), global::l2c_wechat_msg_init.Parser, new[]{ "TotalPage", "PageNum", "Records" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_voice_init), global::l2c_wechat_voice_init.Parser, new[]{ "TotalPage", "PageNum", "Records" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_official_account_init), global::l2c_wechat_official_account_init.Parser, new[]{ "TotalPage", "PageNum", "Records" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_wechat_msg_upd), global::c2l_wechat_msg_upd.Parser, new[]{ "Id", "Complete", "Nodes", "Choices" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_wechat_voice_upd), global::c2l_wechat_voice_upd.Parser, new[]{ "Id", "Complete", "Nodes", "Choices" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_wechat_official_account_upd), global::c2l_wechat_official_account_upd.Parser, new[]{ "Id", "Comment", "TapState", "IsRead" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_nickname_init), global::l2c_wechat_nickname_init.Parser, new[]{ "Nicknames" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_nickname_init.Types.WechatNickNameInfo), global::l2c_wechat_nickname_init.Types.WechatNickNameInfo.Parser, new[]{ "Id", "Nickname" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_wechat_nickname_rename), global::c2l_wechat_nickname_rename.Parser, new[]{ "Id", "Nickname" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_wechat_nickname_rename), global::l2c_wechat_nickname_rename.Parser, new[]{ "Id", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_generate_recharge_order), global::c2l_generate_recharge_order.Parser, new[]{ "CommodityId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_generate_recharge_order), global::l2c_generate_recharge_order.Parser, new[]{ "AppOrderNo", "ThroughParam", "IsTest", "CommodityId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_recharge_order_upd), global::l2c_recharge_order_upd.Parser, new[]{ "AppOrderNo", "Eles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_recharge_goods_upd), global::l2c_recharge_goods_upd.Parser, new[]{ "SumInfo", "DoubleGoods", "IsCost" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_recharge_goods_upd.Types.SumRechargeInfo), global::l2c_recharge_goods_upd.Types.SumRechargeInfo.Parser, new[]{ "ActiveId", "SumMoney", "CanAwardId", "OwnAwardId", "Deadline" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_recharge_goods_init), global::c2l_recharge_goods_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_recharge_goods_init), global::l2c_recharge_goods_init.Parser, new[]{ "Goods" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_recharge_get_sum_award), global::c2l_recharge_get_sum_award.Parser, new[]{ "ActiveId", "AwardId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_recharge_get_sum_award), global::l2c_recharge_get_sum_award.Parser, new[]{ "Result", "Awards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ios_recharge_init), global::c2l_ios_recharge_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_ios_recharge_init), global::l2c_ios_recharge_init.Parser, new[]{ "IdToClose" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_recharge_commodity_ask), global::c2l_recharge_commodity_ask.Parser, new[]{ "CommodityId", "Qutity" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_recharge_commodity_rep), global::l2c_recharge_commodity_rep.Parser, new[]{ "Able", "CommodityId", "Qutity", "OrderIndex" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ios_recharge), global::c2l_ios_recharge.Parser, new[]{ "TotalPackage", "PackageIndex", "PayToken", "IdClosed" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ios_recharge.Types.transaction_info), global::c2l_ios_recharge.Types.transaction_info.Parser, new[]{ "TransactionId", "CommodityId", "Num", "OrderIndex" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_ios_recharge_rep), global::l2c_ios_recharge_rep.Parser, new[]{ "RechargeResult", "TransactionIds", "Eles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ios_recharge_closed), global::c2l_ios_recharge_closed.Parser, new[]{ "OrderDeleted" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_minigame_cloth_star), global::c2l_minigame_cloth_star.Parser, new[]{ "Id", "Level", "ClothId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_send_minigame_cloth_success), global::l2c_send_minigame_cloth_success.Parser, new[]{ "Rewards", "Star" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BranchmodelDailyRaid), global::BranchmodelDailyRaid.Parser, new[]{ "Maxtimes", "Remainingtimes", "Opendays" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BranchmodelSingleRaid), global::BranchmodelSingleRaid.Parser, new[]{ "ChoosedNum", "MaxNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_stage_branchmodel), global::c2l_stage_branchmodel.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_stage_branchmodel), global::l2c_stage_branchmodel.Parser, new[]{ "Coinraid", "Expraid", "Huchengraid", "Individualraid" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StoreGoods), global::StoreGoods.Parser, new[]{ "GoodId", "Count" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StorePackages), global::StorePackages.Parser, new[]{ "PackageId", "RemainCnts", "RefreshSecs" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_store_init), global::c2l_store_init.Parser, new[]{ "StoreIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_store_upd), global::l2c_store_upd.Parser, new[]{ "StoreId", "Remaintimes", "Goods", "Packages" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_store_init), global::l2c_store_init.Parser, new[]{ "Infos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_store_buy), global::c2l_store_buy.Parser, new[]{ "StoreId", "ContentId", "Num" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_store_buy), global::l2c_store_buy.Parser, new[]{ "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_store_goods_upd), global::l2c_store_goods_upd.Parser, new[]{ "StoreId", "Goods" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_store_package_upd), global::l2c_store_package_upd.Parser, new[]{ "StoreId", "Package" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GuideInfo), global::GuideInfo.Parser, new[]{ "SectionID", "StepID" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_guide_init), global::c2l_guide_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_guide_init), global::l2c_guide_init.Parser, new[]{ "Guide" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_guide_section), global::c2l_guide_section.Parser, new[]{ "Guide" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MailInfo), global::MailInfo.Parser, new[]{ "Id", "Sender", "Title", "Content", "CreateTime", "DueTime", "IsForever", "IsRead", "IsHold", "ReadDelete", "Attachment", "IsCollect", "CounterTick" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_mail_init), global::c2l_mail_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_mail_init), global::l2c_mail_init.Parser, new[]{ "TotalPage", "PageNum", "Mails" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_mail_read), global::c2l_mail_read.Parser, new[]{ "OptType", "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_mail_read), global::l2c_mail_read.Parser, new[]{ "OptType", "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_mail_send), global::l2c_mail_send.Parser, new[]{ "Mail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NoticeInfo), global::NoticeInfo.Parser, new[]{ "Id", "StartTime", "EndTime", "CycleTime", "Title", "Content" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_notice_init), global::c2l_notice_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_notice_init), global::l2c_notice_init.Parser, new[]{ "Notices" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_notice_send), global::l2c_notice_send.Parser, new[]{ "Notice" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ExplorationInfo), global::ExplorationInfo.Parser, new[]{ "Index", "MissionId", "CharacterId", "Status", "FinshSecs", "RefreshSecs", "RefreshTime", "Children", "SkillCards" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ExplorationInfo.Types.ExplorationElement), global::ExplorationInfo.Types.ExplorationElement.Parser, new[]{ "EType", "NID", "NCount", "NExtraCount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ExplorationInfo.Types.ChildInfo), global::ExplorationInfo.Types.ChildInfo.Parser, new[]{ "EventIdx", "MissionId", "RemainSecs", "EndTime", "Items", "Speicals" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_exploration_cards_upd), global::l2c_exploration_cards_upd.Parser, new[]{ "OwnSkillCards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_exploration_init), global::c2l_exploration_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_exploration_init), global::l2c_exploration_init.Parser, new[]{ "Result", "Missions", "OwnSkillCards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_exploration_start), global::c2l_exploration_start.Parser, new[]{ "Index", "CharacterId", "RefreshTime", "SkillCards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_exploration_start), global::l2c_exploration_start.Parser, new[]{ "Mission", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_exploration_upd), global::l2c_exploration_upd.Parser, new[]{ "Mission" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_exploration_award), global::c2l_exploration_award.Parser, new[]{ "Index", "OperType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_exploration_award), global::l2c_exploration_award.Parser, new[]{ "Mission", "Items" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_sevenlogin_init), global::c2l_sevenlogin_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_sevenlogin_reward), global::l2c_sevenlogin_reward.Parser, new[]{ "Dayid", "Rewards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_options_upd), global::l2c_options_upd.Parser, new[]{ "OwnHeadFrame", "OwnBackground", "OwnHeadImage", "IsFirstRename", "CurHeadFrame", "CurHeadImage", "CurBackground", "PhoneNum", "Reward" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_options_init), global::c2l_options_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_options_init), global::l2c_options_init.Parser, new[]{ "Infos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_options_modify), global::c2l_options_modify.Parser, new[]{ "Type", "Value" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_options_modify), global::l2c_options_modify.Parser, new[]{ "IsResult" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_options_buy), global::c2l_options_buy.Parser, new[]{ "Type", "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_options_buy), global::l2c_options_buy.Parser, new[]{ "IsResult" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_options_diy_headimg_upd), global::c2l_options_diy_headimg_upd.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_lottery_cost), global::c2l_lottery_cost.Parser, new[]{ "PoolId", "CostCnts" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_lottery_cost), global::l2c_lottery_cost.Parser, new[]{ "Results", "IsEnable", "Result" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_lottery_cost.Types.GachaInfo), global::l2c_lottery_cost.Types.GachaInfo.Parser, new[]{ "Index", "Items", "Attach", "IsNew" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_lottery_add), global::c2l_lottery_add.Parser, new[]{ "PoolId", "AddCnts" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_lottery_add), global::l2c_lottery_add.Parser, new[]{ "Tickets", "IsEnable", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_lottery_pool_upd), global::l2c_lottery_pool_upd.Parser, new[]{ "PoolId", "EndSecs", "EndTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_lottery_pool_init), global::c2l_lottery_pool_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_lottery_pool_init), global::l2c_lottery_pool_init.Parser, new[]{ "Infos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_sign_in_upd), global::l2c_sign_in_upd.Parser, new[]{ "CurMonth", "CurDay", "MonthCards", "Eles", "Month" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_sign_in_upd.Types.MonthCardInfo), global::l2c_sign_in_upd.Types.MonthCardInfo.Parser, new[]{ "MonthCardId", "MonthCardEndTime", "MonthCardEndSecs" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_sign_in_init), global::c2l_sign_in_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_sign_in_init), global::l2c_sign_in_init.Parser, new[]{ "PunchDays", "IsPunch", "Info" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_achievement_init), global::c2l_achievement_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_achievement_stage_init), global::l2c_achievement_stage_init.Parser, new[]{ "TotalPage", "PageNum", "Stage" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_achievement_get_reward), global::c2l_achievement_get_reward.Parser, new[]{ "StageId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_achievement_get_reward), global::l2c_achievement_get_reward.Parser, new[]{ "StageId", "Rewards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_achievement_level_up), global::c2l_achievement_level_up.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_achievement_level_up), global::l2c_achievement_level_up.Parser, new[]{ "NewLevel", "Rewards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_achievement_upd), global::l2c_achievement_upd.Parser, new[]{ "NowLevel", "Exp" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_achievement_stage_upd), global::l2c_achievement_stage_upd.Parser, new[]{ "StageId", "CompleteCount", "Status", "CompleteTime", "CompleteProportion", "ProgressTarget" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_daily_task_init), global::c2l_daily_task_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_task_init), global::l2c_daily_task_init.Parser, new[]{ "TotalPage", "PageNum", "Task", "ActiveNum", "TriggerActiveNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_daily_task_get_reward), global::c2l_daily_task_get_reward.Parser, new[]{ "TaskId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_task_get_reward), global::l2c_daily_task_get_reward.Parser, new[]{ "TaskId", "Rewards", "ActiveNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_daily_task_upd), global::l2c_daily_task_upd.Parser, new[]{ "TaskId", "CompleteCount", "Status", "RemainTime", "Target" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_resource_purchase_init), global::c2l_resource_purchase_init.Parser, new[]{ "TypeId", "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_resource_purchase_init), global::l2c_resource_purchase_init.Parser, new[]{ "ResourceNum", "Cost", "TypeId", "Id", "ResNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_resource_purchase_buy), global::c2l_resource_purchase_buy.Parser, new[]{ "TypeId", "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_resource_purchase_buy), global::l2c_resource_purchase_buy.Parser, new[]{ "SuccessFlag" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ontime_vit_init), global::c2l_ontime_vit_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_ontime_vit_init), global::l2c_ontime_vit_init.Parser, new[]{ "Type", "VitNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_ontime_vit_recv), global::c2l_ontime_vit_recv.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_ontime_vit_recv), global::l2c_ontime_vit_recv.Parser, new[]{ "SuccessFlag" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_ontime_vit_upd), global::l2c_ontime_vit_upd.Parser, new[]{ "Type", "VitNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_use_vit_prop), global::c2l_use_vit_prop.Parser, new[]{ "CostType", "CostId", "CostNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_use_vit_prop), global::l2c_use_vit_prop.Parser, new[]{ "SuccessFlag" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_time_limit_package_init), global::c2l_time_limit_package_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_time_limit_package_init), global::l2c_time_limit_package_init.Parser, new[]{ "RemainTime", "PackageId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_time_limit_package_upd), global::l2c_time_limit_package_upd.Parser, new[]{ "Type", "RemainTime", "PackageId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_chapter_package_init), global::c2l_chapter_package_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_chapter_package_init), global::l2c_chapter_package_init.Parser, new[]{ "Infos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_value_package_buy), global::c2l_value_package_buy.Parser, new[]{ "Id", "PackageType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_value_package_buy), global::l2c_value_package_buy.Parser, new[]{ "Result", "Reweards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_bind_phone_send_msg), global::c2l_bind_phone_send_msg.Parser, new[]{ "PhoneNum", "Uid", "PappId", "AppId", "CchId", "Source" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_bind_phone_send_msg), global::l2c_bind_phone_send_msg.Parser, new[]{ "SuccessFlag", "ErrCode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_bind_phone_verify), global::c2l_bind_phone_verify.Parser, new[]{ "PhoneNum", "Uid", "PappId", "AppId", "CchId", "Source", "Code" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_bind_phone_verify), global::l2c_bind_phone_verify.Parser, new[]{ "SuccessFlag", "ErrCode", "Awards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_voice_review_init), global::c2l_voice_review_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_voice_review_init), global::l2c_voice_review_init.Parser, new[]{ "TotalPage", "PageNum", "Values", "ReadValues" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_voice_review_upd), global::l2c_voice_review_upd.Parser, new[]{ "NewNode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_voice_review_read), global::c2l_voice_review_read.Parser, new[]{ "ReadNode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_speech_init), global::c2l_speech_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_speech_init), global::l2c_speech_init.Parser, new[]{ "SpeechCount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_speech_result), global::c2l_speech_result.Parser, new[]{ "SpeechId", "ClothIds", "Options" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_speech_result), global::l2c_speech_result.Parser, new[]{ "Score", "Awards", "AllBestTag", "HaveWorstTag" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Doll), global::Doll.Parser, new[]{ "Type", "Id", "Count", "Index", "DollId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_grab_doll_start), global::c2l_grab_doll_start.Parser, new[]{ "MachineId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_grab_doll_start), global::l2c_grab_doll_start.Parser, new[]{ "RemainTime", "SuccessDollId", "ShowDollId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_grab_doll_result), global::c2l_grab_doll_result.Parser, new[]{ "GrabbedDollId", "MachineId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_grab_doll_result), global::l2c_grab_doll_result.Parser, new[]{ "Awards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_buy_grab_doll_ticket), global::c2l_buy_grab_doll_ticket.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_buy_grab_doll_ticket), global::l2c_buy_grab_doll_ticket.Parser, new[]{ "Awards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ProfileMsgData), global::ProfileMsgData.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BadgeMsgData), global::BadgeMsgData.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FriendRelationMsgData), global::FriendRelationMsgData.Parser, new[]{ "AddRelationTime", "TodayThumb", "RecvActivePackage", "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FriendMsgData), global::FriendMsgData.Parser, new[]{ "AccountId", "Name", "Level", "Signature", "Profile", "OwnBadge", "ShowBadge", "AchievementLevel", "FishLevel", "LastOnlineTime", "TodayActive", "Background", "ThumbNum", "ProfileCircle", "IsOnline", "TitlePrefix", "TitleMidfix", "TitlePostfix" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_init), global::c2l_friend_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_init), global::l2c_friend_init.Parser, new[]{ "TotalPage", "PageNum", "FriendData", "ApplyData", "RecvGiftNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_find), global::c2l_friend_find.Parser, new[]{ "AccountId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_find), global::l2c_friend_find.Parser, new[]{ "FriendData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_add), global::c2l_friend_add.Parser, new[]{ "AccountId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_add), global::l2c_friend_add.Parser, new[]{ "Type" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_delete), global::c2l_friend_delete.Parser, new[]{ "AccountId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_delete), global::l2c_friend_delete.Parser, new[]{ "Type" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_thumb), global::c2l_friend_thumb.Parser, new[]{ "AccountId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_thumb), global::l2c_friend_thumb.Parser, new[]{ "Type" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_req_package), global::c2l_friend_req_package.Parser, new[]{ "Type", "AccountId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_req_package), global::l2c_friend_req_package.Parser, new[]{ "Type", "Awards", "RecvedActiveNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_data_upd), global::l2c_friend_data_upd.Parser, new[]{ "FriendData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_personal_data_init), global::c2l_friend_personal_data_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_personal_data_init), global::l2c_friend_personal_data_init.Parser, new[]{ "Data", "RecvedThumbNum", "NextThumbNum", "RecvedActiveNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_personal_data_modify), global::c2l_friend_personal_data_modify.Parser, new[]{ "Signature", "ShowBadge", "Background" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_personal_data_modify), global::l2c_friend_personal_data_modify.Parser, new[]{ "Type" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_opt_apply), global::c2l_friend_opt_apply.Parser, new[]{ "Type", "AccountId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_opt_apply), global::l2c_friend_opt_apply.Parser, new[]{ "Type" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_personal_data_upd), global::l2c_friend_personal_data_upd.Parser, new[]{ "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_apply_upd), global::l2c_friend_apply_upd.Parser, new[]{ "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_del_upd), global::l2c_friend_del_upd.Parser, new[]{ "AccountId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_thumb_upd), global::l2c_friend_thumb_upd.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2l_friend_relation_upd), global::l2l_friend_relation_upd.Parser, new[]{ "SourceAccount", "Data", "Opt", "SourceId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_friend_thumb_package_req), global::c2l_friend_thumb_package_req.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_thumb_package_req), global::l2c_friend_thumb_package_req.Parser, new[]{ "Type", "Awards", "NextThumbNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_friend_relation_upd), global::l2c_friend_relation_upd.Parser, new[]{ "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RandomStageInfo), global::RandomStageInfo.Parser, new[]{ "StageType", "Id", "IsAccept", "CreateTime", "EndTime", "CurSecs", "IntParam", "StringParam" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_random_stage_init), global::c2l_random_stage_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_random_stage_init), global::l2c_random_stage_init.Parser, new[]{ "Infos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_random_stage_upd), global::l2c_random_stage_upd.Parser, new[]{ "Opts", "Info" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_random_stage_progress), global::c2l_random_stage_progress.Parser, new[]{ "StageId", "CreateTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_title_init), global::c2l_title_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_title_init), global::l2c_title_init.Parser, new[]{ "OwnTitleId", "Prefix", "Midfix", "Pofix" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_change_title), global::c2l_change_title.Parser, new[]{ "Prefix", "Midfix", "Pofix" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_change_title), global::l2c_change_title.Parser, new[]{ "Ret" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_unlock_title_upd), global::l2c_unlock_title_upd.Parser, new[]{ "TitleId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_share_init), global::c2l_share_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_share_upd), global::l2c_share_upd.Parser, new[]{ "Id", "IsReward" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_share_init), global::l2c_share_init.Parser, new[]{ "Infos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_share_reward), global::c2l_share_reward.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_share_reward), global::l2c_share_reward.Parser, new[]{ "Result", "Awards" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_badge_init), global::c2l_badge_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_badge_init), global::l2c_badge_init.Parser, new[]{ "CurBadgeIds", "OwnBadgeIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_badge_upd), global::l2c_badge_upd.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_badge_changed), global::c2l_badge_changed.Parser, new[]{ "ChangedIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_badge_changed), global::l2c_badge_changed.Parser, new[]{ "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_reputation_init), global::c2l_reputation_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_reputation_init), global::l2c_reputation_init.Parser, new[]{ "LastWeekReputation", "IsAwardThisWeek", "Awards", "CounterTick" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::l2c_reputation_init.Types.NationReputation), global::l2c_reputation_init.Types.NationReputation.Parser, new[]{ "Id", "Level" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_reputation_activity_init), global::c2l_reputation_activity_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SpeechActivity), global::SpeechActivity.Parser, new[]{ "Id", "CounterTick", "RemainCnts" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_reputation_activity_init), global::l2c_reputation_activity_init.Parser, new[]{ "ActivityInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_reputation_activity_upd), global::l2c_reputation_activity_upd.Parser, new[]{ "ActivityInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_unlock_cg_init), global::c2l_unlock_cg_init.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_unlock_cg_rep), global::l2c_unlock_cg_rep.Parser, new[]{ "CgId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_unlock_cg_upd), global::l2c_unlock_cg_upd.Parser, new[]{ "CgId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_google_purchase_create), global::c2l_google_purchase_create.Parser, new[]{ "CommodityId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_google_purchase_create), global::l2c_google_purchase_create.Parser, new[]{ "AppOrderNo", "IsTest", "CommodityId", "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2l_google_purchase_token), global::c2l_google_purchase_token.Parser, new[]{ "ProductId", "Token", "CommodityId", "AppOrderNo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::l2c_google_purchase_token), global::l2c_google_purchase_token.Parser, new[]{ "AppOrderNo", "ProductId", "Result" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
/// <summary>
/// 账号操作结果
/// </summary>
public enum CharacterOpResult {
  [pbr::OriginalName("COR_NULL")] CorNull = 0,
  /// <summary>
  /// 成功
  /// </summary>
  [pbr::OriginalName("COR_OK")] CorOk = 1,
  /// <summary>
  /// 失败:名字太长
  /// </summary>
  [pbr::OriginalName("COR_NAME_TOO_LONG")] CorNameTooLong = 2,
  /// <summary>
  ///COR_ALREADY_HAVE_CHARACTER	= 3; // 失败:名字冲突
  /// </summary>
  [pbr::OriginalName("COR_DB_INTERNAL_ERROR")] CorDbInternalError = 4,
  /// <summary>
  /// 失败:密码错误
  /// </summary>
  [pbr::OriginalName("COR_PASS_WRONG_ERROR")] CorPassWrongError = 5,
}

/// <summary>
/// 消息ID(_C2L_:客户端->服务器 _L2C_:服务器->客户端)
/// </summary>
public enum LogicMsgID {
  /// <summary>
  /// 禁用
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_NULL")] LogicMsgNull = 0,
  /// <summary>
  /// 客户端消息 (1-60000)
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ERROR")] LogicMsgL2CError = 60000,
  /// <summary>
  /// 登录599--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_LOGON_ASK")] LogicMsgL2CLogonAsk = 59901,
  /// <summary>
  /// 登录凭据
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_LOGON_PROOF")] LogicMsgC2LLogonProof = 59902,
  /// <summary>
  /// 登录结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_LOGON_REP")] LogicMsgL2CLogonRep = 59903,
  /// <summary>
  /// 服务器满人处理
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SVC_EXCEPTION")] LogicMsgL2CSvcException = 59905,
  /// <summary>
  /// 创建角色请求
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_CREATE_CHARACTER_REQ")] LogicMsgC2LCreateCharacterReq = 59911,
  /// <summary>
  /// 创建角色结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_CREATE_CHARACTER_REP")] LogicMsgL2CCreateCharacterRep = 59912,
  /// <summary>
  /// 没有角色(需要创建)
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_NO_CHARACTER")] LogicMsgL2CNoCharacter = 59913,
  /// <summary>
  /// 服务器就绪通知
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_READY")] LogicMsgL2CReady = 59921,
  /// <summary>
  /// 客户端就绪通知
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_READY")] LogicMsgC2LReady = 59922,
  /// <summary>
  /// 登录初始化基础信息
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_INITIALIZE")] LogicMsgL2CInitialize = 59923,
  /// <summary>
  /// 请求初始化物品
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_INITIALIZE_ITEM")] LogicMsgC2LInitializeItem = 59925,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_INITIALIZE_ITEM")] LogicMsgL2CInitializeItem = 59926,
  /// <summary>
  /// 请求初始化装备
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_INITIALIZE_EQUIP")] LogicMsgC2LInitializeEquip = 59928,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_INITIALIZE_EQUIP")] LogicMsgL2CInitializeEquip = 59929,
  /// <summary>
  /// 请求初始化角色
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_INITIALIZE_CHARACTER")] LogicMsgC2LInitializeCharacter = 59931,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_INITIALIZE_CHARACTER")] LogicMsgL2CInitializeCharacter = 59932,
  /// <summary>
  /// 配置表GMAccount有账号才可以使用以下GM协议
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ADD_ELEMENT_GM")] LogicMsgC2LAddElementGm = 59934,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ADD_ELEMENT_GM")] LogicMsgL2CAddElementGm = 59935,
  /// <summary>
  /// 重置玩家一些限制次数
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RESET_CNTS_GM")] LogicMsgC2LResetCntsGm = 59936,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_RESET_CNTS_GM")] LogicMsgL2CResetCntsGm = 59937,
  /// <summary>
  /// 获取所有时装
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GET_ALL_CLOTH_GM")] LogicMsgC2LGetAllClothGm = 59938,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_GET_ALL_CLOTH_GM")] LogicMsgL2CGetAllClothGm = 59939,
  /// <summary>
  /// 更新598--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_UPD_PLAYER")] LogicMsgL2CUpdPlayer = 59801,
  /// <summary>
  /// 更新角色
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_UPD_CHARACTER")] LogicMsgL2CUpdCharacter = 59802,
  /// <summary>
  /// 更新装备
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_UPD_EQUIPMENT")] LogicMsgL2CUpdEquipment = 59803,
  /// <summary>
  /// 更新物品
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_UPD_ITEM")] LogicMsgL2CUpdItem = 59804,
  /// <summary>
  /// 更新国家声望
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_UPD_NATION")] LogicMsgL2CUpdNation = 59805,
  /// <summary>
  /// 主线故事597--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORY_INIT")] LogicMsgC2LStoryInit = 59701,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORY_INIT")] LogicMsgL2CStoryInit = 59702,
  /// <summary>
  /// 主线故事更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORY_UPD")] LogicMsgL2CStoryUpd = 59703,
  /// <summary>
  /// 客户端指定关卡数据请求
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORY_STAGE_INIT")] LogicMsgC2LStoryStageInit = 59704,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORY_STAGE_INIT")] LogicMsgL2CStoryStageInit = 59705,
  /// <summary>
  /// 主线故事开始
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORY_START")] LogicMsgC2LStoryStart = 59707,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORY_START")] LogicMsgL2CStoryStart = 59708,
  /// <summary>
  /// 主线故事结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORY_RESULT")] LogicMsgC2LStoryResult = 59709,
  /// <summary>
  /// 购买主线关卡次数
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORY_ADD_CNTS")] LogicMsgC2LStoryAddCnts = 59710,
  /// <summary>
  /// 章节初始化
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_CHAPTER_INIT")] LogicMsgC2LChapterInit = 59712,
  [pbr::OriginalName("LOGIC_MSG_L2C_CHAPTER_INIT")] LogicMsgL2CChapterInit = 59713,
  /// <summary>
  /// 章节更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_CHAPTER_UPD")] LogicMsgL2CChapterUpd = 59714,
  /// <summary>
  /// 主线星星宝箱
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORY_STAR_TREASURE")] LogicMsgC2LStoryStarTreasure = 59715,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORY_STAR_TREASURE")] LogicMsgL2CStoryStarTreasure = 59716,
  /// <summary>
  /// 主线故事奖励
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORY_REWARD")] LogicMsgL2CStoryReward = 59730,
  /// <summary>
  /// 扫荡
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORY_FAST")] LogicMsgC2LStoryFast = 59731,
  /// <summary>
  /// 扫荡
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORY_FAST")] LogicMsgL2CStoryFast = 59732,
  /// <summary>
  /// 装备操作596--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STRENGTHEN_EQUIPMENT")] LogicMsgC2LStrengthenEquipment = 59601,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STRENGTHEN_EQUIPMENT")] LogicMsgL2CStrengthenEquipment = 59602,
  /// <summary>
  /// 分解
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SUBLIME_EQUIPMENT")] LogicMsgC2LSublimeEquipment = 59605,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SUBLIME_EQUIPMENT")] LogicMsgL2CSublimeEquipment = 59606,
  /// <summary>
  /// 合成
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SYNTHESIZE_EQUIPMENT")] LogicMsgC2LSynthesizeEquipment = 59608,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SYNTHESIZE_EQUIPMENT")] LogicMsgL2CSynthesizeEquipment = 59609,
  /// <summary>
  /// 服装穿戴
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_EQUIP_OUTFITS")] LogicMsgC2LEquipOutfits = 59610,
  /// <summary>
  /// 套装初始化请求
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SUIT_INIT")] LogicMsgC2LSuitInit = 59611,
  [pbr::OriginalName("LOGIC_MSG_L2C_SUIT_INIT")] LogicMsgL2CSuitInit = 59612,
  /// <summary>
  /// 套装档位奖励领取
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SUIT_REWARD")] LogicMsgC2LSuitReward = 59613,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SUIT_REWARD")] LogicMsgL2CSuitReward = 59614,
  /// <summary>
  /// 套装更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SUIT_UPD")] LogicMsgL2CSuitUpd = 59615,
  /// <summary>
  /// 角色操作595--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_CHARACTER_UPLEVEL")] LogicMsgC2LCharacterUplevel = 59501,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_CHARACTER_UPLEVEL")] LogicMsgL2CCharacterUplevel = 59502,
  /// <summary>
  /// 日常副本594--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_DAILY_STAGE_INIT")] LogicMsgC2LDailyStageInit = 59401,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_STAGE_INIT")] LogicMsgL2CDailyStageInit = 59402,
  /// <summary>
  /// 日常副本开始
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_DAILY_START")] LogicMsgC2LDailyStart = 59403,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_START")] LogicMsgL2CDailyStart = 59404,
  /// <summary>
  /// 更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_UPD")] LogicMsgL2CDailyUpd = 59405,
  /// <summary>
  /// 结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_DAILY_RESULT")] LogicMsgC2LDailyResult = 59406,
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_RESULT")] LogicMsgL2CDailyResult = 59407,
  /// <summary>
  /// 扫荡
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_DAILY_FAST")] LogicMsgC2LDailyFast = 59408,
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_FAST")] LogicMsgL2CDailyFast = 59409,
  /// <summary>
  /// 次数更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_CNTS_UPD")] LogicMsgL2CDailyCntsUpd = 59410,
  /// <summary>
  /// 阵容操作593--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_UPD_PHALANX")] LogicMsgC2LUpdPhalanx = 59301,
  /// <summary>
  /// 单人副本591--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SINGLE_COMBAT_INIT")] LogicMsgC2LSingleCombatInit = 59101,
  /// <summary>
  /// 单人副本初始化|重置
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SINGLE_COMBAT_INIT")] LogicMsgL2CSingleCombatInit = 59102,
  /// <summary>
  /// 单人副本开始
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SINGLE_COMBAT_START")] LogicMsgC2LSingleCombatStart = 59105,
  /// <summary>
  /// 单人副本开始
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SINGLE_COMBAT_START")] LogicMsgL2CSingleCombatStart = 59106,
  /// <summary>
  /// 单人副本结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SINGLE_COMBAT_RESULT")] LogicMsgC2LSingleCombatResult = 59107,
  /// <summary>
  /// 单人副本结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SINGLE_COMBAT_RESULT")] LogicMsgL2CSingleCombatResult = 59108,
  /// <summary>
  /// 单人副本关卡更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SINGLE_STAGE_UPD")] LogicMsgL2CSingleStageUpd = 59109,
  /// <summary>
  /// 单人副上周结算奖励
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SINGLE_REWARD")] LogicMsgC2LSingleReward = 59110,
  /// <summary>
  /// 单人副上周结算奖励
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SINGLE_REWARD")] LogicMsgL2CSingleReward = 59111,
  /// <summary>
  /// 约会588--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ENGAGEMENT_UPD")] LogicMsgL2CEngagementUpd = 58801,
  /// <summary>
  /// 约会初始化
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ENGAGEMENT_INIT")] LogicMsgC2LEngagementInit = 58802,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ENGAGEMENT_INIT")] LogicMsgL2CEngagementInit = 58803,
  /// <summary>
  /// 使用道具解锁约会
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ENGAGEMENT_UNLOCK")] LogicMsgC2LEngagementUnlock = 58804,
  /// <summary>
  /// 开始约会
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_START_ENGAGEMENT")] LogicMsgC2LStartEngagement = 58807,
  [pbr::OriginalName("LOGIC_MSG_L2C_START_ENGAGEMENT")] LogicMsgL2CStartEngagement = 58808,
  /// <summary>
  /// 约会结算
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ENDS_ENGAGEMENT")] LogicMsgC2LEndsEngagement = 58809,
  [pbr::OriginalName("LOGIC_MSG_L2C_ENDS_ENGAGEMENT")] LogicMsgL2CEndsEngagement = 58810,
  /// <summary>
  /// 钓鱼587--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FISH_INFO")] LogicMsgC2LFishInfo = 58701,
  /// <summary>
  /// 钓鱼基础数据(更新同用)
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FISH_INFO")] LogicMsgL2CFishInfo = 58702,
  /// <summary>
  /// 钓鱼记录
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FISH_RECORD")] LogicMsgL2CFishRecord = 58703,
  /// <summary>
  /// 钓鱼记录更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FISH_RECORD_UPD")] LogicMsgL2CFishRecordUpd = 58705,
  /// <summary>
  /// 客户端更新钓鱼装备
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_UPD_FISHING_EQUIPMENTS")] LogicMsgC2LUpdFishingEquipments = 58706,
  /// <summary>
  /// 钓鱼开始
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_START_FISHING")] LogicMsgC2LStartFishing = 58711,
  /// <summary>
  /// 开始结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_START_FISHING")] LogicMsgL2CStartFishing = 58712,
  /// <summary>
  /// 钓鱼成功
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FISHING_SUCCESS")] LogicMsgC2LFishingSuccess = 58715,
  /// <summary>
  /// 成功返回
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FISHING_SUCCESS")] LogicMsgL2CFishingSuccess = 58716,
  /// <summary>
  /// 随机钓鱼结果（用于连续钓鱼类型）
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RANDOM_FISHING_RESULT")] LogicMsgC2LRandomFishingResult = 58719,
  /// <summary>
  /// 随机钓鱼结果（所有钓鱼类型）
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_RANDOM_FISHING_RESULT")] LogicMsgL2CRandomFishingResult = 58720,
  /// <summary>
  /// 百科585--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ENCYCLOPEDIA_INIT")] LogicMsgC2LEncyclopediaInit = 58501,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ENCYCLOPEDIA_INIT")] LogicMsgL2CEncyclopediaInit = 58502,
  /// <summary>
  /// 百科更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ENCYCLOPEDIA_UPD")] LogicMsgL2CEncyclopediaUpd = 58503,
  /// <summary>
  /// 百科阅读
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ENCYCLOPEDIA_READ")] LogicMsgC2LEncyclopediaRead = 58504,
  /// <summary>
  /// 通讯器583--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_WECHAT_INIT")] LogicMsgC2LWechatInit = 58301,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_WECHAT_MSG_INIT")] LogicMsgL2CWechatMsgInit = 58303,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_WECHAT_VOICE_INIT")] LogicMsgL2CWechatVoiceInit = 58304,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_WECHAT_OFFICIAL_ACCOUNT_INIT")] LogicMsgL2CWechatOfficialAccountInit = 58305,
  /// <summary>
  /// 通讯器更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_WECHAT_MSG")] LogicMsgL2CWechatMsg = 58307,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_WECHAT_VOICE")] LogicMsgL2CWechatVoice = 58308,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_WECHAT_OFFICIAL_ACCOUNT")] LogicMsgL2CWechatOfficialAccount = 58309,
  /// <summary>
  /// 客户端操作
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_WECHAT_MSG_UPD")] LogicMsgC2LWechatMsgUpd = 58311,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_WECHAT_VOICE_UPD")] LogicMsgC2LWechatVoiceUpd = 58312,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_WECHAT_OFFICIAL_ACCOUNT_UPD")] LogicMsgC2LWechatOfficialAccountUpd = 58313,
  /// <summary>
  /// 男主备注名初始化
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_WECHAT_NICKNAME_INIT")] LogicMsgL2CWechatNicknameInit = 58315,
  /// <summary>
  /// 男主备注名修改
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_WECHAT_NICKNAME_RENAME")] LogicMsgC2LWechatNicknameRename = 58316,
  /// <summary>
  /// 	
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_WECHAT_NICKNAME_RENAME")] LogicMsgL2CWechatNicknameRename = 58317,
  /// <summary>
  /// 充值581--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GENERATE_RECHARGE_ORDER")] LogicMsgC2LGenerateRechargeOrder = 58101,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_GENERATE_RECHARGE_ORDER")] LogicMsgL2CGenerateRechargeOrder = 58102,
  /// <summary>
  /// 新的充值订单
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_RECHARGE_ORDER_UPD")] LogicMsgL2CRechargeOrderUpd = 58103,
  /// <summary>
  /// 充值商品更新（用于首冲双倍和限购）
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_RECHARGE_GOODS_UPD")] LogicMsgL2CRechargeGoodsUpd = 58107,
  /// <summary>
  /// 充值商品初始化
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RECHARGE_GOODS_INIT")] LogicMsgC2LRechargeGoodsInit = 58108,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_RECHARGE_GOODS_INIT")] LogicMsgL2CRechargeGoodsInit = 58109,
  /// <summary>
  /// 领取累充奖励(活动ID为0，为总累充奖励)
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RECHARGE_GET_SUM_AWARD")] LogicMsgC2LRechargeGetSumAward = 58111,
  [pbr::OriginalName("LOGIC_MSG_L2C_RECHARGE_GET_SUM_AWARD")] LogicMsgL2CRechargeGetSumAward = 58112,
  /// <summary>
  /// IOS充值
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_IOS_RECHARGE_INIT")] LogicMsgC2LIosRechargeInit = 58115,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_IOS_RECHARGE_INIT")] LogicMsgL2CIosRechargeInit = 58116,
  /// <summary>
  /// 请求充值商品(验证)
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RECHARGE_COMMODITY_ASK")] LogicMsgC2LRechargeCommodityAsk = 58117,
  /// <summary>
  /// 回复
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_RECHARGE_COMMODITY_REP")] LogicMsgL2CRechargeCommodityRep = 58118,
  /// <summary>
  /// 充值
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_IOS_RECHARGE")] LogicMsgC2LIosRecharge = 58119,
  /// <summary>
  /// 回复	
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_IOS_RECHARGE_REP")] LogicMsgL2CIosRechargeRep = 58120,
  /// <summary>
  /// 已删除IOS交易订单信息
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_IOS_RECHARGE_CLOSED")] LogicMsgC2LIosRechargeClosed = 58121,
  /// <summary>
  /// 换装小游戏579--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_MINIGAME_CLOTHCHANGING_STAR")] LogicMsgC2LMinigameClothchangingStar = 57901,
  /// <summary>
  /// 换装成功
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_MINIGAME_CLOTHCHANGING_SUCCESS")] LogicMsgL2CMinigameClothchangingSuccess = 57902,
  /// <summary>
  /// 副本界面578--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STAGE_BRANCHMODEL")] LogicMsgC2LStageBranchmodel = 57801,
  [pbr::OriginalName("LOGIC_MSG_L2C_STAGE_BRANCHMODEL")] LogicMsgL2CStageBranchmodel = 57802,
  /// <summary>
  /// 商城577--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORE_INIT")] LogicMsgC2LStoreInit = 57701,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORE_INIT")] LogicMsgL2CStoreInit = 57702,
  /// <summary>
  /// 商城更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORE_UPD")] LogicMsgL2CStoreUpd = 57703,
  /// <summary>
  /// 商城购买（游戏资源购买）
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_STORE_BUY")] LogicMsgC2LStoreBuy = 57704,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORE_BUY")] LogicMsgL2CStoreBuy = 57705,
  /// <summary>
  /// 商品更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORE_GOODS_UPD")] LogicMsgL2CStoreGoodsUpd = 57706,
  /// <summary>
  /// 礼包更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_STORE_PACKAGE_UPD")] LogicMsgL2CStorePackageUpd = 57707,
  /// <summary>
  /// 新手引導576--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GUIDE_INIT")] LogicMsgC2LGuideInit = 57601,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_GUIDE_INIT")] LogicMsgL2CGuideInit = 57602,
  /// <summary>
  /// 引導步驟
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GUIDE_SECTION")] LogicMsgC2LGuideSection = 57603,
  /// <summary>
  /// 邮箱575
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_MAIL_INIT")] LogicMsgC2LMailInit = 57501,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_MAIL_INIT")] LogicMsgL2CMailInit = 57502,
  /// <summary>
  /// 邮件领取
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_MAIL_READ")] LogicMsgC2LMailRead = 57503,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_MAIL_READ")] LogicMsgL2CMailRead = 57504,
  /// <summary>
  /// 有新邮件
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_MAIL_SEND")] LogicMsgL2CMailSend = 57505,
  /// <summary>
  /// 公告574
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_NOTICE_INIT")] LogicMsgL2CNoticeInit = 57401,
  /// <summary>
  /// 公告发送
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_NOTICE_SEND")] LogicMsgL2CNoticeSend = 57402,
  /// <summary>
  /// 请求公告初始化
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_NOTICE_INIT")] LogicMsgC2LNoticeInit = 57403,
  /// <summary>
  /// 探索573
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_EXPLORATION_INIT")] LogicMsgC2LExplorationInit = 57301,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_EXPLORATION_INIT")] LogicMsgL2CExplorationInit = 57302,
  /// <summary>
  /// 探索开始
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_EXPLORATION_START")] LogicMsgC2LExplorationStart = 57303,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_EXPLORATION_START")] LogicMsgL2CExplorationStart = 57304,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_EXPLORATION_UPD")] LogicMsgL2CExplorationUpd = 57306,
  /// <summary>
  /// 技能卡片更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_EXPLORATION_CARDS_UPD")] LogicMsgL2CExplorationCardsUpd = 57307,
  [pbr::OriginalName("LOGIC_MSG_C2L_EXPLORATION_AWARD")] LogicMsgC2LExplorationAward = 57308,
  [pbr::OriginalName("LOGIC_MSG_L2C_EXPLORATION_AWARD")] LogicMsgL2CExplorationAward = 57309,
  /// <summary>
  /// 累计登录570
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SEVENLOGIN_INIT")] LogicMsgC2LSevenloginInit = 57001,
  /// <summary>
  /// 累积登录奖励
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SEVENLOGIN_REWARD")] LogicMsgL2CSevenloginReward = 57002,
  /// <summary>
  /// 个性化设置568
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_OPTIONS_UPD")] LogicMsgL2COptionsUpd = 56801,
  /// <summary>
  /// 初始化设置
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_OPTIONS_INIT")] LogicMsgC2LOptionsInit = 56802,
  [pbr::OriginalName("LOGIC_MSG_L2C_OPTIONS_INIT")] LogicMsgL2COptionsInit = 56803,
  /// <summary>
  /// 修改设置
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_OPTIONS_MODIFY")] LogicMsgC2LOptionsModify = 56805,
  [pbr::OriginalName("LOGIC_MSG_L2C_OPTIONS_MODIFY")] LogicMsgL2COptionsModify = 56806,
  /// <summary>
  /// 购买头像、背景、头像框
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_OPTIONS_BUY")] LogicMsgC2LOptionsBuy = 56808,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_OPTIONS_BUY")] LogicMsgL2COptionsBuy = 56809,
  /// <summary>
  /// 自定义头像变更
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_OPTIONS_DIY_HEADIMG_UPD")] LogicMsgC2LOptionsDiyHeadimgUpd = 56810,
  /// <summary>
  /// 抽卡566
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_LOTTERY_COST")] LogicMsgC2LLotteryCost = 56601,
  [pbr::OriginalName("LOGIC_MSG_L2C_LOTTERY_COST")] LogicMsgL2CLotteryCost = 56602,
  /// <summary>
  /// 补充抽奖券
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_LOTTERY_ADD")] LogicMsgC2LLotteryAdd = 56604,
  [pbr::OriginalName("LOGIC_MSG_L2C_LOTTERY_ADD")] LogicMsgL2CLotteryAdd = 56605,
  /// <summary>
  /// 卡池更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_LOTTERY_POOL_UPD")] LogicMsgL2CLotteryPoolUpd = 56607,
  /// <summary>
  /// 初始化卡池
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_LOTTERY_POOL_INIT")] LogicMsgC2LLotteryPoolInit = 56608,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_LOTTERY_POOL_INIT")] LogicMsgL2CLotteryPoolInit = 56609,
  /// <summary>
  /// 签到564
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SIGN_IN_INIT")] LogicMsgC2LSignInInit = 56401,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SIGN_IN_INIT")] LogicMsgL2CSignInInit = 56402,
  /// <summary>
  /// 签到或月卡信息更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SIGN_IN_UPD")] LogicMsgL2CSignInUpd = 56403,
  /// <summary>
  /// 任务系统561
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_DAILY_TASK_INIT")] LogicMsgC2LDailyTaskInit = 56100,
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_TASK_INIT")] LogicMsgL2CDailyTaskInit = 56101,
  /// <summary>
  /// 任务领奖
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_DAILY_TASK_GET_REWARD")] LogicMsgC2LDailyTaskGetReward = 56102,
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_TASK_GET_REWARD")] LogicMsgL2CDailyTaskGetReward = 56103,
  /// <summary>
  /// 任务状态更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_DAILY_TASK_UPD")] LogicMsgL2CDailyTaskUpd = 56104,
  /// <summary>
  /// 成就系统560
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ACHIEVEMENT_INIT")] LogicMsgC2LAchievementInit = 56001,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ACHIEVEMENT_STAGE_INIT")] LogicMsgL2CAchievementStageInit = 56002,
  /// <summary>
  /// 成就领奖
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ACHIEVEMENT_GET_REWARD")] LogicMsgC2LAchievementGetReward = 56005,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ACHIEVEMENT_GET_REWARD")] LogicMsgL2CAchievementGetReward = 56006,
  /// <summary>
  /// 成就升级
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ACHIEVEMENT_LEVEL_UP")] LogicMsgC2LAchievementLevelUp = 56008,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ACHIEVEMENT_LEVEL_UP")] LogicMsgL2CAchievementLevelUp = 56009,
  /// <summary>
  /// 成就系统更新(等级,经验)
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ACHIEVEMENT_UPD")] LogicMsgL2CAchievementUpd = 56011,
  /// <summary>
  /// 成就任务状态更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_ACHIEVEMENT_STAGE_UPD")] LogicMsgL2CAchievementStageUpd = 56012,
  /// <summary>
  ///  资源购买系统559
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RESOURCE_PURCHASE_INIT")] LogicMsgC2LResourcePurchaseInit = 55900,
  [pbr::OriginalName("LOGIC_MSG_L2C_RESOURCE_PURCHASE_INIT")] LogicMsgL2CResourcePurchaseInit = 55901,
  /// <summary>
  /// 购买资源
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RESOURCE_PURCHASE_BUY")] LogicMsgC2LResourcePurchaseBuy = 55902,
  [pbr::OriginalName("LOGIC_MSG_L2C_RESOURCE_PURCHASE_BUY")] LogicMsgL2CResourcePurchaseBuy = 55903,
  [pbr::OriginalName("LOGIC_MSG_C2L_USE_VIT_PROP")] LogicMsgC2LUseVitProp = 55904,
  [pbr::OriginalName("LOGIC_MSG_L2C_USE_VIT_PROP")] LogicMsgL2CUseVitProp = 55905,
  /// <summary>
  ///	定时体力558
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ONTIME_VIT_INIT")] LogicMsgC2LOntimeVitInit = 55800,
  [pbr::OriginalName("LOGIC_MSG_L2C_ONTIME_VIT_INIT")] LogicMsgL2COntimeVitInit = 55801,
  /// <summary>
  /// 领取
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_ONTIME_VIT_RECV")] LogicMsgC2LOntimeVitRecv = 55802,
  [pbr::OriginalName("LOGIC_MSG_L2C_ONTIME_VIT_RECV")] LogicMsgL2COntimeVitRecv = 55803,
  [pbr::OriginalName("LOGIC_MSG_L2C_ONTIME_VIT_UPD")] LogicMsgL2COntimeVitUpd = 55804,
  /// <summary>
  /// 限时礼包557
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_TIME_LIMIT_PACKAGE_INIT")] LogicMsgC2LTimeLimitPackageInit = 55700,
  [pbr::OriginalName("LOGIC_MSG_L2C_TIME_LIMIT_PACKAGE_INIT")] LogicMsgL2CTimeLimitPackageInit = 55701,
  /// <summary>
  /// 限时礼包更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_TIME_LIMIT_PACKAGE_UPD")] LogicMsgL2CTimeLimitPackageUpd = 55702,
  /// <summary>
  /// 章节礼包初始化
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_CHAPTER_PACKAGE_INIT")] LogicMsgC2LChapterPackageInit = 55704,
  [pbr::OriginalName("LOGIC_MSG_L2C_CHAPTER_PACKAGE_INIT")] LogicMsgL2CChapterPackageInit = 55705,
  /// <summary>
  /// 用游戏资源购买限时、章节礼包
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_VALUE_PACKAGE_BUY")] LogicMsgC2LValuePackageBuy = 55706,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_VALUE_PACKAGE_BUY")] LogicMsgL2CValuePackageBuy = 55707,
  /// <summary>
  /// 绑定手机556
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_BIND_PHONE_SEND_MSG")] LogicMsgC2LBindPhoneSendMsg = 55600,
  [pbr::OriginalName("LOGIC_MSG_L2C_BIND_PHONE_SEND_MSG")] LogicMsgL2CBindPhoneSendMsg = 55601,
  /// <summary>
  /// 验证码验证
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_BIND_PHONE_VERIFY")] LogicMsgC2LBindPhoneVerify = 55602,
  [pbr::OriginalName("LOGIC_MSG_L2C_BIND_PHONE_VERIFY")] LogicMsgL2CBindPhoneVerify = 55603,
  /// <summary>
  /// 语音回顾555--
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_VOICE_REVIEW_INIT")] LogicMsgC2LVoiceReviewInit = 55501,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_VOICE_REVIEW_INIT")] LogicMsgL2CVoiceReviewInit = 55502,
  /// <summary>
  /// 语音回顾更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_VOICE_REVIEW_UPD")] LogicMsgL2CVoiceReviewUpd = 55503,
  /// <summary>
  /// 语音回顾阅读
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_VOICE_REVIEW_READ")] LogicMsgC2LVoiceReviewRead = 55504,
  /// <summary>
  /// 演讲小游戏554
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SPEECH_INIT")] LogicMsgC2LSpeechInit = 55400,
  [pbr::OriginalName("LOGIC_MSG_L2C_SPEECH_INIT")] LogicMsgL2CSpeechInit = 55401,
  /// <summary>
  /// 演讲小游戏结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SPEECH_RESULT")] LogicMsgC2LSpeechResult = 55402,
  [pbr::OriginalName("LOGIC_MSG_L2C_SPEECH_RESULT")] LogicMsgL2CSpeechResult = 55403,
  /// <summary>
  /// 扭蛋小游戏 553
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GRAB_DOLL_START")] LogicMsgC2LGrabDollStart = 55300,
  [pbr::OriginalName("LOGIC_MSG_L2C_GRAB_DOLL_START")] LogicMsgL2CGrabDollStart = 55301,
  /// <summary>
  /// 抓娃娃结果
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GRAB_DOLL_RESULT")] LogicMsgC2LGrabDollResult = 55302,
  [pbr::OriginalName("LOGIC_MSG_L2C_GRAB_DOLL_RESULT")] LogicMsgL2CGrabDollResult = 55304,
  /// <summary>
  /// 购买抓娃娃门票
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_BUY_GRAB_DOLL_TICKET")] LogicMsgC2LBuyGrabDollTicket = 55305,
  [pbr::OriginalName("LOGIC_MSG_L2C_BUY_GRAB_DOLL_TICKET")] LogicMsgL2CBuyGrabDollTicket = 55306,
  /// <summary>
  /// 好友 552
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_INIT")] LogicMsgC2LFriendInit = 55200,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_INIT")] LogicMsgL2CFriendInit = 55201,
  /// <summary>
  /// 查找好友
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_FIND")] LogicMsgC2LFriendFind = 55202,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_FIND")] LogicMsgL2CFriendFind = 55203,
  /// <summary>
  /// 申请添加好友
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_ADD")] LogicMsgC2LFriendAdd = 55204,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_ADD")] LogicMsgL2CFriendAdd = 55205,
  /// <summary>
  /// 申请删除好友
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_DELETE")] LogicMsgC2LFriendDelete = 55206,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_DELETE")] LogicMsgL2CFriendDelete = 55207,
  /// <summary>
  /// 点赞好友个人信息
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_THUMB")] LogicMsgC2LFriendThumb = 55208,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_THUMB")] LogicMsgL2CFriendThumb = 55209,
  /// <summary>
  /// 申请领取好友活跃礼包
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_REQ_PACKAGE")] LogicMsgC2LFriendReqPackage = 55210,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_REQ_PACKAGE")] LogicMsgL2CFriendReqPackage = 55211,
  /// <summary>
  /// 好友数据更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_DATA_UPD")] LogicMsgL2CFriendDataUpd = 55212,
  /// <summary>
  /// 查看个人资料
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_PERSONAL_DATA_INIT")] LogicMsgC2LFriendPersonalDataInit = 55213,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_PERSONAL_DATA_INIT")] LogicMsgL2CFriendPersonalDataInit = 55214,
  /// <summary>
  /// 修改个人资料
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_PERSONAL_DATA_MODIFY")] LogicMsgC2LFriendPersonalDataModify = 55215,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_PERSONAL_DATA_MODIFY")] LogicMsgL2CFriendPersonalDataModify = 55216,
  /// <summary>
  /// 操作好友申请
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_OPT_APPLY")] LogicMsgC2LFriendOptApply = 55217,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_OPT_APPLY")] LogicMsgL2CFriendOptApply = 55218,
  /// <summary>
  /// 个人资料更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_PERSONAL_DATA_UPD")] LogicMsgL2CFriendPersonalDataUpd = 55219,
  /// <summary>
  /// 新的好友申请
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_APPLY_UPD")] LogicMsgL2CFriendApplyUpd = 55220,
  /// <summary>
  /// 删除好友更新
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_DEL_UPD")] LogicMsgL2CFriendDelUpd = 55221,
  /// <summary>
  /// 有人给点赞
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_THUMB_UPD")] LogicMsgL2CFriendThumbUpd = 55222,
  /// <summary>
  /// 新的好友申请(服务器内部)
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2L_FRIEND_RELATION_UPD")] LogicMsgL2LFriendRelationUpd = 55223,
  /// <summary>
  /// 好友点赞礼包
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_FRIEND_THUMB_PACKAGE_REQ")] LogicMsgC2LFriendThumbPackageReq = 55224,
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_THUMB_PACKAGE_REQ")] LogicMsgL2CFriendThumbPackageReq = 55225,
  /// <summary>
  /// 新的好友关系
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_FRIEND_RELATION_UPD")] LogicMsgL2CFriendRelationUpd = 55227,
  /// <summary>
  /// 随机关卡551
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RANDOM_STAGE_INIT")] LogicMsgC2LRandomStageInit = 55101,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_RANDOM_STAGE_INIT")] LogicMsgL2CRandomStageInit = 55102,
  /// <summary>
  /// 随机关卡更新内容
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_RANDOM_STAGE_UPD")] LogicMsgL2CRandomStageUpd = 55103,
  /// <summary>
  /// 随机关卡更新（暂时只有战斗）
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_RANDOM_STAGE_PROGRESS")] LogicMsgC2LRandomStageProgress = 55105,
  /// <summary>
  /// 称号 550
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_TITLE_INIT")] LogicMsgC2LTitleInit = 55001,
  [pbr::OriginalName("LOGIC_MSG_L2C_TITLE_INIT")] LogicMsgL2CTitleInit = 55002,
  /// <summary>
  /// 改变称号
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_CHANGE_TITLE")] LogicMsgC2LChangeTitle = 55003,
  [pbr::OriginalName("LOGIC_MSG_L2C_CHANGE_TITLE")] LogicMsgL2CChangeTitle = 55004,
  /// <summary>
  /// 新称号解锁
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_UNLOCK_TITLE_UPD")] LogicMsgL2CUnlockTitleUpd = 55005,
  /// <summary>
  /// 分享 549
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SHARE_INIT")] LogicMsgC2LShareInit = 54901,
  [pbr::OriginalName("LOGIC_MSG_L2C_SHARE_INIT")] LogicMsgL2CShareInit = 54902,
  [pbr::OriginalName("LOGIC_MSG_L2C_SHARE_UPD")] LogicMsgL2CShareUpd = 54903,
  /// <summary>
  /// 领奖
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_SHARE_REWARD")] LogicMsgC2LShareReward = 54905,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_SHARE_REWARD")] LogicMsgL2CShareReward = 54906,
  /// <summary>
  /// 徽章 548
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_BADGE_INIT")] LogicMsgC2LBadgeInit = 54801,
  [pbr::OriginalName("LOGIC_MSG_L2C_BADGE_INIT")] LogicMsgL2CBadgeInit = 54802,
  /// <summary>
  /// 徽章更新（新增）
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_BADGE_UPD")] LogicMsgL2CBadgeUpd = 54803,
  /// <summary>
  /// 调整展示徽章
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_BADGE_CHANGED")] LogicMsgC2LBadgeChanged = 54805,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_BADGE_CHANGED")] LogicMsgL2CBadgeChanged = 54806,
  /// <summary>
  /// 声望 547
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_REPUTATION_INIT")] LogicMsgC2LReputationInit = 54701,
  [pbr::OriginalName("LOGIC_MSG_L2C_REPUTATION_INIT")] LogicMsgL2CReputationInit = 54702,
  /// <summary>
  /// 活动id初始化
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_REPUTATION_ACTIVITY_INIT")] LogicMsgC2LReputationActivityInit = 54703,
  [pbr::OriginalName("LOGIC_MSG_L2C_REPUTATION_ACTIVITY_INIT")] LogicMsgL2CReputationActivityInit = 54704,
  [pbr::OriginalName("LOGIC_MSG_L2C_REPUTATION_ACTIVITY_UPD")] LogicMsgL2CReputationActivityUpd = 54705,
  /// <summary>
  ///CG
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_UNLOCK_CG_INIT")] LogicMsgC2LUnlockCgInit = 54601,
  /// <summary>
  /// 发送已解锁的CG
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_UNLOCK_CG_REP")] LogicMsgL2CUnlockCgRep = 54602,
  /// <summary>
  /// 更新已解锁的CG
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_UNLOCK_CG_UPD")] LogicMsgL2CUnlockCgUpd = 54603,
  /// <summary>
  /// Google支付 544
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GOOGLE_PURCHASE_INIT")] LogicMsgC2LGooglePurchaseInit = 54401,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_GOOGLE_PURCHASE_INIT")] LogicMsgL2CGooglePurchaseInit = 54402,
  /// <summary>
  /// 创建Google订单
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GOOGLE_PURCHASE_CREATE")] LogicMsgC2LGooglePurchaseCreate = 54404,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_GOOGLE_PURCHASE_CREATE")] LogicMsgL2CGooglePurchaseCreate = 54405,
  /// <summary>
  /// 验证token
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GOOGLE_PURCHASE_TOKEN")] LogicMsgC2LGooglePurchaseToken = 54407,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_GOOGLE_PURCHASE_TOKEN")] LogicMsgL2CGooglePurchaseToken = 54408,
  /// <summary>
  /// 取消logic生成的订单
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_C2L_GOOGLE_PURCHASE_VOIDED")] LogicMsgC2LGooglePurchaseVoided = 54410,
  /// <summary>
  /// 
  /// </summary>
  [pbr::OriginalName("LOGIC_MSG_L2C_GOOGLE_PURCHASE_VOIDED")] LogicMsgL2CGooglePurchaseVoided = 54411,
}

/// <summary>
/// 游戏元素类型
/// </summary>
public enum GameElementType {
  [pbr::OriginalName("GAME_ELE_T_NULL")] GameEleTNull = 0,
  /// <summary>
  /// 物品
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_ITEM")] GameEleTItem = 1,
  /// <summary>
  /// 角色 2
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_COIN")] GameEleTCoin = 3,
  /// <summary>
  /// 钻石
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_DIAMOND")] GameEleTDiamond = 4,
  /// <summary>
  /// 充值钻石
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_RECHARGE_DIAMOND")] GameEleTRechargeDiamond = 5,
  /// <summary>
  /// 免费钻石
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_FREE_DIAMOND")] GameEleTFreeDiamond = 6,
  /// <summary>
  /// 体力
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_VITALITY")] GameEleTVitality = 7,
  /// <summary>
  /// 竞技场1
  /// 竞技场2
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_FAVOURITE")] GameEleTFavourite = 10,
  /// <summary>
  /// 主角经验
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_PROTAGONIST_EXP")] GameEleTProtagonistExp = 11,
  /// <summary>
  /// 配角经验
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_COSTAR_EXP")] GameEleTCostarExp = 12,
  /// <summary>
  /// 钓鱼经验
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_FISHING_EXP")] GameEleTFishingExp = 13,
  /// <summary>
  /// 国家声望
  /// </summary>
  [pbr::OriginalName("GAME_ELE_T_NATION_EXP")] GameEleTNationExp = 14,
}

/// <summary>
/// 角色解锁状态
/// </summary>
public enum CharacterRelation {
  [pbr::OriginalName("CHARACTER_RELATION_NULL")] Null = 0,
  /// <summary>
  /// 了解,开始建立好感度
  /// </summary>
  [pbr::OriginalName("CHARACTER_RELATION_KNOW")] Know = 1,
  /// <summary>
  /// 约会,
  /// </summary>
  [pbr::OriginalName("CHARACTER_RELATION_DATE")] Date = 2,
  /// <summary>
  /// 挚交,可战斗
  /// </summary>
  [pbr::OriginalName("CHARACTER_RELATION_BOSOM")] Bosom = 3,
}

public enum MutexNodeType {
  [pbr::OriginalName("MUTEX_NODE_TYPE_NULL")] Null = 0,
  [pbr::OriginalName("MUTEX_NODE_TYPE_MAIN_STORY")] MainStory = 1,
  [pbr::OriginalName("MUTEX_NODE_TYPE_ENGAGEMENT")] Engagement = 2,
}

public enum LogonSDKType {
  /// <summary>
  /// 国内
  /// </summary>
  [pbr::OriginalName("LOGON_SDK_TYPE_CHINA")] China = 0,
  /// <summary>
  /// 国外
  /// </summary>
  [pbr::OriginalName("LOGON_SDK_TYPE_FOREIGN")] Foreign = 1,
}

/// <summary>
/// 关卡状态
/// </summary>
public enum StageState {
  /// <summary>
  /// 关闭
  /// </summary>
  [pbr::OriginalName("STAGE_STATE_CLOSE")] Close = 0,
  /// <summary>
  /// 未解锁（客户端的?状态）
  /// </summary>
  [pbr::OriginalName("STAGE_STATE_LOCK")] Lock = 1,
  /// <summary>
  /// 开启
  /// </summary>
  [pbr::OriginalName("STAGE_STATE_OPEN")] Open = 2,
  /// <summary>
  /// 完成(非随机关卡用)
  /// </summary>
  [pbr::OriginalName("STAGE_STATE_FINISH")] Finish = 3,
}

/// <summary>
/// 关卡开始结果
/// </summary>
public enum StageStartResult {
  /// <summary>
  /// 允许开始
  /// </summary>
  [pbr::OriginalName("STAGE_START_OK")] StageStartOk = 0,
  /// <summary>
  /// 体力不足
  /// </summary>
  [pbr::OriginalName("STAGE_START_VITALITY_NOT_ENOUGH")] StageStartVitalityNotEnough = 1,
  /// <summary>
  /// 关卡不存在(随机关卡)
  /// </summary>
  [pbr::OriginalName("STAGE_START_STAGE_NOT_EXIST")] StageStartStageNotExist = 2,
  /// <summary>
  /// 关卡未开启(前置条件不满足)
  /// </summary>
  [pbr::OriginalName("STAGE_START_STAGE_NOT_OPEN")] StageStartStageNotOpen = 3,
  /// <summary>
  /// 达到当日限制次数(战斗关卡)
  /// </summary>
  [pbr::OriginalName("STAGE_START_LIMIT_ZERO")] StageStartLimitZero = 5,
}

public enum EngagementState {
  /// <summary>
  /// 无状态
  /// </summary>
  [pbr::OriginalName("ENGA_NULL")] EngaNull = 0,
  /// <summary>
  /// 进入过约会	(0x 0000 0001)
  /// </summary>
  [pbr::OriginalName("ENGA_ACCESSED")] EngaAccessed = 1,
  /// <summary>
  /// 约会已完成过	(0x 0000 0010)
  /// </summary>
  [pbr::OriginalName("ENGA_FINISHED")] EngaFinished = 2,
  /// <summary>
  /// 全状态(ENGA_ACCESSED | ENGA_FINISHED)
  /// </summary>
  [pbr::OriginalName("ENGA_ALL")] EngaAll = 3,
}

public enum IOSRechargeResult {
  /// <summary>
  /// 已收到客户端请求(可以关闭IOS交易信息)
  /// </summary>
  [pbr::OriginalName("RECHARGE_RECEIVE")] RechargeReceive = 0,
  /// <summary>
  /// 验证通过已发货
  /// </summary>
  [pbr::OriginalName("RECHARGE_SEND_GOODS")] RechargeSendGoods = 1,
  /// <summary>
  /// 充值异常(非法凭据或者服务器校验异常)
  /// </summary>
  [pbr::OriginalName("RECHARGE_ERROR")] RechargeError = 2,
}

/// <summary>
/// 邮件操作类型
/// </summary>
public enum MailOptType {
  /// <summary>
  /// 默认空操作
  /// </summary>
  [pbr::OriginalName("MAIL_OPT_NULL")] MailOptNull = 0,
  /// <summary>
  /// 只读单封邮件
  /// </summary>
  [pbr::OriginalName("MAIL_OPT_READ_ONE")] MailOptReadOne = 1,
  /// <summary>
  /// 领取单封邮件
  /// </summary>
  [pbr::OriginalName("MAIL_OPT_HOLD_ONE")] MailOptHoldOne = 2,
  /// <summary>
  /// 一键领取
  /// </summary>
  [pbr::OriginalName("MAIL_OPT_HOLD_ALL")] MailOptHoldAll = 3,
  /// <summary>
  /// 收藏
  /// </summary>
  [pbr::OriginalName("MAIL_OPT_COLLECT")] MailOptCollect = 4,
  /// <summary>
  /// 取消收藏
  /// </summary>
  [pbr::OriginalName("MAIL_OPT_UNCOLLECT")] MailOptUncollect = 5,
}

/// <summary>
/// 设置类型
/// </summary>
public enum OptionsType {
  /// <summary>
  /// 默认空操作
  /// </summary>
  [pbr::OriginalName("OPTIONS_NULL")] OptionsNull = 0,
  /// <summary>
  /// 修改昵称(Value传新昵称)
  /// </summary>
  [pbr::OriginalName("OPTIONS_NAME")] OptionsName = 1,
  /// <summary>
  /// 修改头像框(Value传ID)
  /// </summary>
  [pbr::OriginalName("OPTIONS_HEAD_FRAME")] OptionsHeadFrame = 2,
  /// <summary>
  /// 修改背景(Value传ID)
  /// </summary>
  [pbr::OriginalName("OPTIONS_BACKGROUND")] OptionsBackground = 3,
  /// <summary>
  /// 修改头像(Value传ID)
  /// </summary>
  [pbr::OriginalName("OPTIONS_HEAD_IMAGE")] OptionsHeadImage = 4,
}

public enum AchievementStatus {
  /// <summary>
  /// 未开启
  /// </summary>
  [pbr::OriginalName("ACHIEVEMENT_STATUS_NULL")] Null = 0,
  /// <summary>
  /// 可用
  /// </summary>
  [pbr::OriginalName("ACHIEVEMENT_STATUS_OPEN")] Open = 1,
  /// <summary>
  /// 完成(已领奖)
  /// </summary>
  [pbr::OriginalName("ACHIEVEMENT_STATUS_END")] End = 2,
}

public enum DailyTaskStatus {
  /// <summary>
  /// 未解锁
  /// </summary>
  [pbr::OriginalName("TASK_STATUS_LOCK")] TaskStatusLock = 0,
  /// <summary>
  /// 未完成
  /// </summary>
  [pbr::OriginalName("TASK_STATUS_OPEN")] TaskStatusOpen = 1,
  /// <summary>
  /// 完成但未领奖
  /// </summary>
  [pbr::OriginalName("TASK_STATUS_UNAWARD")] TaskStatusUnaward = 2,
  /// <summary>
  /// 任务结束	
  /// </summary>
  [pbr::OriginalName("TASK_STATUS_END")] TaskStatusEnd = 3,
}

public enum OntimeVitUpdateType {
  [pbr::OriginalName("ONTIME_VIT_TYPE_MORNING_OPEN")] OntimeVitTypeMorningOpen = 0,
  [pbr::OriginalName("ONTIME_VIT_TYPE_AFTERNOON_OPEN")] OntimeVitTypeAfternoonOpen = 1,
  [pbr::OriginalName("ONTIME_VIT_TYPE_END")] OntimeVitTypeEnd = 2,
}

public enum TimeLimitPackageUpdType {
  [pbr::OriginalName("TIME_LIMIT_UPD_OPTION_OPEN")] TimeLimitUpdOptionOpen = 0,
  [pbr::OriginalName("TIME_LIMIT_UPD_OPTION_END")] TimeLimitUpdOptionEnd = 1,
}

public enum FriendRetType {
  /// <summary>
  /// 添加好友成功
  /// </summary>
  [pbr::OriginalName("ENM_ADD_FRIEND_SUCCESS")] EnmAddFriendSuccess = 0,
  /// <summary>
  /// 好友列表已满
  /// </summary>
  [pbr::OriginalName("ENM_ADD_FRIEND_ERR_FULL")] EnmAddFriendErrFull = 2,
  /// <summary>
  /// 对方好友列表已满
  /// </summary>
  [pbr::OriginalName("ENM_ADD_FRIEND_ERR_ANOTHER_FULL")] EnmAddFriendErrAnotherFull = 3,
  /// <summary>
  /// 未找到该玩家
  /// </summary>
  [pbr::OriginalName("ENM_ADD_FRIEND_ERR_NOT_FIND")] EnmAddFriendErrNotFind = 4,
  /// <summary>
  /// 对方已经是好友了
  /// </summary>
  [pbr::OriginalName("ENM_ADD_FRIEND_ERR_YET_FRIEND")] EnmAddFriendErrYetFriend = 5,
  [pbr::OriginalName("ENM_ADD_FRIEND_ERR_TARGET_APPLY_FULL")] EnmAddFriendErrTargetApplyFull = 6,
  /// <summary>
  /// 目标错误
  /// </summary>
  [pbr::OriginalName("ENM_ADD_FRIEND_ERR_TARGET_WRONG")] EnmAddFriendErrTargetWrong = 7,
  /// <summary>
  /// 删除好友成功
  /// </summary>
  [pbr::OriginalName("ENM_DEL_FRIEND_SUCCESS")] EnmDelFriendSuccess = 10,
  /// <summary>
  /// 对方不是您的好友
  /// </summary>
  [pbr::OriginalName("ENM_DEL_FRIEND_ERR_NOT_FRIEND")] EnmDelFriendErrNotFriend = 11,
  /// <summary>
  /// 删除好友至上限
  /// </summary>
  [pbr::OriginalName("ENM_DEL_FRIEND_ERR_UP_LIMIT")] EnmDelFriendErrUpLimit = 12,
  /// <summary>
  /// 点赞好友页面成功
  /// </summary>
  [pbr::OriginalName("ENM_THUMB_FRIEND_SUCCESS")] EnmThumbFriendSuccess = 20,
  /// <summary>
  /// 今日已点赞过
  /// </summary>
  [pbr::OriginalName("ENM_THUMB_FRIEND_ERR_YET_THUMB")] EnmThumbFriendErrYetThumb = 21,
  /// <summary>
  /// 今日点赞上限
  /// </summary>
  [pbr::OriginalName("ENM_THUMB_FRIEND_ERR_UP_LIMIT")] EnmThumbFriendErrUpLimit = 22,
  /// <summary>
  /// 对方不是您的好友
  /// </summary>
  [pbr::OriginalName("ENM_THUMB_FRIEND_ERR_NOT_FRIEND")] EnmThumbFriendErrNotFriend = 23,
  /// <summary>
  /// 领取好友活跃礼包成功
  /// </summary>
  [pbr::OriginalName("ENM_GIFT_FRIEND_SUCCESS")] EnmGiftFriendSuccess = 30,
  /// <summary>
  /// 对方不是您的好友
  /// </summary>
  [pbr::OriginalName("ENM_GIFT_FRIEND_ERR_NOT_FRIEND")] EnmGiftFriendErrNotFriend = 31,
  /// <summary>
  /// 领取已达上限
  /// </summary>
  [pbr::OriginalName("ENM_GIFT_FRIEND_ERR_UP_LIMIT")] EnmGiftFriendErrUpLimit = 32,
  /// <summary>
  /// 没有可以领取的
  /// </summary>
  [pbr::OriginalName("ENM_GIFT_FRIEND_ERR_CAN_NOT_RECV")] EnmGiftFriendErrCanNotRecv = 33,
  [pbr::OriginalName("ENM_MODIFY_PERSONAL_DATA_SUCCESS")] EnmModifyPersonalDataSuccess = 40,
  /// <summary>
  /// 有敏感词
  /// </summary>
  [pbr::OriginalName("ENM_MODIFY_PERSONAL_DATA_ERR_SENSITIVE_WORD")] EnmModifyPersonalDataErrSensitiveWord = 41,
  /// <summary>
  /// 不存在此背景图
  /// </summary>
  [pbr::OriginalName("ENM_MODIFY_PERSONAL_DATA_ERR_NO_BACKGROUND")] EnmModifyPersonalDataErrNoBackground = 42,
  /// <summary>
  /// 设置中有未获取的徽章
  /// </summary>
  [pbr::OriginalName("ENM_MODIFY_PERSONAL_DATA_ERR_BADGE_NO_GAIN")] EnmModifyPersonalDataErrBadgeNoGain = 43,
  [pbr::OriginalName("ENM_APPLY_FRIEND_OPT_SUCCESS")] EnmApplyFriendOptSuccess = 50,
  /// <summary>
  /// 申请列表中没有这个ID
  /// </summary>
  [pbr::OriginalName("ENM_APPLY_FRIEND_ERR_NO_THIS_APPLY")] EnmApplyFriendErrNoThisApply = 51,
  /// <summary>
  /// 无效操作
  /// </summary>
  [pbr::OriginalName("ENM_APPLY_FRIEND_ERR_WRONG_OPT")] EnmApplyFriendErrWrongOpt = 52,
  /// <summary>
  /// 好友已达上限
  /// </summary>
  [pbr::OriginalName("ENM_APPLY_FRIEND_ERR_UP_LIMIT")] EnmApplyFriendErrUpLimit = 53,
  /// <summary>
  /// 对方好友已达上限
  /// </summary>
  [pbr::OriginalName("ENM_APPLY_FRIEND_ERR_TARGET_UP_LIMIT")] EnmApplyFriendErrTargetUpLimit = 54,
  [pbr::OriginalName("ENM_REQ_FRIEND_THUMB_PACKAGE_SUCCESS")] EnmReqFriendThumbPackageSuccess = 70,
  [pbr::OriginalName("ENM_REQ_FRIEND_THUMB_NO_CAN_RECV")] EnmReqFriendThumbNoCanRecv = 71,
}

public enum FriendReqType {
  /// <summary>
  /// 所有好友
  /// </summary>
  [pbr::OriginalName("ENM_FRIEND_REQ_TYPE_ALL")] EnmFriendReqTypeAll = 0,
  /// <summary>
  /// 单个好友
  /// </summary>
  [pbr::OriginalName("ENM_FRIEND_REQ_TYPE_SINGLE")] EnmFriendReqTypeSingle = 1,
}

public enum FriendApplyOptType {
  [pbr::OriginalName("ENM_FRIEND_APPLY_OPT_AGREE")] EnmFriendApplyOptAgree = 0,
  [pbr::OriginalName("ENM_FRIEND_APPLY_OPT_IGNORE")] EnmFriendApplyOptIgnore = 1,
}

public enum RandomStageOptType {
  /// <summary>
  /// 添加
  /// </summary>
  [pbr::OriginalName("RANDOM_STAGE_OPT_T_ADD")] RandomStageOptTAdd = 0,
  /// <summary>
  /// 删除
  /// </summary>
  [pbr::OriginalName("RANDOM_STAGE_OPT_T_DEL")] RandomStageOptTDel = 1,
  /// <summary>
  /// 更新
  /// </summary>
  [pbr::OriginalName("RANDOM_STAGE_OPT_T_UPD")] RandomStageOptTUpd = 2,
}

public enum TitleRetType {
  [pbr::OriginalName("TITLE_CHANGE_SUCCESS")] TitleChangeSuccess = 0,
  [pbr::OriginalName("TITLE_CHANGE_ERR_NO_PREFIX")] TitleChangeErrNoPrefix = 1,
  [pbr::OriginalName("TITLE_CHANGE_ERR_NO_POFIX")] TitleChangeErrNoPofix = 2,
  [pbr::OriginalName("TITLE_CHANGE_ERR_NO_MIDFIX")] TitleChangeErrNoMidfix = 3,
}

#endregion

#region Messages
public sealed partial class l2c_error : pb::IMessage<l2c_error> {
  private static readonly pb::MessageParser<l2c_error> _parser = new pb::MessageParser<l2c_error>(() => new l2c_error());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_error> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_error() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_error(l2c_error other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_error Clone() {
    return new l2c_error(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private global::LogicMsgID id_ = 0;
  /// <summary>
  /// 消息ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LogicMsgID Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_error);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_error other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_error other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id_ = (global::LogicMsgID) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class PTGameElement : pb::IMessage<PTGameElement> {
  private static readonly pb::MessageParser<PTGameElement> _parser = new pb::MessageParser<PTGameElement>(() => new PTGameElement());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PTGameElement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PTGameElement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PTGameElement(PTGameElement other) : this() {
    eType_ = other.eType_;
    nID_ = other.nID_;
    nCount_ = other.nCount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PTGameElement Clone() {
    return new PTGameElement(this);
  }

  /// <summary>Field number for the "eType" field.</summary>
  public const int ETypeFieldNumber = 1;
  private global::GameElementType eType_ = 0;
  /// <summary>
  /// 类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameElementType EType {
    get { return eType_; }
    set {
      eType_ = value;
    }
  }

  /// <summary>Field number for the "nID" field.</summary>
  public const int NIDFieldNumber = 2;
  private int nID_;
  /// <summary>
  /// ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NID {
    get { return nID_; }
    set {
      nID_ = value;
    }
  }

  /// <summary>Field number for the "nCount" field.</summary>
  public const int NCountFieldNumber = 3;
  private int nCount_;
  /// <summary>
  /// 数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NCount {
    get { return nCount_; }
    set {
      nCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PTGameElement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PTGameElement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EType != other.EType) return false;
    if (NID != other.NID) return false;
    if (NCount != other.NCount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EType != 0) hash ^= EType.GetHashCode();
    if (NID != 0) hash ^= NID.GetHashCode();
    if (NCount != 0) hash ^= NCount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) EType);
    }
    if (NID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(NID);
    }
    if (NCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EType);
    }
    if (NID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NID);
    }
    if (NCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PTGameElement other) {
    if (other == null) {
      return;
    }
    if (other.EType != 0) {
      EType = other.EType;
    }
    if (other.NID != 0) {
      NID = other.NID;
    }
    if (other.NCount != 0) {
      NCount = other.NCount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          eType_ = (global::GameElementType) input.ReadEnum();
          break;
        }
        case 16: {
          NID = input.ReadInt32();
          break;
        }
        case 24: {
          NCount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 互斥节点信息
/// </summary>
public sealed partial class MutexNode : pb::IMessage<MutexNode> {
  private static readonly pb::MessageParser<MutexNode> _parser = new pb::MessageParser<MutexNode>(() => new MutexNode());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MutexNode> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MutexNode() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MutexNode(MutexNode other) : this() {
    type_ = other.type_;
    id_ = other.id_;
    nodes_ = other.nodes_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MutexNode Clone() {
    return new MutexNode(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::MutexNodeType type_ = 0;
  /// <summary>
  /// 节点类型(1.主线 2.约会)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MutexNodeType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  /// <summary>
  /// 所属类型ID(主线ID、约会ID)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 节点IDs
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MutexNode);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MutexNode other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Id != other.Id) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    hash ^= nodes_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MutexNode other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    nodes_.Add(other.nodes_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::MutexNodeType) input.ReadEnum();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 随机关卡索引定位
/// </summary>
public sealed partial class RandomStageIndex : pb::IMessage<RandomStageIndex> {
  private static readonly pb::MessageParser<RandomStageIndex> _parser = new pb::MessageParser<RandomStageIndex>(() => new RandomStageIndex());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RandomStageIndex> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RandomStageIndex() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RandomStageIndex(RandomStageIndex other) : this() {
    stageId_ = other.stageId_;
    createTime_ = other.createTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RandomStageIndex Clone() {
    return new RandomStageIndex(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 随机关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "create_time" field.</summary>
  public const int CreateTimeFieldNumber = 2;
  private long createTime_;
  /// <summary>
  /// 随机关卡生成时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CreateTime {
    get { return createTime_; }
    set {
      createTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RandomStageIndex);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RandomStageIndex other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (CreateTime != other.CreateTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (CreateTime != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(CreateTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (CreateTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RandomStageIndex other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.CreateTime != 0L) {
      CreateTime = other.CreateTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          CreateTime = input.ReadInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_logon_ask : pb::IMessage<l2c_logon_ask> {
  private static readonly pb::MessageParser<l2c_logon_ask> _parser = new pb::MessageParser<l2c_logon_ask>(() => new l2c_logon_ask());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_logon_ask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_logon_ask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_logon_ask(l2c_logon_ask other) : this() {
    keySeed_ = other.keySeed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_logon_ask Clone() {
    return new l2c_logon_ask(this);
  }

  /// <summary>Field number for the "key_seed" field.</summary>
  public const int KeySeedFieldNumber = 1;
  private uint keySeed_;
  /// <summary>
  /// 服务器加密随机数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint KeySeed {
    get { return keySeed_; }
    set {
      keySeed_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_logon_ask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_logon_ask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (KeySeed != other.KeySeed) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (KeySeed != 0) hash ^= KeySeed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (KeySeed != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(KeySeed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (KeySeed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeySeed);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_logon_ask other) {
    if (other == null) {
      return;
    }
    if (other.KeySeed != 0) {
      KeySeed = other.KeySeed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          KeySeed = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_logon_proof : pb::IMessage<c2l_logon_proof> {
  private static readonly pb::MessageParser<c2l_logon_proof> _parser = new pb::MessageParser<c2l_logon_proof>(() => new c2l_logon_proof());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_logon_proof> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_logon_proof() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_logon_proof(c2l_logon_proof other) : this() {
    accountId_ = other.accountId_;
    username_ = other.username_;
    clientSeed_ = other.clientSeed_;
    proof_ = other.proof_;
    deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_logon_proof Clone() {
    return new c2l_logon_proof(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  /// <summary>
  /// 帐号id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 2;
  private string username_ = "";
  /// <summary>
  /// 帐号名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "client_seed" field.</summary>
  public const int ClientSeedFieldNumber = 3;
  private uint clientSeed_;
  /// <summary>
  /// 客户端加密随机数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClientSeed {
    get { return clientSeed_; }
    set {
      clientSeed_ = value;
    }
  }

  /// <summary>Field number for the "proof" field.</summary>
  public const int ProofFieldNumber = 4;
  private string proof_ = "";
  /// <summary>
  /// 密钥凭据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Proof {
    get { return proof_; }
    set {
      proof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "device_info" field.</summary>
  public const int DeviceInfoFieldNumber = 5;
  private global::c2l_logon_proof.Types.LogonInfo deviceInfo_;
  /// <summary>
  /// 设备信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::c2l_logon_proof.Types.LogonInfo DeviceInfo {
    get { return deviceInfo_; }
    set {
      deviceInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_logon_proof);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_logon_proof other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (Username != other.Username) return false;
    if (ClientSeed != other.ClientSeed) return false;
    if (Proof != other.Proof) return false;
    if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (ClientSeed != 0) hash ^= ClientSeed.GetHashCode();
    if (Proof.Length != 0) hash ^= Proof.GetHashCode();
    if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (Username.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Username);
    }
    if (ClientSeed != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(ClientSeed);
    }
    if (Proof.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Proof);
    }
    if (deviceInfo_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(DeviceInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (ClientSeed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientSeed);
    }
    if (Proof.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Proof);
    }
    if (deviceInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_logon_proof other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.ClientSeed != 0) {
      ClientSeed = other.ClientSeed;
    }
    if (other.Proof.Length != 0) {
      Proof = other.Proof;
    }
    if (other.deviceInfo_ != null) {
      if (deviceInfo_ == null) {
        deviceInfo_ = new global::c2l_logon_proof.Types.LogonInfo();
      }
      DeviceInfo.MergeFrom(other.DeviceInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          Username = input.ReadString();
          break;
        }
        case 24: {
          ClientSeed = input.ReadUInt32();
          break;
        }
        case 34: {
          Proof = input.ReadString();
          break;
        }
        case 42: {
          if (deviceInfo_ == null) {
            deviceInfo_ = new global::c2l_logon_proof.Types.LogonInfo();
          }
          input.ReadMessage(deviceInfo_);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_logon_proof message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class LogonInfo : pb::IMessage<LogonInfo> {
      private static readonly pb::MessageParser<LogonInfo> _parser = new pb::MessageParser<LogonInfo>(() => new LogonInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<LogonInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_logon_proof.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public LogonInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public LogonInfo(LogonInfo other) : this() {
        channel_ = other.channel_;
        device_ = other.device_;
        devicename_ = other.devicename_;
        appid_ = other.appid_;
        mdid_ = other.mdid_;
        sdkId_ = other.sdkId_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public LogonInfo Clone() {
        return new LogonInfo(this);
      }

      /// <summary>Field number for the "channel" field.</summary>
      public const int ChannelFieldNumber = 5;
      private string channel_ = "";
      /// <summary>
      /// 渠道
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Channel {
        get { return channel_; }
        set {
          channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "device" field.</summary>
      public const int DeviceFieldNumber = 6;
      private string device_ = "";
      /// <summary>
      /// 设备id
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Device {
        get { return device_; }
        set {
          device_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "devicename" field.</summary>
      public const int DevicenameFieldNumber = 7;
      private string devicename_ = "";
      /// <summary>
      /// 设备名字
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Devicename {
        get { return devicename_; }
        set {
          devicename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "appid" field.</summary>
      public const int AppidFieldNumber = 8;
      private uint appid_;
      /// <summary>
      /// 
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint Appid {
        get { return appid_; }
        set {
          appid_ = value;
        }
      }

      /// <summary>Field number for the "mdid" field.</summary>
      public const int MdidFieldNumber = 9;
      private uint mdid_;
      /// <summary>
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint Mdid {
        get { return mdid_; }
        set {
          mdid_ = value;
        }
      }

      /// <summary>Field number for the "sdk_id" field.</summary>
      public const int SdkIdFieldNumber = 10;
      private global::LogonSDKType sdkId_ = 0;
      /// <summary>
      /// SDK id，用于区分国家
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::LogonSDKType SdkId {
        get { return sdkId_; }
        set {
          sdkId_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as LogonInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(LogonInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Channel != other.Channel) return false;
        if (Device != other.Device) return false;
        if (Devicename != other.Devicename) return false;
        if (Appid != other.Appid) return false;
        if (Mdid != other.Mdid) return false;
        if (SdkId != other.SdkId) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Channel.Length != 0) hash ^= Channel.GetHashCode();
        if (Device.Length != 0) hash ^= Device.GetHashCode();
        if (Devicename.Length != 0) hash ^= Devicename.GetHashCode();
        if (Appid != 0) hash ^= Appid.GetHashCode();
        if (Mdid != 0) hash ^= Mdid.GetHashCode();
        if (SdkId != 0) hash ^= SdkId.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Channel.Length != 0) {
          output.WriteRawTag(42);
          output.WriteString(Channel);
        }
        if (Device.Length != 0) {
          output.WriteRawTag(50);
          output.WriteString(Device);
        }
        if (Devicename.Length != 0) {
          output.WriteRawTag(58);
          output.WriteString(Devicename);
        }
        if (Appid != 0) {
          output.WriteRawTag(64);
          output.WriteUInt32(Appid);
        }
        if (Mdid != 0) {
          output.WriteRawTag(72);
          output.WriteUInt32(Mdid);
        }
        if (SdkId != 0) {
          output.WriteRawTag(80);
          output.WriteEnum((int) SdkId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Channel.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
        }
        if (Device.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Device);
        }
        if (Devicename.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Devicename);
        }
        if (Appid != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
        }
        if (Mdid != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mdid);
        }
        if (SdkId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SdkId);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(LogonInfo other) {
        if (other == null) {
          return;
        }
        if (other.Channel.Length != 0) {
          Channel = other.Channel;
        }
        if (other.Device.Length != 0) {
          Device = other.Device;
        }
        if (other.Devicename.Length != 0) {
          Devicename = other.Devicename;
        }
        if (other.Appid != 0) {
          Appid = other.Appid;
        }
        if (other.Mdid != 0) {
          Mdid = other.Mdid;
        }
        if (other.SdkId != 0) {
          SdkId = other.SdkId;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 42: {
              Channel = input.ReadString();
              break;
            }
            case 50: {
              Device = input.ReadString();
              break;
            }
            case 58: {
              Devicename = input.ReadString();
              break;
            }
            case 64: {
              Appid = input.ReadUInt32();
              break;
            }
            case 72: {
              Mdid = input.ReadUInt32();
              break;
            }
            case 80: {
              sdkId_ = (global::LogonSDKType) input.ReadEnum();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class l2c_logon_rep : pb::IMessage<l2c_logon_rep> {
  private static readonly pb::MessageParser<l2c_logon_rep> _parser = new pb::MessageParser<l2c_logon_rep>(() => new l2c_logon_rep());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_logon_rep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_logon_rep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_logon_rep(l2c_logon_rep other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_logon_rep Clone() {
    return new l2c_logon_rep(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private global::CharacterOpResult result_ = 0;
  /// <summary>
  /// 登录结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CharacterOpResult Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_logon_rep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_logon_rep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_logon_rep other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          result_ = (global::CharacterOpResult) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_svc_exception : pb::IMessage<l2c_svc_exception> {
  private static readonly pb::MessageParser<l2c_svc_exception> _parser = new pb::MessageParser<l2c_svc_exception>(() => new l2c_svc_exception());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_svc_exception> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_svc_exception() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_svc_exception(l2c_svc_exception other) : this() {
    eInfo_ = other.eInfo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_svc_exception Clone() {
    return new l2c_svc_exception(this);
  }

  /// <summary>Field number for the "e_info" field.</summary>
  public const int EInfoFieldNumber = 1;
  private global::l2c_svc_exception.Types.SvcException eInfo_ = 0;
  /// <summary>
  /// 异常状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_svc_exception.Types.SvcException EInfo {
    get { return eInfo_; }
    set {
      eInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_svc_exception);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_svc_exception other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EInfo != other.EInfo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EInfo != 0) hash ^= EInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EInfo != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) EInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EInfo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_svc_exception other) {
    if (other == null) {
      return;
    }
    if (other.EInfo != 0) {
      EInfo = other.EInfo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          eInfo_ = (global::l2c_svc_exception.Types.SvcException) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_svc_exception message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum SvcException {
      /// <summary>
      /// 拒绝服务
      /// </summary>
      [pbr::OriginalName("SVC_EXCEPTION_REJECT")] Reject = 0,
      /// <summary>
      /// 繁忙(3s后断开)
      /// </summary>
      [pbr::OriginalName("SVC_EXCEPTION_BUSY")] Busy = 1,
      /// <summary>
      /// 排队等待倒计时(目前没有此功能，客户端不用处理)
      /// </summary>
      [pbr::OriginalName("SVC_EXCEPTION_ENQUEUE")] Enqueue = 2,
    }

  }
  #endregion

}

/// <summary>
/// 创建玩家角色
/// </summary>
public sealed partial class c2l_create_character_req : pb::IMessage<c2l_create_character_req> {
  private static readonly pb::MessageParser<c2l_create_character_req> _parser = new pb::MessageParser<c2l_create_character_req>(() => new c2l_create_character_req());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_create_character_req> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_create_character_req() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_create_character_req(c2l_create_character_req other) : this() {
    characterName_ = other.characterName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_create_character_req Clone() {
    return new c2l_create_character_req(this);
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 1;
  private string characterName_ = "";
  /// <summary>
  /// 角色名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_create_character_req);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_create_character_req other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterName != other.CharacterName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_create_character_req other) {
    if (other == null) {
      return;
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 没有角色
/// </summary>
public sealed partial class l2c_create_character_rep : pb::IMessage<l2c_create_character_rep> {
  private static readonly pb::MessageParser<l2c_create_character_rep> _parser = new pb::MessageParser<l2c_create_character_rep>(() => new l2c_create_character_rep());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_create_character_rep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_create_character_rep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_create_character_rep(l2c_create_character_rep other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_create_character_rep Clone() {
    return new l2c_create_character_rep(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private global::l2c_create_character_rep.Types.Result result_ = 0;
  /// <summary>
  /// 创建角色结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_create_character_rep.Types.Result Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_create_character_rep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_create_character_rep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_create_character_rep other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          result_ = (global::l2c_create_character_rep.Types.Result) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_create_character_rep message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Result {
      /// <summary>
      /// 成功
      /// </summary>
      [pbr::OriginalName("result_succeed")] Succeed = 0,
      /// <summary>
      /// 账号已有角色
      /// </summary>
      [pbr::OriginalName("result_already_exist")] AlreadyExist = 1,
      /// <summary>
      /// 名字非法
      /// </summary>
      [pbr::OriginalName("result_illegal_name")] IllegalName = 2,
    }

  }
  #endregion

}

/// <summary>
/// 没有角色
/// </summary>
public sealed partial class l2c_no_character : pb::IMessage<l2c_no_character> {
  private static readonly pb::MessageParser<l2c_no_character> _parser = new pb::MessageParser<l2c_no_character>(() => new l2c_no_character());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_no_character> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_no_character() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_no_character(l2c_no_character other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_no_character Clone() {
    return new l2c_no_character(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_no_character);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_no_character other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_no_character other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// 服务器就绪通知
/// </summary>
public sealed partial class l2c_ready : pb::IMessage<l2c_ready> {
  private static readonly pb::MessageParser<l2c_ready> _parser = new pb::MessageParser<l2c_ready>(() => new l2c_ready());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_ready> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ready() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ready(l2c_ready other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ready Clone() {
    return new l2c_ready(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_ready);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_ready other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_ready other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// 客户端就绪通知
/// </summary>
public sealed partial class c2l_ready : pb::IMessage<c2l_ready> {
  private static readonly pb::MessageParser<c2l_ready> _parser = new pb::MessageParser<c2l_ready>(() => new c2l_ready());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_ready> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ready() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ready(c2l_ready other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ready Clone() {
    return new c2l_ready(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_ready);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_ready other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_ready other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// 玩家初始数据
/// </summary>
public sealed partial class l2c_initialize : pb::IMessage<l2c_initialize> {
  private static readonly pb::MessageParser<l2c_initialize> _parser = new pb::MessageParser<l2c_initialize>(() => new l2c_initialize());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_initialize> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize(l2c_initialize other) : this() {
    name_ = other.name_;
    icon_ = other.icon_;
    iconRim_ = other.iconRim_;
    money_ = other.money_;
    vitality_ = other.vitality_;
    diamond_ = other.diamond_;
    freeDiamond_ = other.freeDiamond_;
    coolDown_ = other.coolDown_;
    nationExp_ = other.nationExp_.Clone();
    maxnomal_ = other.maxnomal_;
    maxdiffcult_ = other.maxdiffcult_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize Clone() {
    return new l2c_initialize(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  /// <summary>
  /// 名称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "icon" field.</summary>
  public const int IconFieldNumber = 2;
  private int icon_;
  /// <summary>
  /// 头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Icon {
    get { return icon_; }
    set {
      icon_ = value;
    }
  }

  /// <summary>Field number for the "icon_rim" field.</summary>
  public const int IconRimFieldNumber = 3;
  private int iconRim_;
  /// <summary>
  /// 头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IconRim {
    get { return iconRim_; }
    set {
      iconRim_ = value;
    }
  }

  /// <summary>Field number for the "money" field.</summary>
  public const int MoneyFieldNumber = 4;
  private long money_;
  /// <summary>
  /// 金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Money {
    get { return money_; }
    set {
      money_ = value;
    }
  }

  /// <summary>Field number for the "vitality" field.</summary>
  public const int VitalityFieldNumber = 5;
  private int vitality_;
  /// <summary>
  /// 体力
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Vitality {
    get { return vitality_; }
    set {
      vitality_ = value;
    }
  }

  /// <summary>Field number for the "diamond" field.</summary>
  public const int DiamondFieldNumber = 6;
  private int diamond_;
  /// <summary>
  /// 钻石
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Diamond {
    get { return diamond_; }
    set {
      diamond_ = value;
    }
  }

  /// <summary>Field number for the "free_diamond" field.</summary>
  public const int FreeDiamondFieldNumber = 7;
  private int freeDiamond_;
  /// <summary>
  /// 免费钻石
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FreeDiamond {
    get { return freeDiamond_; }
    set {
      freeDiamond_ = value;
    }
  }

  /// <summary>Field number for the "cool_down" field.</summary>
  public const int CoolDownFieldNumber = 8;
  private int coolDown_;
  /// <summary>
  /// 体力剩余倒计时(单位:s)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CoolDown {
    get { return coolDown_; }
    set {
      coolDown_ = value;
    }
  }

  /// <summary>Field number for the "nation_exp" field.</summary>
  public const int NationExpFieldNumber = 11;
  private static readonly pb::FieldCodec<global::l2c_initialize.Types.NationReputation> _repeated_nationExp_codec
      = pb::FieldCodec.ForMessage(90, global::l2c_initialize.Types.NationReputation.Parser);
  private readonly pbc::RepeatedField<global::l2c_initialize.Types.NationReputation> nationExp_ = new pbc::RepeatedField<global::l2c_initialize.Types.NationReputation>();
  /// <summary>
  /// 国家声望
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_initialize.Types.NationReputation> NationExp {
    get { return nationExp_; }
  }

  /// <summary>Field number for the "maxnomal" field.</summary>
  public const int MaxnomalFieldNumber = 16;
  private int maxnomal_;
  /// <summary>
  /// 普通章节
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Maxnomal {
    get { return maxnomal_; }
    set {
      maxnomal_ = value;
    }
  }

  /// <summary>Field number for the "maxdiffcult" field.</summary>
  public const int MaxdiffcultFieldNumber = 17;
  private int maxdiffcult_;
  /// <summary>
  /// 困难章节
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Maxdiffcult {
    get { return maxdiffcult_; }
    set {
      maxdiffcult_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_initialize);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_initialize other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Icon != other.Icon) return false;
    if (IconRim != other.IconRim) return false;
    if (Money != other.Money) return false;
    if (Vitality != other.Vitality) return false;
    if (Diamond != other.Diamond) return false;
    if (FreeDiamond != other.FreeDiamond) return false;
    if (CoolDown != other.CoolDown) return false;
    if(!nationExp_.Equals(other.nationExp_)) return false;
    if (Maxnomal != other.Maxnomal) return false;
    if (Maxdiffcult != other.Maxdiffcult) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Icon != 0) hash ^= Icon.GetHashCode();
    if (IconRim != 0) hash ^= IconRim.GetHashCode();
    if (Money != 0L) hash ^= Money.GetHashCode();
    if (Vitality != 0) hash ^= Vitality.GetHashCode();
    if (Diamond != 0) hash ^= Diamond.GetHashCode();
    if (FreeDiamond != 0) hash ^= FreeDiamond.GetHashCode();
    if (CoolDown != 0) hash ^= CoolDown.GetHashCode();
    hash ^= nationExp_.GetHashCode();
    if (Maxnomal != 0) hash ^= Maxnomal.GetHashCode();
    if (Maxdiffcult != 0) hash ^= Maxdiffcult.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Icon != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Icon);
    }
    if (IconRim != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(IconRim);
    }
    if (Money != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(Money);
    }
    if (Vitality != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Vitality);
    }
    if (Diamond != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Diamond);
    }
    if (FreeDiamond != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(FreeDiamond);
    }
    if (CoolDown != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(CoolDown);
    }
    nationExp_.WriteTo(output, _repeated_nationExp_codec);
    if (Maxnomal != 0) {
      output.WriteRawTag(128, 1);
      output.WriteInt32(Maxnomal);
    }
    if (Maxdiffcult != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(Maxdiffcult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Icon != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Icon);
    }
    if (IconRim != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IconRim);
    }
    if (Money != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Money);
    }
    if (Vitality != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vitality);
    }
    if (Diamond != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diamond);
    }
    if (FreeDiamond != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeDiamond);
    }
    if (CoolDown != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoolDown);
    }
    size += nationExp_.CalculateSize(_repeated_nationExp_codec);
    if (Maxnomal != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Maxnomal);
    }
    if (Maxdiffcult != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Maxdiffcult);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_initialize other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Icon != 0) {
      Icon = other.Icon;
    }
    if (other.IconRim != 0) {
      IconRim = other.IconRim;
    }
    if (other.Money != 0L) {
      Money = other.Money;
    }
    if (other.Vitality != 0) {
      Vitality = other.Vitality;
    }
    if (other.Diamond != 0) {
      Diamond = other.Diamond;
    }
    if (other.FreeDiamond != 0) {
      FreeDiamond = other.FreeDiamond;
    }
    if (other.CoolDown != 0) {
      CoolDown = other.CoolDown;
    }
    nationExp_.Add(other.nationExp_);
    if (other.Maxnomal != 0) {
      Maxnomal = other.Maxnomal;
    }
    if (other.Maxdiffcult != 0) {
      Maxdiffcult = other.Maxdiffcult;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Icon = input.ReadInt32();
          break;
        }
        case 24: {
          IconRim = input.ReadInt32();
          break;
        }
        case 32: {
          Money = input.ReadInt64();
          break;
        }
        case 40: {
          Vitality = input.ReadInt32();
          break;
        }
        case 48: {
          Diamond = input.ReadInt32();
          break;
        }
        case 56: {
          FreeDiamond = input.ReadInt32();
          break;
        }
        case 64: {
          CoolDown = input.ReadInt32();
          break;
        }
        case 90: {
          nationExp_.AddEntriesFrom(input, _repeated_nationExp_codec);
          break;
        }
        case 128: {
          Maxnomal = input.ReadInt32();
          break;
        }
        case 136: {
          Maxdiffcult = input.ReadInt32();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_initialize message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class NationReputation : pb::IMessage<NationReputation> {
      private static readonly pb::MessageParser<NationReputation> _parser = new pb::MessageParser<NationReputation>(() => new NationReputation());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<NationReputation> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_initialize.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NationReputation() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NationReputation(NationReputation other) : this() {
        id_ = other.id_;
        exp_ = other.exp_;
        level_ = other.level_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NationReputation Clone() {
        return new NationReputation(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// 国家ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "exp" field.</summary>
      public const int ExpFieldNumber = 2;
      private int exp_;
      /// <summary>
      /// 声望经验值
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Exp {
        get { return exp_; }
        set {
          exp_ = value;
        }
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 3;
      private int level_;
      /// <summary>
      /// 声望等级
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Level {
        get { return level_; }
        set {
          level_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as NationReputation);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(NationReputation other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Exp != other.Exp) return false;
        if (Level != other.Level) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Exp != 0) hash ^= Exp.GetHashCode();
        if (Level != 0) hash ^= Level.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Exp != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Exp);
        }
        if (Level != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(Level);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Exp != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
        }
        if (Level != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(NationReputation other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Exp != 0) {
          Exp = other.Exp;
        }
        if (other.Level != 0) {
          Level = other.Level;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Exp = input.ReadInt32();
              break;
            }
            case 24: {
              Level = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_initialize_item : pb::IMessage<c2l_initialize_item> {
  private static readonly pb::MessageParser<c2l_initialize_item> _parser = new pb::MessageParser<c2l_initialize_item>(() => new c2l_initialize_item());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_initialize_item> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_item() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_item(c2l_initialize_item other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_item Clone() {
    return new c2l_initialize_item(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_initialize_item);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_initialize_item other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_initialize_item other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_initialize_item : pb::IMessage<l2c_initialize_item> {
  private static readonly pb::MessageParser<l2c_initialize_item> _parser = new pb::MessageParser<l2c_initialize_item>(() => new l2c_initialize_item());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_initialize_item> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_item() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_item(l2c_initialize_item other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_item Clone() {
    return new l2c_initialize_item(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(>=0，=0没有)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 页号(从0开始第一页)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_initialize_item.Types.Item> _repeated_items_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_initialize_item.Types.Item.Parser);
  private readonly pbc::RepeatedField<global::l2c_initialize_item.Types.Item> items_ = new pbc::RepeatedField<global::l2c_initialize_item.Types.Item>();
  /// <summary>
  /// 当前页数据(每页最多100条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_initialize_item.Types.Item> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_initialize_item);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_initialize_item other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!items_.Equals(other.items_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= items_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    items_.WriteTo(output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += items_.CalculateSize(_repeated_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_initialize_item other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          items_.AddEntriesFrom(input, _repeated_items_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_initialize_item message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Item : pb::IMessage<Item> {
      private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Item> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_initialize_item.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Item() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Item(Item other) : this() {
        id_ = other.id_;
        count_ = other.count_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Item Clone() {
        return new Item(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "count" field.</summary>
      public const int CountFieldNumber = 2;
      private int count_;
      /// <summary>
      /// 数量(>=1)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Count {
        get { return count_; }
        set {
          count_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Item);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Item other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Count != other.Count) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Count != 0) hash ^= Count.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Count != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Count);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Item other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Count != 0) {
          Count = other.Count;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Count = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_initialize_equip : pb::IMessage<c2l_initialize_equip> {
  private static readonly pb::MessageParser<c2l_initialize_equip> _parser = new pb::MessageParser<c2l_initialize_equip>(() => new c2l_initialize_equip());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_initialize_equip> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_equip() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_equip(c2l_initialize_equip other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_equip Clone() {
    return new c2l_initialize_equip(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_initialize_equip);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_initialize_equip other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_initialize_equip other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_initialize_equip : pb::IMessage<l2c_initialize_equip> {
  private static readonly pb::MessageParser<l2c_initialize_equip> _parser = new pb::MessageParser<l2c_initialize_equip>(() => new l2c_initialize_equip());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_initialize_equip> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_equip() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_equip(l2c_initialize_equip other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    equipments_ = other.equipments_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_equip Clone() {
    return new l2c_initialize_equip(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(>=0，=0没有)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 页号(从0开始第一页)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "equipments" field.</summary>
  public const int EquipmentsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_initialize_equip.Types.EquipmentInfo> _repeated_equipments_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_initialize_equip.Types.EquipmentInfo.Parser);
  private readonly pbc::RepeatedField<global::l2c_initialize_equip.Types.EquipmentInfo> equipments_ = new pbc::RepeatedField<global::l2c_initialize_equip.Types.EquipmentInfo>();
  /// <summary>
  /// 装备列表(每页最多50条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_initialize_equip.Types.EquipmentInfo> Equipments {
    get { return equipments_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_initialize_equip);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_initialize_equip other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!equipments_.Equals(other.equipments_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= equipments_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    equipments_.WriteTo(output, _repeated_equipments_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += equipments_.CalculateSize(_repeated_equipments_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_initialize_equip other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    equipments_.Add(other.equipments_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          equipments_.AddEntriesFrom(input, _repeated_equipments_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_initialize_equip message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class EquipmentInfo : pb::IMessage<EquipmentInfo> {
      private static readonly pb::MessageParser<EquipmentInfo> _parser = new pb::MessageParser<EquipmentInfo>(() => new EquipmentInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<EquipmentInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_initialize_equip.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public EquipmentInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public EquipmentInfo(EquipmentInfo other) : this() {
        id_ = other.id_;
        level_ = other.level_;
        exp_ = other.exp_;
        stars_ = other.stars_;
        stage_ = other.stage_;
        count_ = other.count_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public EquipmentInfo Clone() {
        return new EquipmentInfo(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 2;
      private int level_;
      /// <summary>
      /// 等级
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Level {
        get { return level_; }
        set {
          level_ = value;
        }
      }

      /// <summary>Field number for the "exp" field.</summary>
      public const int ExpFieldNumber = 3;
      private int exp_;
      /// <summary>
      /// 总经验
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Exp {
        get { return exp_; }
        set {
          exp_ = value;
        }
      }

      /// <summary>Field number for the "stars" field.</summary>
      public const int StarsFieldNumber = 4;
      private int stars_;
      /// <summary>
      /// 星级
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Stars {
        get { return stars_; }
        set {
          stars_ = value;
        }
      }

      /// <summary>Field number for the "stage" field.</summary>
      public const int StageFieldNumber = 5;
      private int stage_;
      /// <summary>
      /// 阶级
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Stage {
        get { return stage_; }
        set {
          stage_ = value;
        }
      }

      /// <summary>Field number for the "count" field.</summary>
      public const int CountFieldNumber = 6;
      private int count_;
      /// <summary>
      /// 数量(>=1)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Count {
        get { return count_; }
        set {
          count_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as EquipmentInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(EquipmentInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Level != other.Level) return false;
        if (Exp != other.Exp) return false;
        if (Stars != other.Stars) return false;
        if (Stage != other.Stage) return false;
        if (Count != other.Count) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Level != 0) hash ^= Level.GetHashCode();
        if (Exp != 0) hash ^= Exp.GetHashCode();
        if (Stars != 0) hash ^= Stars.GetHashCode();
        if (Stage != 0) hash ^= Stage.GetHashCode();
        if (Count != 0) hash ^= Count.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Level != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Level);
        }
        if (Exp != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(Exp);
        }
        if (Stars != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(Stars);
        }
        if (Stage != 0) {
          output.WriteRawTag(40);
          output.WriteInt32(Stage);
        }
        if (Count != 0) {
          output.WriteRawTag(48);
          output.WriteInt32(Count);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Level != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
        }
        if (Exp != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
        }
        if (Stars != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stars);
        }
        if (Stage != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
        }
        if (Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(EquipmentInfo other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Level != 0) {
          Level = other.Level;
        }
        if (other.Exp != 0) {
          Exp = other.Exp;
        }
        if (other.Stars != 0) {
          Stars = other.Stars;
        }
        if (other.Stage != 0) {
          Stage = other.Stage;
        }
        if (other.Count != 0) {
          Count = other.Count;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Level = input.ReadInt32();
              break;
            }
            case 24: {
              Exp = input.ReadInt32();
              break;
            }
            case 32: {
              Stars = input.ReadInt32();
              break;
            }
            case 40: {
              Stage = input.ReadInt32();
              break;
            }
            case 48: {
              Count = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_initialize_character : pb::IMessage<c2l_initialize_character> {
  private static readonly pb::MessageParser<c2l_initialize_character> _parser = new pb::MessageParser<c2l_initialize_character>(() => new c2l_initialize_character());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_initialize_character> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_character() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_character(c2l_initialize_character other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_initialize_character Clone() {
    return new c2l_initialize_character(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_initialize_character);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_initialize_character other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_initialize_character other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_initialize_character : pb::IMessage<l2c_initialize_character> {
  private static readonly pb::MessageParser<l2c_initialize_character> _parser = new pb::MessageParser<l2c_initialize_character>(() => new l2c_initialize_character());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_initialize_character> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_character() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_character(l2c_initialize_character other) : this() {
    characters_ = other.characters_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_initialize_character Clone() {
    return new l2c_initialize_character(this);
  }

  /// <summary>Field number for the "characters" field.</summary>
  public const int CharactersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_initialize_character.Types.CharacterInfo> _repeated_characters_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_initialize_character.Types.CharacterInfo.Parser);
  private readonly pbc::RepeatedField<global::l2c_initialize_character.Types.CharacterInfo> characters_ = new pbc::RepeatedField<global::l2c_initialize_character.Types.CharacterInfo>();
  /// <summary>
  /// 角色列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_initialize_character.Types.CharacterInfo> Characters {
    get { return characters_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_initialize_character);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_initialize_character other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!characters_.Equals(other.characters_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= characters_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    characters_.WriteTo(output, _repeated_characters_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += characters_.CalculateSize(_repeated_characters_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_initialize_character other) {
    if (other == null) {
      return;
    }
    characters_.Add(other.characters_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          characters_.AddEntriesFrom(input, _repeated_characters_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_initialize_character message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class CharacterInfo : pb::IMessage<CharacterInfo> {
      private static readonly pb::MessageParser<CharacterInfo> _parser = new pb::MessageParser<CharacterInfo>(() => new CharacterInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<CharacterInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_initialize_character.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterInfo(CharacterInfo other) : this() {
        id_ = other.id_;
        level_ = other.level_;
        levelExp_ = other.levelExp_;
        favourite_ = other.favourite_;
        favouriteExp_ = other.favouriteExp_;
        firstHair_ = other.firstHair_;
        firstFace_ = other.firstFace_;
        firstDress_ = other.firstDress_;
        firstChest_ = other.firstChest_;
        firstCape_ = other.firstCape_;
        firstExtra_ = other.firstExtra_;
        secondHair_ = other.secondHair_;
        secondFace_ = other.secondFace_;
        secondDress_ = other.secondDress_;
        secondChest_ = other.secondChest_;
        secondCape_ = other.secondCape_;
        secondExtra_ = other.secondExtra_;
        inphalanx_ = other.inphalanx_;
        relation_ = other.relation_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterInfo Clone() {
        return new CharacterInfo(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 2;
      private int level_;
      /// <summary>
      /// 等级
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Level {
        get { return level_; }
        set {
          level_ = value;
        }
      }

      /// <summary>Field number for the "level_exp" field.</summary>
      public const int LevelExpFieldNumber = 3;
      private int levelExp_;
      /// <summary>
      /// 总经验
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int LevelExp {
        get { return levelExp_; }
        set {
          levelExp_ = value;
        }
      }

      /// <summary>Field number for the "favourite" field.</summary>
      public const int FavouriteFieldNumber = 4;
      private int favourite_;
      /// <summary>
      /// 好感度
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Favourite {
        get { return favourite_; }
        set {
          favourite_ = value;
        }
      }

      /// <summary>Field number for the "favourite_exp" field.</summary>
      public const int FavouriteExpFieldNumber = 5;
      private int favouriteExp_;
      /// <summary>
      /// 好感度总经验
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FavouriteExp {
        get { return favouriteExp_; }
        set {
          favouriteExp_ = value;
        }
      }

      /// <summary>Field number for the "first_hair" field.</summary>
      public const int FirstHairFieldNumber = 6;
      private int firstHair_;
      /// <summary>
      /// 第一套
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstHair {
        get { return firstHair_; }
        set {
          firstHair_ = value;
        }
      }

      /// <summary>Field number for the "first_face" field.</summary>
      public const int FirstFaceFieldNumber = 7;
      private int firstFace_;
      /// <summary>
      /// 2脸
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstFace {
        get { return firstFace_; }
        set {
          firstFace_ = value;
        }
      }

      /// <summary>Field number for the "first_dress" field.</summary>
      public const int FirstDressFieldNumber = 8;
      private int firstDress_;
      /// <summary>
      /// 3衣服
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstDress {
        get { return firstDress_; }
        set {
          firstDress_ = value;
        }
      }

      /// <summary>Field number for the "first_chest" field.</summary>
      public const int FirstChestFieldNumber = 9;
      private int firstChest_;
      /// <summary>
      /// 4胸
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstChest {
        get { return firstChest_; }
        set {
          firstChest_ = value;
        }
      }

      /// <summary>Field number for the "first_cape" field.</summary>
      public const int FirstCapeFieldNumber = 10;
      private int firstCape_;
      /// <summary>
      /// 5背
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstCape {
        get { return firstCape_; }
        set {
          firstCape_ = value;
        }
      }

      /// <summary>Field number for the "first_extra" field.</summary>
      public const int FirstExtraFieldNumber = 11;
      private int firstExtra_;
      /// <summary>
      /// 6其他
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstExtra {
        get { return firstExtra_; }
        set {
          firstExtra_ = value;
        }
      }

      /// <summary>Field number for the "second_hair" field.</summary>
      public const int SecondHairFieldNumber = 12;
      private int secondHair_;
      /// <summary>
      /// 第二套
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondHair {
        get { return secondHair_; }
        set {
          secondHair_ = value;
        }
      }

      /// <summary>Field number for the "second_face" field.</summary>
      public const int SecondFaceFieldNumber = 13;
      private int secondFace_;
      /// <summary>
      /// 2脸
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondFace {
        get { return secondFace_; }
        set {
          secondFace_ = value;
        }
      }

      /// <summary>Field number for the "second_dress" field.</summary>
      public const int SecondDressFieldNumber = 14;
      private int secondDress_;
      /// <summary>
      /// 3衣服
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondDress {
        get { return secondDress_; }
        set {
          secondDress_ = value;
        }
      }

      /// <summary>Field number for the "second_chest" field.</summary>
      public const int SecondChestFieldNumber = 15;
      private int secondChest_;
      /// <summary>
      /// 4胸
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondChest {
        get { return secondChest_; }
        set {
          secondChest_ = value;
        }
      }

      /// <summary>Field number for the "second_cape" field.</summary>
      public const int SecondCapeFieldNumber = 16;
      private int secondCape_;
      /// <summary>
      /// 5背
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondCape {
        get { return secondCape_; }
        set {
          secondCape_ = value;
        }
      }

      /// <summary>Field number for the "second_extra" field.</summary>
      public const int SecondExtraFieldNumber = 17;
      private int secondExtra_;
      /// <summary>
      /// 6其他
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondExtra {
        get { return secondExtra_; }
        set {
          secondExtra_ = value;
        }
      }

      /// <summary>Field number for the "inphalanx" field.</summary>
      public const int InphalanxFieldNumber = 18;
      private bool inphalanx_;
      /// <summary>
      /// 在阵型中(true:是 false:否)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Inphalanx {
        get { return inphalanx_; }
        set {
          inphalanx_ = value;
        }
      }

      /// <summary>Field number for the "relation" field.</summary>
      public const int RelationFieldNumber = 19;
      private global::CharacterRelation relation_ = 0;
      /// <summary>
      /// 角色关系
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::CharacterRelation Relation {
        get { return relation_; }
        set {
          relation_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as CharacterInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(CharacterInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Level != other.Level) return false;
        if (LevelExp != other.LevelExp) return false;
        if (Favourite != other.Favourite) return false;
        if (FavouriteExp != other.FavouriteExp) return false;
        if (FirstHair != other.FirstHair) return false;
        if (FirstFace != other.FirstFace) return false;
        if (FirstDress != other.FirstDress) return false;
        if (FirstChest != other.FirstChest) return false;
        if (FirstCape != other.FirstCape) return false;
        if (FirstExtra != other.FirstExtra) return false;
        if (SecondHair != other.SecondHair) return false;
        if (SecondFace != other.SecondFace) return false;
        if (SecondDress != other.SecondDress) return false;
        if (SecondChest != other.SecondChest) return false;
        if (SecondCape != other.SecondCape) return false;
        if (SecondExtra != other.SecondExtra) return false;
        if (Inphalanx != other.Inphalanx) return false;
        if (Relation != other.Relation) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Level != 0) hash ^= Level.GetHashCode();
        if (LevelExp != 0) hash ^= LevelExp.GetHashCode();
        if (Favourite != 0) hash ^= Favourite.GetHashCode();
        if (FavouriteExp != 0) hash ^= FavouriteExp.GetHashCode();
        if (FirstHair != 0) hash ^= FirstHair.GetHashCode();
        if (FirstFace != 0) hash ^= FirstFace.GetHashCode();
        if (FirstDress != 0) hash ^= FirstDress.GetHashCode();
        if (FirstChest != 0) hash ^= FirstChest.GetHashCode();
        if (FirstCape != 0) hash ^= FirstCape.GetHashCode();
        if (FirstExtra != 0) hash ^= FirstExtra.GetHashCode();
        if (SecondHair != 0) hash ^= SecondHair.GetHashCode();
        if (SecondFace != 0) hash ^= SecondFace.GetHashCode();
        if (SecondDress != 0) hash ^= SecondDress.GetHashCode();
        if (SecondChest != 0) hash ^= SecondChest.GetHashCode();
        if (SecondCape != 0) hash ^= SecondCape.GetHashCode();
        if (SecondExtra != 0) hash ^= SecondExtra.GetHashCode();
        if (Inphalanx != false) hash ^= Inphalanx.GetHashCode();
        if (Relation != 0) hash ^= Relation.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Level != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Level);
        }
        if (LevelExp != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(LevelExp);
        }
        if (Favourite != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(Favourite);
        }
        if (FavouriteExp != 0) {
          output.WriteRawTag(40);
          output.WriteInt32(FavouriteExp);
        }
        if (FirstHair != 0) {
          output.WriteRawTag(48);
          output.WriteInt32(FirstHair);
        }
        if (FirstFace != 0) {
          output.WriteRawTag(56);
          output.WriteInt32(FirstFace);
        }
        if (FirstDress != 0) {
          output.WriteRawTag(64);
          output.WriteInt32(FirstDress);
        }
        if (FirstChest != 0) {
          output.WriteRawTag(72);
          output.WriteInt32(FirstChest);
        }
        if (FirstCape != 0) {
          output.WriteRawTag(80);
          output.WriteInt32(FirstCape);
        }
        if (FirstExtra != 0) {
          output.WriteRawTag(88);
          output.WriteInt32(FirstExtra);
        }
        if (SecondHair != 0) {
          output.WriteRawTag(96);
          output.WriteInt32(SecondHair);
        }
        if (SecondFace != 0) {
          output.WriteRawTag(104);
          output.WriteInt32(SecondFace);
        }
        if (SecondDress != 0) {
          output.WriteRawTag(112);
          output.WriteInt32(SecondDress);
        }
        if (SecondChest != 0) {
          output.WriteRawTag(120);
          output.WriteInt32(SecondChest);
        }
        if (SecondCape != 0) {
          output.WriteRawTag(128, 1);
          output.WriteInt32(SecondCape);
        }
        if (SecondExtra != 0) {
          output.WriteRawTag(136, 1);
          output.WriteInt32(SecondExtra);
        }
        if (Inphalanx != false) {
          output.WriteRawTag(144, 1);
          output.WriteBool(Inphalanx);
        }
        if (Relation != 0) {
          output.WriteRawTag(152, 1);
          output.WriteEnum((int) Relation);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Level != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
        }
        if (LevelExp != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelExp);
        }
        if (Favourite != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Favourite);
        }
        if (FavouriteExp != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FavouriteExp);
        }
        if (FirstHair != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstHair);
        }
        if (FirstFace != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstFace);
        }
        if (FirstDress != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstDress);
        }
        if (FirstChest != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstChest);
        }
        if (FirstCape != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstCape);
        }
        if (FirstExtra != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstExtra);
        }
        if (SecondHair != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondHair);
        }
        if (SecondFace != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondFace);
        }
        if (SecondDress != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondDress);
        }
        if (SecondChest != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondChest);
        }
        if (SecondCape != 0) {
          size += 2 + pb::CodedOutputStream.ComputeInt32Size(SecondCape);
        }
        if (SecondExtra != 0) {
          size += 2 + pb::CodedOutputStream.ComputeInt32Size(SecondExtra);
        }
        if (Inphalanx != false) {
          size += 2 + 1;
        }
        if (Relation != 0) {
          size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Relation);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(CharacterInfo other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Level != 0) {
          Level = other.Level;
        }
        if (other.LevelExp != 0) {
          LevelExp = other.LevelExp;
        }
        if (other.Favourite != 0) {
          Favourite = other.Favourite;
        }
        if (other.FavouriteExp != 0) {
          FavouriteExp = other.FavouriteExp;
        }
        if (other.FirstHair != 0) {
          FirstHair = other.FirstHair;
        }
        if (other.FirstFace != 0) {
          FirstFace = other.FirstFace;
        }
        if (other.FirstDress != 0) {
          FirstDress = other.FirstDress;
        }
        if (other.FirstChest != 0) {
          FirstChest = other.FirstChest;
        }
        if (other.FirstCape != 0) {
          FirstCape = other.FirstCape;
        }
        if (other.FirstExtra != 0) {
          FirstExtra = other.FirstExtra;
        }
        if (other.SecondHair != 0) {
          SecondHair = other.SecondHair;
        }
        if (other.SecondFace != 0) {
          SecondFace = other.SecondFace;
        }
        if (other.SecondDress != 0) {
          SecondDress = other.SecondDress;
        }
        if (other.SecondChest != 0) {
          SecondChest = other.SecondChest;
        }
        if (other.SecondCape != 0) {
          SecondCape = other.SecondCape;
        }
        if (other.SecondExtra != 0) {
          SecondExtra = other.SecondExtra;
        }
        if (other.Inphalanx != false) {
          Inphalanx = other.Inphalanx;
        }
        if (other.Relation != 0) {
          Relation = other.Relation;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Level = input.ReadInt32();
              break;
            }
            case 24: {
              LevelExp = input.ReadInt32();
              break;
            }
            case 32: {
              Favourite = input.ReadInt32();
              break;
            }
            case 40: {
              FavouriteExp = input.ReadInt32();
              break;
            }
            case 48: {
              FirstHair = input.ReadInt32();
              break;
            }
            case 56: {
              FirstFace = input.ReadInt32();
              break;
            }
            case 64: {
              FirstDress = input.ReadInt32();
              break;
            }
            case 72: {
              FirstChest = input.ReadInt32();
              break;
            }
            case 80: {
              FirstCape = input.ReadInt32();
              break;
            }
            case 88: {
              FirstExtra = input.ReadInt32();
              break;
            }
            case 96: {
              SecondHair = input.ReadInt32();
              break;
            }
            case 104: {
              SecondFace = input.ReadInt32();
              break;
            }
            case 112: {
              SecondDress = input.ReadInt32();
              break;
            }
            case 120: {
              SecondChest = input.ReadInt32();
              break;
            }
            case 128: {
              SecondCape = input.ReadInt32();
              break;
            }
            case 136: {
              SecondExtra = input.ReadInt32();
              break;
            }
            case 144: {
              Inphalanx = input.ReadBool();
              break;
            }
            case 152: {
              relation_ = (global::CharacterRelation) input.ReadEnum();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_add_element_gm : pb::IMessage<c2l_add_element_gm> {
  private static readonly pb::MessageParser<c2l_add_element_gm> _parser = new pb::MessageParser<c2l_add_element_gm>(() => new c2l_add_element_gm());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_add_element_gm> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_add_element_gm() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_add_element_gm(c2l_add_element_gm other) : this() {
    eles_ = other.eles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_add_element_gm Clone() {
    return new c2l_add_element_gm(this);
  }

  /// <summary>Field number for the "eles" field.</summary>
  public const int ElesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_eles_codec
      = pb::FieldCodec.ForMessage(10, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> eles_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 增加的元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Eles {
    get { return eles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_add_element_gm);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_add_element_gm other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!eles_.Equals(other.eles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= eles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    eles_.WriteTo(output, _repeated_eles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += eles_.CalculateSize(_repeated_eles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_add_element_gm other) {
    if (other == null) {
      return;
    }
    eles_.Add(other.eles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          eles_.AddEntriesFrom(input, _repeated_eles_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_add_element_gm : pb::IMessage<l2c_add_element_gm> {
  private static readonly pb::MessageParser<l2c_add_element_gm> _parser = new pb::MessageParser<l2c_add_element_gm>(() => new l2c_add_element_gm());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_add_element_gm> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_add_element_gm() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_add_element_gm(l2c_add_element_gm other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_add_element_gm Clone() {
    return new l2c_add_element_gm(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 是否成功
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_add_element_gm);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_add_element_gm other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_add_element_gm other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_reset_cnts_gm : pb::IMessage<c2l_reset_cnts_gm> {
  private static readonly pb::MessageParser<c2l_reset_cnts_gm> _parser = new pb::MessageParser<c2l_reset_cnts_gm>(() => new c2l_reset_cnts_gm());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_reset_cnts_gm> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reset_cnts_gm() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reset_cnts_gm(c2l_reset_cnts_gm other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reset_cnts_gm Clone() {
    return new c2l_reset_cnts_gm(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_reset_cnts_gm);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_reset_cnts_gm other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_reset_cnts_gm other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_reset_cnts_gm : pb::IMessage<l2c_reset_cnts_gm> {
  private static readonly pb::MessageParser<l2c_reset_cnts_gm> _parser = new pb::MessageParser<l2c_reset_cnts_gm>(() => new l2c_reset_cnts_gm());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_reset_cnts_gm> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reset_cnts_gm() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reset_cnts_gm(l2c_reset_cnts_gm other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reset_cnts_gm Clone() {
    return new l2c_reset_cnts_gm(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 是否成功
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_reset_cnts_gm);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_reset_cnts_gm other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_reset_cnts_gm other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_get_all_cloth_gm : pb::IMessage<c2l_get_all_cloth_gm> {
  private static readonly pb::MessageParser<c2l_get_all_cloth_gm> _parser = new pb::MessageParser<c2l_get_all_cloth_gm>(() => new c2l_get_all_cloth_gm());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_get_all_cloth_gm> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_get_all_cloth_gm() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_get_all_cloth_gm(c2l_get_all_cloth_gm other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_get_all_cloth_gm Clone() {
    return new c2l_get_all_cloth_gm(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_get_all_cloth_gm);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_get_all_cloth_gm other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_get_all_cloth_gm other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_get_all_cloth_gm : pb::IMessage<l2c_get_all_cloth_gm> {
  private static readonly pb::MessageParser<l2c_get_all_cloth_gm> _parser = new pb::MessageParser<l2c_get_all_cloth_gm>(() => new l2c_get_all_cloth_gm());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_get_all_cloth_gm> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_get_all_cloth_gm() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_get_all_cloth_gm(l2c_get_all_cloth_gm other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_get_all_cloth_gm Clone() {
    return new l2c_get_all_cloth_gm(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 是否成功
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_get_all_cloth_gm);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_get_all_cloth_gm other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_get_all_cloth_gm other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 玩家数据更新
/// </summary>
public sealed partial class l2c_upd_player : pb::IMessage<l2c_upd_player> {
  private static readonly pb::MessageParser<l2c_upd_player> _parser = new pb::MessageParser<l2c_upd_player>(() => new l2c_upd_player());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_upd_player> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_player() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_player(l2c_upd_player other) : this() {
    name_ = other.name_;
    icon_ = other.icon_;
    iconRim_ = other.iconRim_;
    money_ = other.money_;
    vitality_ = other.vitality_;
    diamond_ = other.diamond_;
    freeDiamond_ = other.freeDiamond_;
    maxnomal_ = other.maxnomal_;
    maxdiffcult_ = other.maxdiffcult_;
    coolDown_ = other.coolDown_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_player Clone() {
    return new l2c_upd_player(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  /// <summary>
  /// 名称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "icon" field.</summary>
  public const int IconFieldNumber = 2;
  private int icon_;
  /// <summary>
  /// 头像(默认id=0)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Icon {
    get { return icon_; }
    set {
      icon_ = value;
    }
  }

  /// <summary>Field number for the "icon_rim" field.</summary>
  public const int IconRimFieldNumber = 3;
  private int iconRim_;
  /// <summary>
  /// 头像框(默认id=0)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IconRim {
    get { return iconRim_; }
    set {
      iconRim_ = value;
    }
  }

  /// <summary>Field number for the "money" field.</summary>
  public const int MoneyFieldNumber = 4;
  private long money_;
  /// <summary>
  /// 金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Money {
    get { return money_; }
    set {
      money_ = value;
    }
  }

  /// <summary>Field number for the "vitality" field.</summary>
  public const int VitalityFieldNumber = 5;
  private int vitality_;
  /// <summary>
  /// 体力
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Vitality {
    get { return vitality_; }
    set {
      vitality_ = value;
    }
  }

  /// <summary>Field number for the "diamond" field.</summary>
  public const int DiamondFieldNumber = 6;
  private int diamond_;
  /// <summary>
  /// 钻石
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Diamond {
    get { return diamond_; }
    set {
      diamond_ = value;
    }
  }

  /// <summary>Field number for the "free_diamond" field.</summary>
  public const int FreeDiamondFieldNumber = 7;
  private int freeDiamond_;
  /// <summary>
  /// 免费钻石
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FreeDiamond {
    get { return freeDiamond_; }
    set {
      freeDiamond_ = value;
    }
  }

  /// <summary>Field number for the "maxnomal" field.</summary>
  public const int MaxnomalFieldNumber = 8;
  private int maxnomal_;
  /// <summary>
  /// 普通章节最大通关ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Maxnomal {
    get { return maxnomal_; }
    set {
      maxnomal_ = value;
    }
  }

  /// <summary>Field number for the "maxdiffcult" field.</summary>
  public const int MaxdiffcultFieldNumber = 9;
  private int maxdiffcult_;
  /// <summary>
  /// 困难章节最大通关ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Maxdiffcult {
    get { return maxdiffcult_; }
    set {
      maxdiffcult_ = value;
    }
  }

  /// <summary>Field number for the "cool_down" field.</summary>
  public const int CoolDownFieldNumber = 10;
  private int coolDown_;
  /// <summary>
  /// 体力剩余倒计时(单位:s)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CoolDown {
    get { return coolDown_; }
    set {
      coolDown_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_upd_player);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_upd_player other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Icon != other.Icon) return false;
    if (IconRim != other.IconRim) return false;
    if (Money != other.Money) return false;
    if (Vitality != other.Vitality) return false;
    if (Diamond != other.Diamond) return false;
    if (FreeDiamond != other.FreeDiamond) return false;
    if (Maxnomal != other.Maxnomal) return false;
    if (Maxdiffcult != other.Maxdiffcult) return false;
    if (CoolDown != other.CoolDown) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Icon != 0) hash ^= Icon.GetHashCode();
    if (IconRim != 0) hash ^= IconRim.GetHashCode();
    if (Money != 0L) hash ^= Money.GetHashCode();
    if (Vitality != 0) hash ^= Vitality.GetHashCode();
    if (Diamond != 0) hash ^= Diamond.GetHashCode();
    if (FreeDiamond != 0) hash ^= FreeDiamond.GetHashCode();
    if (Maxnomal != 0) hash ^= Maxnomal.GetHashCode();
    if (Maxdiffcult != 0) hash ^= Maxdiffcult.GetHashCode();
    if (CoolDown != 0) hash ^= CoolDown.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Icon != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Icon);
    }
    if (IconRim != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(IconRim);
    }
    if (Money != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(Money);
    }
    if (Vitality != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Vitality);
    }
    if (Diamond != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Diamond);
    }
    if (FreeDiamond != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(FreeDiamond);
    }
    if (Maxnomal != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(Maxnomal);
    }
    if (Maxdiffcult != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Maxdiffcult);
    }
    if (CoolDown != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(CoolDown);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Icon != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Icon);
    }
    if (IconRim != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IconRim);
    }
    if (Money != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Money);
    }
    if (Vitality != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vitality);
    }
    if (Diamond != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diamond);
    }
    if (FreeDiamond != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeDiamond);
    }
    if (Maxnomal != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maxnomal);
    }
    if (Maxdiffcult != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maxdiffcult);
    }
    if (CoolDown != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoolDown);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_upd_player other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Icon != 0) {
      Icon = other.Icon;
    }
    if (other.IconRim != 0) {
      IconRim = other.IconRim;
    }
    if (other.Money != 0L) {
      Money = other.Money;
    }
    if (other.Vitality != 0) {
      Vitality = other.Vitality;
    }
    if (other.Diamond != 0) {
      Diamond = other.Diamond;
    }
    if (other.FreeDiamond != 0) {
      FreeDiamond = other.FreeDiamond;
    }
    if (other.Maxnomal != 0) {
      Maxnomal = other.Maxnomal;
    }
    if (other.Maxdiffcult != 0) {
      Maxdiffcult = other.Maxdiffcult;
    }
    if (other.CoolDown != 0) {
      CoolDown = other.CoolDown;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Icon = input.ReadInt32();
          break;
        }
        case 24: {
          IconRim = input.ReadInt32();
          break;
        }
        case 32: {
          Money = input.ReadInt64();
          break;
        }
        case 40: {
          Vitality = input.ReadInt32();
          break;
        }
        case 48: {
          Diamond = input.ReadInt32();
          break;
        }
        case 56: {
          FreeDiamond = input.ReadInt32();
          break;
        }
        case 64: {
          Maxnomal = input.ReadInt32();
          break;
        }
        case 72: {
          Maxdiffcult = input.ReadInt32();
          break;
        }
        case 80: {
          CoolDown = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 角色数据更新与新加
/// </summary>
public sealed partial class l2c_upd_character : pb::IMessage<l2c_upd_character> {
  private static readonly pb::MessageParser<l2c_upd_character> _parser = new pb::MessageParser<l2c_upd_character>(() => new l2c_upd_character());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_upd_character> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_character() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_character(l2c_upd_character other) : this() {
    id_ = other.id_;
    level_ = other.level_;
    levelExp_ = other.levelExp_;
    favourite_ = other.favourite_;
    favouriteExp_ = other.favouriteExp_;
    firstHair_ = other.firstHair_;
    firstFace_ = other.firstFace_;
    firstDress_ = other.firstDress_;
    firstChest_ = other.firstChest_;
    firstCape_ = other.firstCape_;
    firstExtra_ = other.firstExtra_;
    secondHair_ = other.secondHair_;
    secondFace_ = other.secondFace_;
    secondDress_ = other.secondDress_;
    secondChest_ = other.secondChest_;
    secondCape_ = other.secondCape_;
    secondExtra_ = other.secondExtra_;
    inphalanx_ = other.inphalanx_;
    relation_ = other.relation_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_character Clone() {
    return new l2c_upd_character(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 2;
  private int level_;
  /// <summary>
  /// 等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "level_exp" field.</summary>
  public const int LevelExpFieldNumber = 3;
  private int levelExp_;
  /// <summary>
  /// 总经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LevelExp {
    get { return levelExp_; }
    set {
      levelExp_ = value;
    }
  }

  /// <summary>Field number for the "favourite" field.</summary>
  public const int FavouriteFieldNumber = 4;
  private int favourite_;
  /// <summary>
  /// 好感度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Favourite {
    get { return favourite_; }
    set {
      favourite_ = value;
    }
  }

  /// <summary>Field number for the "favourite_exp" field.</summary>
  public const int FavouriteExpFieldNumber = 5;
  private int favouriteExp_;
  /// <summary>
  /// 好感度总经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FavouriteExp {
    get { return favouriteExp_; }
    set {
      favouriteExp_ = value;
    }
  }

  /// <summary>Field number for the "first_hair" field.</summary>
  public const int FirstHairFieldNumber = 6;
  private int firstHair_;
  /// <summary>
  /// 第一套
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstHair {
    get { return firstHair_; }
    set {
      firstHair_ = value;
    }
  }

  /// <summary>Field number for the "first_face" field.</summary>
  public const int FirstFaceFieldNumber = 7;
  private int firstFace_;
  /// <summary>
  /// 2脸
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstFace {
    get { return firstFace_; }
    set {
      firstFace_ = value;
    }
  }

  /// <summary>Field number for the "first_dress" field.</summary>
  public const int FirstDressFieldNumber = 8;
  private int firstDress_;
  /// <summary>
  /// 3衣服
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstDress {
    get { return firstDress_; }
    set {
      firstDress_ = value;
    }
  }

  /// <summary>Field number for the "first_chest" field.</summary>
  public const int FirstChestFieldNumber = 9;
  private int firstChest_;
  /// <summary>
  /// 4胸
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstChest {
    get { return firstChest_; }
    set {
      firstChest_ = value;
    }
  }

  /// <summary>Field number for the "first_cape" field.</summary>
  public const int FirstCapeFieldNumber = 10;
  private int firstCape_;
  /// <summary>
  /// 5背
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstCape {
    get { return firstCape_; }
    set {
      firstCape_ = value;
    }
  }

  /// <summary>Field number for the "first_extra" field.</summary>
  public const int FirstExtraFieldNumber = 11;
  private int firstExtra_;
  /// <summary>
  /// 6其他
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FirstExtra {
    get { return firstExtra_; }
    set {
      firstExtra_ = value;
    }
  }

  /// <summary>Field number for the "second_hair" field.</summary>
  public const int SecondHairFieldNumber = 12;
  private int secondHair_;
  /// <summary>
  /// 第二套
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SecondHair {
    get { return secondHair_; }
    set {
      secondHair_ = value;
    }
  }

  /// <summary>Field number for the "second_face" field.</summary>
  public const int SecondFaceFieldNumber = 13;
  private int secondFace_;
  /// <summary>
  /// 2脸
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SecondFace {
    get { return secondFace_; }
    set {
      secondFace_ = value;
    }
  }

  /// <summary>Field number for the "second_dress" field.</summary>
  public const int SecondDressFieldNumber = 14;
  private int secondDress_;
  /// <summary>
  /// 3衣服
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SecondDress {
    get { return secondDress_; }
    set {
      secondDress_ = value;
    }
  }

  /// <summary>Field number for the "second_chest" field.</summary>
  public const int SecondChestFieldNumber = 15;
  private int secondChest_;
  /// <summary>
  /// 4胸
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SecondChest {
    get { return secondChest_; }
    set {
      secondChest_ = value;
    }
  }

  /// <summary>Field number for the "second_cape" field.</summary>
  public const int SecondCapeFieldNumber = 16;
  private int secondCape_;
  /// <summary>
  /// 5背
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SecondCape {
    get { return secondCape_; }
    set {
      secondCape_ = value;
    }
  }

  /// <summary>Field number for the "second_extra" field.</summary>
  public const int SecondExtraFieldNumber = 17;
  private int secondExtra_;
  /// <summary>
  /// 6其他
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SecondExtra {
    get { return secondExtra_; }
    set {
      secondExtra_ = value;
    }
  }

  /// <summary>Field number for the "inphalanx" field.</summary>
  public const int InphalanxFieldNumber = 18;
  private bool inphalanx_;
  /// <summary>
  /// 在阵型中(true:是 false:否)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Inphalanx {
    get { return inphalanx_; }
    set {
      inphalanx_ = value;
    }
  }

  /// <summary>Field number for the "relation" field.</summary>
  public const int RelationFieldNumber = 19;
  private global::CharacterRelation relation_ = 0;
  /// <summary>
  /// 角色关系
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CharacterRelation Relation {
    get { return relation_; }
    set {
      relation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_upd_character);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_upd_character other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Level != other.Level) return false;
    if (LevelExp != other.LevelExp) return false;
    if (Favourite != other.Favourite) return false;
    if (FavouriteExp != other.FavouriteExp) return false;
    if (FirstHair != other.FirstHair) return false;
    if (FirstFace != other.FirstFace) return false;
    if (FirstDress != other.FirstDress) return false;
    if (FirstChest != other.FirstChest) return false;
    if (FirstCape != other.FirstCape) return false;
    if (FirstExtra != other.FirstExtra) return false;
    if (SecondHair != other.SecondHair) return false;
    if (SecondFace != other.SecondFace) return false;
    if (SecondDress != other.SecondDress) return false;
    if (SecondChest != other.SecondChest) return false;
    if (SecondCape != other.SecondCape) return false;
    if (SecondExtra != other.SecondExtra) return false;
    if (Inphalanx != other.Inphalanx) return false;
    if (Relation != other.Relation) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (LevelExp != 0) hash ^= LevelExp.GetHashCode();
    if (Favourite != 0) hash ^= Favourite.GetHashCode();
    if (FavouriteExp != 0) hash ^= FavouriteExp.GetHashCode();
    if (FirstHair != 0) hash ^= FirstHair.GetHashCode();
    if (FirstFace != 0) hash ^= FirstFace.GetHashCode();
    if (FirstDress != 0) hash ^= FirstDress.GetHashCode();
    if (FirstChest != 0) hash ^= FirstChest.GetHashCode();
    if (FirstCape != 0) hash ^= FirstCape.GetHashCode();
    if (FirstExtra != 0) hash ^= FirstExtra.GetHashCode();
    if (SecondHair != 0) hash ^= SecondHair.GetHashCode();
    if (SecondFace != 0) hash ^= SecondFace.GetHashCode();
    if (SecondDress != 0) hash ^= SecondDress.GetHashCode();
    if (SecondChest != 0) hash ^= SecondChest.GetHashCode();
    if (SecondCape != 0) hash ^= SecondCape.GetHashCode();
    if (SecondExtra != 0) hash ^= SecondExtra.GetHashCode();
    if (Inphalanx != false) hash ^= Inphalanx.GetHashCode();
    if (Relation != 0) hash ^= Relation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Level);
    }
    if (LevelExp != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(LevelExp);
    }
    if (Favourite != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Favourite);
    }
    if (FavouriteExp != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(FavouriteExp);
    }
    if (FirstHair != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(FirstHair);
    }
    if (FirstFace != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(FirstFace);
    }
    if (FirstDress != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(FirstDress);
    }
    if (FirstChest != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(FirstChest);
    }
    if (FirstCape != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(FirstCape);
    }
    if (FirstExtra != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(FirstExtra);
    }
    if (SecondHair != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(SecondHair);
    }
    if (SecondFace != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(SecondFace);
    }
    if (SecondDress != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(SecondDress);
    }
    if (SecondChest != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(SecondChest);
    }
    if (SecondCape != 0) {
      output.WriteRawTag(128, 1);
      output.WriteInt32(SecondCape);
    }
    if (SecondExtra != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(SecondExtra);
    }
    if (Inphalanx != false) {
      output.WriteRawTag(144, 1);
      output.WriteBool(Inphalanx);
    }
    if (Relation != 0) {
      output.WriteRawTag(152, 1);
      output.WriteEnum((int) Relation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (LevelExp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelExp);
    }
    if (Favourite != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Favourite);
    }
    if (FavouriteExp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FavouriteExp);
    }
    if (FirstHair != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstHair);
    }
    if (FirstFace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstFace);
    }
    if (FirstDress != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstDress);
    }
    if (FirstChest != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstChest);
    }
    if (FirstCape != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstCape);
    }
    if (FirstExtra != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstExtra);
    }
    if (SecondHair != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondHair);
    }
    if (SecondFace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondFace);
    }
    if (SecondDress != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondDress);
    }
    if (SecondChest != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondChest);
    }
    if (SecondCape != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(SecondCape);
    }
    if (SecondExtra != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(SecondExtra);
    }
    if (Inphalanx != false) {
      size += 2 + 1;
    }
    if (Relation != 0) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Relation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_upd_character other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.LevelExp != 0) {
      LevelExp = other.LevelExp;
    }
    if (other.Favourite != 0) {
      Favourite = other.Favourite;
    }
    if (other.FavouriteExp != 0) {
      FavouriteExp = other.FavouriteExp;
    }
    if (other.FirstHair != 0) {
      FirstHair = other.FirstHair;
    }
    if (other.FirstFace != 0) {
      FirstFace = other.FirstFace;
    }
    if (other.FirstDress != 0) {
      FirstDress = other.FirstDress;
    }
    if (other.FirstChest != 0) {
      FirstChest = other.FirstChest;
    }
    if (other.FirstCape != 0) {
      FirstCape = other.FirstCape;
    }
    if (other.FirstExtra != 0) {
      FirstExtra = other.FirstExtra;
    }
    if (other.SecondHair != 0) {
      SecondHair = other.SecondHair;
    }
    if (other.SecondFace != 0) {
      SecondFace = other.SecondFace;
    }
    if (other.SecondDress != 0) {
      SecondDress = other.SecondDress;
    }
    if (other.SecondChest != 0) {
      SecondChest = other.SecondChest;
    }
    if (other.SecondCape != 0) {
      SecondCape = other.SecondCape;
    }
    if (other.SecondExtra != 0) {
      SecondExtra = other.SecondExtra;
    }
    if (other.Inphalanx != false) {
      Inphalanx = other.Inphalanx;
    }
    if (other.Relation != 0) {
      Relation = other.Relation;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Level = input.ReadInt32();
          break;
        }
        case 24: {
          LevelExp = input.ReadInt32();
          break;
        }
        case 32: {
          Favourite = input.ReadInt32();
          break;
        }
        case 40: {
          FavouriteExp = input.ReadInt32();
          break;
        }
        case 48: {
          FirstHair = input.ReadInt32();
          break;
        }
        case 56: {
          FirstFace = input.ReadInt32();
          break;
        }
        case 64: {
          FirstDress = input.ReadInt32();
          break;
        }
        case 72: {
          FirstChest = input.ReadInt32();
          break;
        }
        case 80: {
          FirstCape = input.ReadInt32();
          break;
        }
        case 88: {
          FirstExtra = input.ReadInt32();
          break;
        }
        case 96: {
          SecondHair = input.ReadInt32();
          break;
        }
        case 104: {
          SecondFace = input.ReadInt32();
          break;
        }
        case 112: {
          SecondDress = input.ReadInt32();
          break;
        }
        case 120: {
          SecondChest = input.ReadInt32();
          break;
        }
        case 128: {
          SecondCape = input.ReadInt32();
          break;
        }
        case 136: {
          SecondExtra = input.ReadInt32();
          break;
        }
        case 144: {
          Inphalanx = input.ReadBool();
          break;
        }
        case 152: {
          relation_ = (global::CharacterRelation) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 装备更新与新加
/// </summary>
public sealed partial class l2c_upd_equipment : pb::IMessage<l2c_upd_equipment> {
  private static readonly pb::MessageParser<l2c_upd_equipment> _parser = new pb::MessageParser<l2c_upd_equipment>(() => new l2c_upd_equipment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_upd_equipment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_equipment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_equipment(l2c_upd_equipment other) : this() {
    id_ = other.id_;
    level_ = other.level_;
    exp_ = other.exp_;
    stars_ = other.stars_;
    stage_ = other.stage_;
    count_ = other.count_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_equipment Clone() {
    return new l2c_upd_equipment(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 2;
  private int level_;
  /// <summary>
  /// 等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 3;
  private int exp_;
  /// <summary>
  /// 总经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "stars" field.</summary>
  public const int StarsFieldNumber = 4;
  private int stars_;
  /// <summary>
  /// 星级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Stars {
    get { return stars_; }
    set {
      stars_ = value;
    }
  }

  /// <summary>Field number for the "stage" field.</summary>
  public const int StageFieldNumber = 5;
  private int stage_;
  /// <summary>
  /// 阶级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Stage {
    get { return stage_; }
    set {
      stage_ = value;
    }
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 6;
  private int count_;
  /// <summary>
  /// 数量(>=1)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_upd_equipment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_upd_equipment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Level != other.Level) return false;
    if (Exp != other.Exp) return false;
    if (Stars != other.Stars) return false;
    if (Stage != other.Stage) return false;
    if (Count != other.Count) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (Stars != 0) hash ^= Stars.GetHashCode();
    if (Stage != 0) hash ^= Stage.GetHashCode();
    if (Count != 0) hash ^= Count.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Level);
    }
    if (Exp != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Exp);
    }
    if (Stars != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Stars);
    }
    if (Stage != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Stage);
    }
    if (Count != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (Stars != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stars);
    }
    if (Stage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
    }
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_upd_equipment other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    if (other.Stars != 0) {
      Stars = other.Stars;
    }
    if (other.Stage != 0) {
      Stage = other.Stage;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Level = input.ReadInt32();
          break;
        }
        case 24: {
          Exp = input.ReadInt32();
          break;
        }
        case 32: {
          Stars = input.ReadInt32();
          break;
        }
        case 40: {
          Stage = input.ReadInt32();
          break;
        }
        case 48: {
          Count = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 物品更新与新加
/// </summary>
public sealed partial class l2c_upd_item : pb::IMessage<l2c_upd_item> {
  private static readonly pb::MessageParser<l2c_upd_item> _parser = new pb::MessageParser<l2c_upd_item>(() => new l2c_upd_item());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_upd_item> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_item() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_item(l2c_upd_item other) : this() {
    id_ = other.id_;
    count_ = other.count_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_item Clone() {
    return new l2c_upd_item(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 2;
  private int count_;
  /// <summary>
  /// 数量(0:删除 >0:更新数量)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_upd_item);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_upd_item other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Count != other.Count) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Count != 0) hash ^= Count.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Count != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_upd_item other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Count = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 国家信息更新
/// </summary>
public sealed partial class l2c_upd_nation : pb::IMessage<l2c_upd_nation> {
  private static readonly pb::MessageParser<l2c_upd_nation> _parser = new pb::MessageParser<l2c_upd_nation>(() => new l2c_upd_nation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_upd_nation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_nation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_nation(l2c_upd_nation other) : this() {
    id_ = other.id_;
    exp_ = other.exp_;
    level_ = other.level_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_upd_nation Clone() {
    return new l2c_upd_nation(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 国家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 2;
  private int exp_;
  /// <summary>
  /// 国家声望经验值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 3;
  private int level_;
  /// <summary>
  /// 国家声望等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_upd_nation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_upd_nation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Exp != other.Exp) return false;
    if (Level != other.Level) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Exp);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Level);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_upd_nation other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Exp = input.ReadInt32();
          break;
        }
        case 24: {
          Level = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 主线故事初始化
/// </summary>
public sealed partial class c2l_story_init : pb::IMessage<c2l_story_init> {
  private static readonly pb::MessageParser<c2l_story_init> _parser = new pb::MessageParser<c2l_story_init>(() => new c2l_story_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_story_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_init(c2l_story_init other) : this() {
    chapterId_ = other.chapterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_init Clone() {
    return new c2l_story_init(this);
  }

  /// <summary>Field number for the "chapter_id" field.</summary>
  public const int ChapterIdFieldNumber = 1;
  private int chapterId_;
  /// <summary>
  /// 章节ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChapterId {
    get { return chapterId_; }
    set {
      chapterId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_story_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_story_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChapterId != other.ChapterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChapterId != 0) hash ^= ChapterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ChapterId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChapterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChapterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChapterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_story_init other) {
    if (other == null) {
      return;
    }
    if (other.ChapterId != 0) {
      ChapterId = other.ChapterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChapterId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 战斗数据
/// </summary>
public sealed partial class CombatInfo : pb::IMessage<CombatInfo> {
  private static readonly pb::MessageParser<CombatInfo> _parser = new pb::MessageParser<CombatInfo>(() => new CombatInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CombatInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CombatInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CombatInfo(CombatInfo other) : this() {
    limit_ = other.limit_;
    win_ = other.win_;
    stars_ = other.stars_.Clone();
    killMonsters_ = other.killMonsters_.Clone();
    phalanx_ = other.phalanx_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CombatInfo Clone() {
    return new CombatInfo(this);
  }

  /// <summary>Field number for the "limit" field.</summary>
  public const int LimitFieldNumber = 1;
  private int limit_;
  /// <summary>
  /// 可进入次数(目前战斗关卡用，后续需要放到l2c_story_upd)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Limit {
    get { return limit_; }
    set {
      limit_ = value;
    }
  }

  /// <summary>Field number for the "win" field.</summary>
  public const int WinFieldNumber = 2;
  private bool win_;
  /// <summary>
  /// 输赢(true:赢 false:输)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Win {
    get { return win_; }
    set {
      win_ = value;
    }
  }

  /// <summary>Field number for the "stars" field.</summary>
  public const int StarsFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_stars_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> stars_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 星ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Stars {
    get { return stars_; }
  }

  /// <summary>Field number for the "kill_monsters" field.</summary>
  public const int KillMonstersFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_killMonsters_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> killMonsters_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 击杀怪物
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> KillMonsters {
    get { return killMonsters_; }
  }

  /// <summary>Field number for the "phalanx" field.</summary>
  public const int PhalanxFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_phalanx_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> phalanx_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 战斗阵容(胜利有效)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Phalanx {
    get { return phalanx_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CombatInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CombatInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Limit != other.Limit) return false;
    if (Win != other.Win) return false;
    if(!stars_.Equals(other.stars_)) return false;
    if(!killMonsters_.Equals(other.killMonsters_)) return false;
    if(!phalanx_.Equals(other.phalanx_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Limit != 0) hash ^= Limit.GetHashCode();
    if (Win != false) hash ^= Win.GetHashCode();
    hash ^= stars_.GetHashCode();
    hash ^= killMonsters_.GetHashCode();
    hash ^= phalanx_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Limit != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Limit);
    }
    if (Win != false) {
      output.WriteRawTag(16);
      output.WriteBool(Win);
    }
    stars_.WriteTo(output, _repeated_stars_codec);
    killMonsters_.WriteTo(output, _repeated_killMonsters_codec);
    phalanx_.WriteTo(output, _repeated_phalanx_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Limit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
    }
    if (Win != false) {
      size += 1 + 1;
    }
    size += stars_.CalculateSize(_repeated_stars_codec);
    size += killMonsters_.CalculateSize(_repeated_killMonsters_codec);
    size += phalanx_.CalculateSize(_repeated_phalanx_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CombatInfo other) {
    if (other == null) {
      return;
    }
    if (other.Limit != 0) {
      Limit = other.Limit;
    }
    if (other.Win != false) {
      Win = other.Win;
    }
    stars_.Add(other.stars_);
    killMonsters_.Add(other.killMonsters_);
    phalanx_.Add(other.phalanx_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Limit = input.ReadInt32();
          break;
        }
        case 16: {
          Win = input.ReadBool();
          break;
        }
        case 26:
        case 24: {
          stars_.AddEntriesFrom(input, _repeated_stars_codec);
          break;
        }
        case 34:
        case 32: {
          killMonsters_.AddEntriesFrom(input, _repeated_killMonsters_codec);
          break;
        }
        case 42:
        case 40: {
          phalanx_.AddEntriesFrom(input, _repeated_phalanx_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 关卡锁定信息
/// </summary>
public sealed partial class StoryLockInfo : pb::IMessage<StoryLockInfo> {
  private static readonly pb::MessageParser<StoryLockInfo> _parser = new pb::MessageParser<StoryLockInfo>(() => new StoryLockInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StoryLockInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryLockInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryLockInfo(StoryLockInfo other) : this() {
    triggerInfos_ = other.triggerInfos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryLockInfo Clone() {
    return new StoryLockInfo(this);
  }

  /// <summary>Field number for the "trigger_infos" field.</summary>
  public const int TriggerInfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::StoryLockInfo.Types.TriggerInfo> _repeated_triggerInfos_codec
      = pb::FieldCodec.ForMessage(10, global::StoryLockInfo.Types.TriggerInfo.Parser);
  private readonly pbc::RepeatedField<global::StoryLockInfo.Types.TriggerInfo> triggerInfos_ = new pbc::RepeatedField<global::StoryLockInfo.Types.TriggerInfo>();
  /// <summary>
  /// 未完成的触发器
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StoryLockInfo.Types.TriggerInfo> TriggerInfos {
    get { return triggerInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StoryLockInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StoryLockInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!triggerInfos_.Equals(other.triggerInfos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= triggerInfos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    triggerInfos_.WriteTo(output, _repeated_triggerInfos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += triggerInfos_.CalculateSize(_repeated_triggerInfos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StoryLockInfo other) {
    if (other == null) {
      return;
    }
    triggerInfos_.Add(other.triggerInfos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          triggerInfos_.AddEntriesFrom(input, _repeated_triggerInfos_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the StoryLockInfo message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class TriggerInfo : pb::IMessage<TriggerInfo> {
      private static readonly pb::MessageParser<TriggerInfo> _parser = new pb::MessageParser<TriggerInfo>(() => new TriggerInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<TriggerInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::StoryLockInfo.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public TriggerInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public TriggerInfo(TriggerInfo other) : this() {
        triggerType_ = other.triggerType_;
        triggerParam_ = other.triggerParam_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public TriggerInfo Clone() {
        return new TriggerInfo(this);
      }

      /// <summary>Field number for the "trigger_type" field.</summary>
      public const int TriggerTypeFieldNumber = 1;
      private int triggerType_;
      /// <summary>
      /// 触发器类型
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int TriggerType {
        get { return triggerType_; }
        set {
          triggerType_ = value;
        }
      }

      /// <summary>Field number for the "trigger_param" field.</summary>
      public const int TriggerParamFieldNumber = 2;
      private static readonly pb::FieldCodec<int> _repeated_triggerParam_codec
          = pb::FieldCodec.ForInt32(18);
      private readonly pbc::RepeatedField<int> triggerParam_ = new pbc::RepeatedField<int>();
      /// <summary>
      /// 触发器参数
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<int> TriggerParam {
        get { return triggerParam_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as TriggerInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(TriggerInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (TriggerType != other.TriggerType) return false;
        if(!triggerParam_.Equals(other.triggerParam_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (TriggerType != 0) hash ^= TriggerType.GetHashCode();
        hash ^= triggerParam_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (TriggerType != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(TriggerType);
        }
        triggerParam_.WriteTo(output, _repeated_triggerParam_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (TriggerType != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(TriggerType);
        }
        size += triggerParam_.CalculateSize(_repeated_triggerParam_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(TriggerInfo other) {
        if (other == null) {
          return;
        }
        if (other.TriggerType != 0) {
          TriggerType = other.TriggerType;
        }
        triggerParam_.Add(other.triggerParam_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              TriggerType = input.ReadInt32();
              break;
            }
            case 18:
            case 16: {
              triggerParam_.AddEntriesFrom(input, _repeated_triggerParam_codec);
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

/// <summary>
/// 主线故事更新
/// </summary>
public sealed partial class l2c_story_upd : pb::IMessage<l2c_story_upd> {
  private static readonly pb::MessageParser<l2c_story_upd> _parser = new pb::MessageParser<l2c_story_upd>(() => new l2c_story_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_story_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_upd(l2c_story_upd other) : this() {
    stageId_ = other.stageId_;
    frontIds_ = other.frontIds_.Clone();
    state_ = other.state_;
    limitSec_ = other.limitSec_;
    cost_ = other.cost_;
    buyCnts_ = other.buyCnts_;
    plotComplete_ = other.plotComplete_;
    finishedCount_ = other.finishedCount_;
    nodes_ = other.nodes_.Clone();
    combateResult_ = other.combateResult_ != null ? other.combateResult_.Clone() : null;
    lockInfos_ = other.lockInfos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_upd Clone() {
    return new l2c_story_upd(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "front_ids" field.</summary>
  public const int FrontIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_frontIds_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> frontIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 前置连线关卡
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> FrontIds {
    get { return frontIds_; }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 3;
  private global::StageState state_ = 0;
  /// <summary>
  /// 关卡状态(用于关卡操作)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StageState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "limit_sec" field.</summary>
  public const int LimitSecFieldNumber = 5;
  private long limitSec_;
  /// <summary>
  /// 剩余时间(随机关卡用 单位:秒 0:删除关卡)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long LimitSec {
    get { return limitSec_; }
    set {
      limitSec_ = value;
    }
  }

  /// <summary>Field number for the "cost" field.</summary>
  public const int CostFieldNumber = 6;
  private bool cost_;
  /// <summary>
  /// 扣费状态(剧情关卡用 true:已扣费 false:未扣费)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Cost {
    get { return cost_; }
    set {
      cost_ = value;
    }
  }

  /// <summary>Field number for the "buy_cnts" field.</summary>
  public const int BuyCntsFieldNumber = 7;
  private int buyCnts_;
  /// <summary>
  /// 每日可购买次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BuyCnts {
    get { return buyCnts_; }
    set {
      buyCnts_ = value;
    }
  }

  /// <summary>Field number for the "plot_complete" field.</summary>
  public const int PlotCompleteFieldNumber = 10;
  private bool plotComplete_;
  /// <summary>
  /// 剧情完成状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool PlotComplete {
    get { return plotComplete_; }
    set {
      plotComplete_ = value;
    }
  }

  /// <summary>Field number for the "finished_count" field.</summary>
  public const int FinishedCountFieldNumber = 11;
  private int finishedCount_;
  /// <summary>
  /// 节点完成数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FinishedCount {
    get { return finishedCount_; }
    set {
      finishedCount_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 12;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(98);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 剧情节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  /// <summary>Field number for the "combate_result" field.</summary>
  public const int CombateResultFieldNumber = 14;
  private global::CombatInfo combateResult_;
  /// <summary>
  /// 战斗信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CombatInfo CombateResult {
    get { return combateResult_; }
    set {
      combateResult_ = value;
    }
  }

  /// <summary>Field number for the "lock_infos" field.</summary>
  public const int LockInfosFieldNumber = 15;
  private static readonly pb::FieldCodec<global::StoryLockInfo> _repeated_lockInfos_codec
      = pb::FieldCodec.ForMessage(122, global::StoryLockInfo.Parser);
  private readonly pbc::RepeatedField<global::StoryLockInfo> lockInfos_ = new pbc::RepeatedField<global::StoryLockInfo>();
  /// <summary>
  /// 关卡锁定信息(LOCK状态使用)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StoryLockInfo> LockInfos {
    get { return lockInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_story_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_story_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if(!frontIds_.Equals(other.frontIds_)) return false;
    if (State != other.State) return false;
    if (LimitSec != other.LimitSec) return false;
    if (Cost != other.Cost) return false;
    if (BuyCnts != other.BuyCnts) return false;
    if (PlotComplete != other.PlotComplete) return false;
    if (FinishedCount != other.FinishedCount) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    if (!object.Equals(CombateResult, other.CombateResult)) return false;
    if(!lockInfos_.Equals(other.lockInfos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    hash ^= frontIds_.GetHashCode();
    if (State != 0) hash ^= State.GetHashCode();
    if (LimitSec != 0L) hash ^= LimitSec.GetHashCode();
    if (Cost != false) hash ^= Cost.GetHashCode();
    if (BuyCnts != 0) hash ^= BuyCnts.GetHashCode();
    if (PlotComplete != false) hash ^= PlotComplete.GetHashCode();
    if (FinishedCount != 0) hash ^= FinishedCount.GetHashCode();
    hash ^= nodes_.GetHashCode();
    if (combateResult_ != null) hash ^= CombateResult.GetHashCode();
    hash ^= lockInfos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    frontIds_.WriteTo(output, _repeated_frontIds_codec);
    if (State != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) State);
    }
    if (LimitSec != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(LimitSec);
    }
    if (Cost != false) {
      output.WriteRawTag(48);
      output.WriteBool(Cost);
    }
    if (BuyCnts != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(BuyCnts);
    }
    if (PlotComplete != false) {
      output.WriteRawTag(80);
      output.WriteBool(PlotComplete);
    }
    if (FinishedCount != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(FinishedCount);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    if (combateResult_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(CombateResult);
    }
    lockInfos_.WriteTo(output, _repeated_lockInfos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    size += frontIds_.CalculateSize(_repeated_frontIds_codec);
    if (State != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
    }
    if (LimitSec != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(LimitSec);
    }
    if (Cost != false) {
      size += 1 + 1;
    }
    if (BuyCnts != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyCnts);
    }
    if (PlotComplete != false) {
      size += 1 + 1;
    }
    if (FinishedCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinishedCount);
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    if (combateResult_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CombateResult);
    }
    size += lockInfos_.CalculateSize(_repeated_lockInfos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_story_upd other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    frontIds_.Add(other.frontIds_);
    if (other.State != 0) {
      State = other.State;
    }
    if (other.LimitSec != 0L) {
      LimitSec = other.LimitSec;
    }
    if (other.Cost != false) {
      Cost = other.Cost;
    }
    if (other.BuyCnts != 0) {
      BuyCnts = other.BuyCnts;
    }
    if (other.PlotComplete != false) {
      PlotComplete = other.PlotComplete;
    }
    if (other.FinishedCount != 0) {
      FinishedCount = other.FinishedCount;
    }
    nodes_.Add(other.nodes_);
    if (other.combateResult_ != null) {
      if (combateResult_ == null) {
        combateResult_ = new global::CombatInfo();
      }
      CombateResult.MergeFrom(other.CombateResult);
    }
    lockInfos_.Add(other.lockInfos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          frontIds_.AddEntriesFrom(input, _repeated_frontIds_codec);
          break;
        }
        case 24: {
          state_ = (global::StageState) input.ReadEnum();
          break;
        }
        case 40: {
          LimitSec = input.ReadInt64();
          break;
        }
        case 48: {
          Cost = input.ReadBool();
          break;
        }
        case 56: {
          BuyCnts = input.ReadInt32();
          break;
        }
        case 80: {
          PlotComplete = input.ReadBool();
          break;
        }
        case 88: {
          FinishedCount = input.ReadInt32();
          break;
        }
        case 98:
        case 96: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
        case 114: {
          if (combateResult_ == null) {
            combateResult_ = new global::CombatInfo();
          }
          input.ReadMessage(combateResult_);
          break;
        }
        case 122: {
          lockInfos_.AddEntriesFrom(input, _repeated_lockInfos_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 章节数据
/// </summary>
public sealed partial class l2c_chapter_upd : pb::IMessage<l2c_chapter_upd> {
  private static readonly pb::MessageParser<l2c_chapter_upd> _parser = new pb::MessageParser<l2c_chapter_upd>(() => new l2c_chapter_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_chapter_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_upd(l2c_chapter_upd other) : this() {
    chapter_ = other.chapter_;
    diffcultly_ = other.diffcultly_;
    isCompeled_ = other.isCompeled_;
    curStageStars_ = other.curStageStars_;
    curStageTreasures_ = other.curStageTreasures_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_upd Clone() {
    return new l2c_chapter_upd(this);
  }

  /// <summary>Field number for the "chapter" field.</summary>
  public const int ChapterFieldNumber = 1;
  private int chapter_;
  /// <summary>
  /// 章节ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Chapter {
    get { return chapter_; }
    set {
      chapter_ = value;
    }
  }

  /// <summary>Field number for the "diffcultly" field.</summary>
  public const int DiffcultlyFieldNumber = 2;
  private int diffcultly_;
  /// <summary>
  /// 难度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Diffcultly {
    get { return diffcultly_; }
    set {
      diffcultly_ = value;
    }
  }

  /// <summary>Field number for the "is_compeled" field.</summary>
  public const int IsCompeledFieldNumber = 3;
  private bool isCompeled_;
  /// <summary>
  /// 是否通关此章节
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsCompeled {
    get { return isCompeled_; }
    set {
      isCompeled_ = value;
    }
  }

  /// <summary>Field number for the "cur_stage_stars" field.</summary>
  public const int CurStageStarsFieldNumber = 4;
  private int curStageStars_;
  /// <summary>
  /// 当前章节星星数	
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurStageStars {
    get { return curStageStars_; }
    set {
      curStageStars_ = value;
    }
  }

  /// <summary>Field number for the "cur_stage_treasures" field.</summary>
  public const int CurStageTreasuresFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_curStageTreasures_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> curStageTreasures_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 当前章节已领取的星星宝箱
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> CurStageTreasures {
    get { return curStageTreasures_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_chapter_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_chapter_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Chapter != other.Chapter) return false;
    if (Diffcultly != other.Diffcultly) return false;
    if (IsCompeled != other.IsCompeled) return false;
    if (CurStageStars != other.CurStageStars) return false;
    if(!curStageTreasures_.Equals(other.curStageTreasures_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Chapter != 0) hash ^= Chapter.GetHashCode();
    if (Diffcultly != 0) hash ^= Diffcultly.GetHashCode();
    if (IsCompeled != false) hash ^= IsCompeled.GetHashCode();
    if (CurStageStars != 0) hash ^= CurStageStars.GetHashCode();
    hash ^= curStageTreasures_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Chapter != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Chapter);
    }
    if (Diffcultly != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Diffcultly);
    }
    if (IsCompeled != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsCompeled);
    }
    if (CurStageStars != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(CurStageStars);
    }
    curStageTreasures_.WriteTo(output, _repeated_curStageTreasures_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Chapter != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chapter);
    }
    if (Diffcultly != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diffcultly);
    }
    if (IsCompeled != false) {
      size += 1 + 1;
    }
    if (CurStageStars != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurStageStars);
    }
    size += curStageTreasures_.CalculateSize(_repeated_curStageTreasures_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_chapter_upd other) {
    if (other == null) {
      return;
    }
    if (other.Chapter != 0) {
      Chapter = other.Chapter;
    }
    if (other.Diffcultly != 0) {
      Diffcultly = other.Diffcultly;
    }
    if (other.IsCompeled != false) {
      IsCompeled = other.IsCompeled;
    }
    if (other.CurStageStars != 0) {
      CurStageStars = other.CurStageStars;
    }
    curStageTreasures_.Add(other.curStageTreasures_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Chapter = input.ReadInt32();
          break;
        }
        case 16: {
          Diffcultly = input.ReadInt32();
          break;
        }
        case 24: {
          IsCompeled = input.ReadBool();
          break;
        }
        case 32: {
          CurStageStars = input.ReadInt32();
          break;
        }
        case 42:
        case 40: {
          curStageTreasures_.AddEntriesFrom(input, _repeated_curStageTreasures_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_chapter_init : pb::IMessage<c2l_chapter_init> {
  private static readonly pb::MessageParser<c2l_chapter_init> _parser = new pb::MessageParser<c2l_chapter_init>(() => new c2l_chapter_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_chapter_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_chapter_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_chapter_init(c2l_chapter_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_chapter_init Clone() {
    return new c2l_chapter_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_chapter_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_chapter_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_chapter_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_chapter_init : pb::IMessage<l2c_chapter_init> {
  private static readonly pb::MessageParser<l2c_chapter_init> _parser = new pb::MessageParser<l2c_chapter_init>(() => new l2c_chapter_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_chapter_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_init(l2c_chapter_init other) : this() {
    chapterInfo_ = other.chapterInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_init Clone() {
    return new l2c_chapter_init(this);
  }

  /// <summary>Field number for the "chapter_info" field.</summary>
  public const int ChapterInfoFieldNumber = 2;
  private static readonly pb::FieldCodec<global::l2c_chapter_upd> _repeated_chapterInfo_codec
      = pb::FieldCodec.ForMessage(18, global::l2c_chapter_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_chapter_upd> chapterInfo_ = new pbc::RepeatedField<global::l2c_chapter_upd>();
  /// <summary>
  /// 章节数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_chapter_upd> ChapterInfo {
    get { return chapterInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_chapter_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_chapter_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!chapterInfo_.Equals(other.chapterInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= chapterInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    chapterInfo_.WriteTo(output, _repeated_chapterInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += chapterInfo_.CalculateSize(_repeated_chapterInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_chapter_init other) {
    if (other == null) {
      return;
    }
    chapterInfo_.Add(other.chapterInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          chapterInfo_.AddEntriesFrom(input, _repeated_chapterInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 主线故事初始化
/// </summary>
public sealed partial class l2c_story_init : pb::IMessage<l2c_story_init> {
  private static readonly pb::MessageParser<l2c_story_init> _parser = new pb::MessageParser<l2c_story_init>(() => new l2c_story_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_story_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_init(l2c_story_init other) : this() {
    stageInfo_ = other.stageInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_init Clone() {
    return new l2c_story_init(this);
  }

  /// <summary>Field number for the "stage_info" field.</summary>
  public const int StageInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_story_upd> _repeated_stageInfo_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_story_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_story_upd> stageInfo_ = new pbc::RepeatedField<global::l2c_story_upd>();
  /// <summary>
  /// 关卡数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_story_upd> StageInfo {
    get { return stageInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_story_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_story_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!stageInfo_.Equals(other.stageInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= stageInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    stageInfo_.WriteTo(output, _repeated_stageInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += stageInfo_.CalculateSize(_repeated_stageInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_story_init other) {
    if (other == null) {
      return;
    }
    stageInfo_.Add(other.stageInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          stageInfo_.AddEntriesFrom(input, _repeated_stageInfo_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_story_stage_init : pb::IMessage<c2l_story_stage_init> {
  private static readonly pb::MessageParser<c2l_story_stage_init> _parser = new pb::MessageParser<c2l_story_stage_init>(() => new c2l_story_stage_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_story_stage_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_stage_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_stage_init(c2l_story_stage_init other) : this() {
    stageIds_ = other.stageIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_stage_init Clone() {
    return new c2l_story_stage_init(this);
  }

  /// <summary>Field number for the "stage_ids" field.</summary>
  public const int StageIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_stageIds_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> stageIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> StageIds {
    get { return stageIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_story_stage_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_story_stage_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!stageIds_.Equals(other.stageIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= stageIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    stageIds_.WriteTo(output, _repeated_stageIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += stageIds_.CalculateSize(_repeated_stageIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_story_stage_init other) {
    if (other == null) {
      return;
    }
    stageIds_.Add(other.stageIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          stageIds_.AddEntriesFrom(input, _repeated_stageIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_story_stage_init : pb::IMessage<l2c_story_stage_init> {
  private static readonly pb::MessageParser<l2c_story_stage_init> _parser = new pb::MessageParser<l2c_story_stage_init>(() => new l2c_story_stage_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_story_stage_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_stage_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_stage_init(l2c_story_stage_init other) : this() {
    stageInfo_ = other.stageInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_stage_init Clone() {
    return new l2c_story_stage_init(this);
  }

  /// <summary>Field number for the "stage_info" field.</summary>
  public const int StageInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_story_upd> _repeated_stageInfo_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_story_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_story_upd> stageInfo_ = new pbc::RepeatedField<global::l2c_story_upd>();
  /// <summary>
  /// 关卡数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_story_upd> StageInfo {
    get { return stageInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_story_stage_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_story_stage_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!stageInfo_.Equals(other.stageInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= stageInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    stageInfo_.WriteTo(output, _repeated_stageInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += stageInfo_.CalculateSize(_repeated_stageInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_story_stage_init other) {
    if (other == null) {
      return;
    }
    stageInfo_.Add(other.stageInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          stageInfo_.AddEntriesFrom(input, _repeated_stageInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 主线关卡开始
/// </summary>
public sealed partial class c2l_story_start : pb::IMessage<c2l_story_start> {
  private static readonly pb::MessageParser<c2l_story_start> _parser = new pb::MessageParser<c2l_story_start>(() => new c2l_story_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_story_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_start(c2l_story_start other) : this() {
    stageId_ = other.stageId_;
    randomInfo_ = other.randomInfo_ != null ? other.randomInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_start Clone() {
    return new c2l_story_start(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "random_info" field.</summary>
  public const int RandomInfoFieldNumber = 2;
  private global::RandomStageIndex randomInfo_;
  /// <summary>
  /// 随机关卡信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RandomStageIndex RandomInfo {
    get { return randomInfo_; }
    set {
      randomInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_story_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_story_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (!object.Equals(RandomInfo, other.RandomInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (randomInfo_ != null) hash ^= RandomInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (randomInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(RandomInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (randomInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_story_start other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.randomInfo_ != null) {
      if (randomInfo_ == null) {
        randomInfo_ = new global::RandomStageIndex();
      }
      RandomInfo.MergeFrom(other.RandomInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 18: {
          if (randomInfo_ == null) {
            randomInfo_ = new global::RandomStageIndex();
          }
          input.ReadMessage(randomInfo_);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_story_start : pb::IMessage<l2c_story_start> {
  private static readonly pb::MessageParser<l2c_story_start> _parser = new pb::MessageParser<l2c_story_start>(() => new l2c_story_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_story_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_start(l2c_story_start other) : this() {
    stageId_ = other.stageId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_start Clone() {
    return new l2c_story_start(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private global::StageStartResult result_ = 0;
  /// <summary>
  /// 关卡开始结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StageStartResult Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_story_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_story_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (Result != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_story_start other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          result_ = (global::StageStartResult) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 主线关卡结果
/// </summary>
public sealed partial class c2l_story_result : pb::IMessage<c2l_story_result> {
  private static readonly pb::MessageParser<c2l_story_result> _parser = new pb::MessageParser<c2l_story_result>(() => new c2l_story_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_story_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_result(c2l_story_result other) : this() {
    stageId_ = other.stageId_;
    plotComplete_ = other.plotComplete_;
    finshedCount_ = other.finshedCount_;
    nodes_ = other.nodes_.Clone();
    mutexNodes_ = other.mutexNodes_.Clone();
    randomInfo_ = other.randomInfo_ != null ? other.randomInfo_.Clone() : null;
    combateResult_ = other.combateResult_ != null ? other.combateResult_.Clone() : null;
    settlement_ = other.settlement_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_result Clone() {
    return new c2l_story_result(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡ID（都发）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "plot_complete" field.</summary>
  public const int PlotCompleteFieldNumber = 2;
  private bool plotComplete_;
  /// <summary>
  /// 剧情完成状态（剧情发）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool PlotComplete {
    get { return plotComplete_; }
    set {
      plotComplete_ = value;
    }
  }

  /// <summary>Field number for the "finshed_count" field.</summary>
  public const int FinshedCountFieldNumber = 3;
  private int finshedCount_;
  /// <summary>
  /// 节点完成数量（剧情发）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FinshedCount {
    get { return finshedCount_; }
    set {
      finshedCount_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 剧情节点（剧情发）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  /// <summary>Field number for the "mutex_nodes" field.</summary>
  public const int MutexNodesFieldNumber = 5;
  private static readonly pb::FieldCodec<global::MutexNode> _repeated_mutexNodes_codec
      = pb::FieldCodec.ForMessage(42, global::MutexNode.Parser);
  private readonly pbc::RepeatedField<global::MutexNode> mutexNodes_ = new pbc::RepeatedField<global::MutexNode>();
  /// <summary>
  /// 互斥节点集合（剧情发）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MutexNode> MutexNodes {
    get { return mutexNodes_; }
  }

  /// <summary>Field number for the "random_info" field.</summary>
  public const int RandomInfoFieldNumber = 7;
  private global::RandomStageIndex randomInfo_;
  /// <summary>
  /// 随机关卡信息（随机战斗发）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RandomStageIndex RandomInfo {
    get { return randomInfo_; }
    set {
      randomInfo_ = value;
    }
  }

  /// <summary>Field number for the "combate_result" field.</summary>
  public const int CombateResultFieldNumber = 14;
  private global::CombatInfo combateResult_;
  /// <summary>
  /// 战斗信息（战斗发）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CombatInfo CombateResult {
    get { return combateResult_; }
    set {
      combateResult_ = value;
    }
  }

  /// <summary>Field number for the "settlement" field.</summary>
  public const int SettlementFieldNumber = 15;
  private int settlement_;
  /// <summary>
  /// 結算 1、戰鬥 2.劇情（都发）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Settlement {
    get { return settlement_; }
    set {
      settlement_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_story_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_story_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (PlotComplete != other.PlotComplete) return false;
    if (FinshedCount != other.FinshedCount) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    if(!mutexNodes_.Equals(other.mutexNodes_)) return false;
    if (!object.Equals(RandomInfo, other.RandomInfo)) return false;
    if (!object.Equals(CombateResult, other.CombateResult)) return false;
    if (Settlement != other.Settlement) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (PlotComplete != false) hash ^= PlotComplete.GetHashCode();
    if (FinshedCount != 0) hash ^= FinshedCount.GetHashCode();
    hash ^= nodes_.GetHashCode();
    hash ^= mutexNodes_.GetHashCode();
    if (randomInfo_ != null) hash ^= RandomInfo.GetHashCode();
    if (combateResult_ != null) hash ^= CombateResult.GetHashCode();
    if (Settlement != 0) hash ^= Settlement.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (PlotComplete != false) {
      output.WriteRawTag(16);
      output.WriteBool(PlotComplete);
    }
    if (FinshedCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(FinshedCount);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    mutexNodes_.WriteTo(output, _repeated_mutexNodes_codec);
    if (randomInfo_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(RandomInfo);
    }
    if (combateResult_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(CombateResult);
    }
    if (Settlement != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(Settlement);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (PlotComplete != false) {
      size += 1 + 1;
    }
    if (FinshedCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinshedCount);
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    size += mutexNodes_.CalculateSize(_repeated_mutexNodes_codec);
    if (randomInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomInfo);
    }
    if (combateResult_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CombateResult);
    }
    if (Settlement != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Settlement);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_story_result other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.PlotComplete != false) {
      PlotComplete = other.PlotComplete;
    }
    if (other.FinshedCount != 0) {
      FinshedCount = other.FinshedCount;
    }
    nodes_.Add(other.nodes_);
    mutexNodes_.Add(other.mutexNodes_);
    if (other.randomInfo_ != null) {
      if (randomInfo_ == null) {
        randomInfo_ = new global::RandomStageIndex();
      }
      RandomInfo.MergeFrom(other.RandomInfo);
    }
    if (other.combateResult_ != null) {
      if (combateResult_ == null) {
        combateResult_ = new global::CombatInfo();
      }
      CombateResult.MergeFrom(other.CombateResult);
    }
    if (other.Settlement != 0) {
      Settlement = other.Settlement;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          PlotComplete = input.ReadBool();
          break;
        }
        case 24: {
          FinshedCount = input.ReadInt32();
          break;
        }
        case 34:
        case 32: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
        case 42: {
          mutexNodes_.AddEntriesFrom(input, _repeated_mutexNodes_codec);
          break;
        }
        case 58: {
          if (randomInfo_ == null) {
            randomInfo_ = new global::RandomStageIndex();
          }
          input.ReadMessage(randomInfo_);
          break;
        }
        case 114: {
          if (combateResult_ == null) {
            combateResult_ = new global::CombatInfo();
          }
          input.ReadMessage(combateResult_);
          break;
        }
        case 120: {
          Settlement = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 主线故事奖励
/// </summary>
public sealed partial class l2c_story_reward : pb::IMessage<l2c_story_reward> {
  private static readonly pb::MessageParser<l2c_story_reward> _parser = new pb::MessageParser<l2c_story_reward>(() => new l2c_story_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_story_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_reward(l2c_story_reward other) : this() {
    elements_ = other.elements_.Clone();
    characterLevel_ = other.characterLevel_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_reward Clone() {
    return new l2c_story_reward(this);
  }

  /// <summary>Field number for the "elements" field.</summary>
  public const int ElementsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_elements_codec
      = pb::FieldCodec.ForMessage(10, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> elements_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励游戏元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Elements {
    get { return elements_; }
  }

  /// <summary>Field number for the "character_level" field.</summary>
  public const int CharacterLevelFieldNumber = 2;
  private static readonly pb::FieldCodec<global::l2c_story_reward.Types.CharacterLevel> _repeated_characterLevel_codec
      = pb::FieldCodec.ForMessage(18, global::l2c_story_reward.Types.CharacterLevel.Parser);
  private readonly pbc::RepeatedField<global::l2c_story_reward.Types.CharacterLevel> characterLevel_ = new pbc::RepeatedField<global::l2c_story_reward.Types.CharacterLevel>();
  /// <summary>
  /// 角色等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_story_reward.Types.CharacterLevel> CharacterLevel {
    get { return characterLevel_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_story_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_story_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!elements_.Equals(other.elements_)) return false;
    if(!characterLevel_.Equals(other.characterLevel_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= elements_.GetHashCode();
    hash ^= characterLevel_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    elements_.WriteTo(output, _repeated_elements_codec);
    characterLevel_.WriteTo(output, _repeated_characterLevel_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += elements_.CalculateSize(_repeated_elements_codec);
    size += characterLevel_.CalculateSize(_repeated_characterLevel_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_story_reward other) {
    if (other == null) {
      return;
    }
    elements_.Add(other.elements_);
    characterLevel_.Add(other.characterLevel_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          elements_.AddEntriesFrom(input, _repeated_elements_codec);
          break;
        }
        case 18: {
          characterLevel_.AddEntriesFrom(input, _repeated_characterLevel_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_story_reward message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class CharacterLevel : pb::IMessage<CharacterLevel> {
      private static readonly pb::MessageParser<CharacterLevel> _parser = new pb::MessageParser<CharacterLevel>(() => new CharacterLevel());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<CharacterLevel> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_story_reward.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterLevel() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterLevel(CharacterLevel other) : this() {
        id_ = other.id_;
        level_ = other.level_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterLevel Clone() {
        return new CharacterLevel(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 2;
      private int level_;
      /// <summary>
      /// 等级
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Level {
        get { return level_; }
        set {
          level_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as CharacterLevel);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(CharacterLevel other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Level != other.Level) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Level != 0) hash ^= Level.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Level != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Level);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Level != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(CharacterLevel other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Level != 0) {
          Level = other.Level;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Level = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

/// <summary>
/// 主线星星宝箱
/// </summary>
public sealed partial class c2l_star_treasure : pb::IMessage<c2l_star_treasure> {
  private static readonly pb::MessageParser<c2l_star_treasure> _parser = new pb::MessageParser<c2l_star_treasure>(() => new c2l_star_treasure());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_star_treasure> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_star_treasure() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_star_treasure(c2l_star_treasure other) : this() {
    chapter_ = other.chapter_;
    diffcultly_ = other.diffcultly_;
    treasureNum_ = other.treasureNum_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_star_treasure Clone() {
    return new c2l_star_treasure(this);
  }

  /// <summary>Field number for the "chapter" field.</summary>
  public const int ChapterFieldNumber = 1;
  private int chapter_;
  /// <summary>
  /// 章节
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Chapter {
    get { return chapter_; }
    set {
      chapter_ = value;
    }
  }

  /// <summary>Field number for the "diffcultly" field.</summary>
  public const int DiffcultlyFieldNumber = 2;
  private int diffcultly_;
  /// <summary>
  /// 难度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Diffcultly {
    get { return diffcultly_; }
    set {
      diffcultly_ = value;
    }
  }

  /// <summary>Field number for the "treasure_num" field.</summary>
  public const int TreasureNumFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_treasureNum_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> treasureNum_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 宝箱数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> TreasureNum {
    get { return treasureNum_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_star_treasure);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_star_treasure other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Chapter != other.Chapter) return false;
    if (Diffcultly != other.Diffcultly) return false;
    if(!treasureNum_.Equals(other.treasureNum_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Chapter != 0) hash ^= Chapter.GetHashCode();
    if (Diffcultly != 0) hash ^= Diffcultly.GetHashCode();
    hash ^= treasureNum_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Chapter != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Chapter);
    }
    if (Diffcultly != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Diffcultly);
    }
    treasureNum_.WriteTo(output, _repeated_treasureNum_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Chapter != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chapter);
    }
    if (Diffcultly != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diffcultly);
    }
    size += treasureNum_.CalculateSize(_repeated_treasureNum_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_star_treasure other) {
    if (other == null) {
      return;
    }
    if (other.Chapter != 0) {
      Chapter = other.Chapter;
    }
    if (other.Diffcultly != 0) {
      Diffcultly = other.Diffcultly;
    }
    treasureNum_.Add(other.treasureNum_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Chapter = input.ReadInt32();
          break;
        }
        case 16: {
          Diffcultly = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          treasureNum_.AddEntriesFrom(input, _repeated_treasureNum_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_star_treasure : pb::IMessage<l2c_star_treasure> {
  private static readonly pb::MessageParser<l2c_star_treasure> _parser = new pb::MessageParser<l2c_star_treasure>(() => new l2c_star_treasure());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_star_treasure> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_star_treasure() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_star_treasure(l2c_star_treasure other) : this() {
    treasureId_ = other.treasureId_.Clone();
    eles_ = other.eles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_star_treasure Clone() {
    return new l2c_star_treasure(this);
  }

  /// <summary>Field number for the "treasure_id" field.</summary>
  public const int TreasureIdFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_treasureId_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> treasureId_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 宝箱ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> TreasureId {
    get { return treasureId_; }
  }

  /// <summary>Field number for the "eles" field.</summary>
  public const int ElesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_eles_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> eles_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励游戏元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Eles {
    get { return eles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_star_treasure);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_star_treasure other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!treasureId_.Equals(other.treasureId_)) return false;
    if(!eles_.Equals(other.eles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= treasureId_.GetHashCode();
    hash ^= eles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    treasureId_.WriteTo(output, _repeated_treasureId_codec);
    eles_.WriteTo(output, _repeated_eles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += treasureId_.CalculateSize(_repeated_treasureId_codec);
    size += eles_.CalculateSize(_repeated_eles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_star_treasure other) {
    if (other == null) {
      return;
    }
    treasureId_.Add(other.treasureId_);
    eles_.Add(other.eles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          treasureId_.AddEntriesFrom(input, _repeated_treasureId_codec);
          break;
        }
        case 18: {
          eles_.AddEntriesFrom(input, _repeated_eles_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 扫荡
/// </summary>
public sealed partial class c2l_story_fast : pb::IMessage<c2l_story_fast> {
  private static readonly pb::MessageParser<c2l_story_fast> _parser = new pb::MessageParser<c2l_story_fast>(() => new c2l_story_fast());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_story_fast> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_fast() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_fast(c2l_story_fast other) : this() {
    stageId_ = other.stageId_;
    times_ = other.times_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_fast Clone() {
    return new c2l_story_fast(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int TimesFieldNumber = 2;
  private int times_;
  /// <summary>
  /// 次数(>=1)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Times {
    get { return times_; }
    set {
      times_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_story_fast);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_story_fast other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (Times != other.Times) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (Times != 0) hash ^= Times.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (Times != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Times);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (Times != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_story_fast other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.Times != 0) {
      Times = other.Times;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          Times = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_story_fast : pb::IMessage<l2c_story_fast> {
  private static readonly pb::MessageParser<l2c_story_fast> _parser = new pb::MessageParser<l2c_story_fast>(() => new l2c_story_fast());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_story_fast> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_fast() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_fast(l2c_story_fast other) : this() {
    elements_ = other.elements_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_story_fast Clone() {
    return new l2c_story_fast(this);
  }

  /// <summary>Field number for the "elements" field.</summary>
  public const int ElementsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_story_reward> _repeated_elements_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_story_reward.Parser);
  private readonly pbc::RepeatedField<global::l2c_story_reward> elements_ = new pbc::RepeatedField<global::l2c_story_reward>();
  /// <summary>
  /// 结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_story_reward> Elements {
    get { return elements_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_story_fast);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_story_fast other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!elements_.Equals(other.elements_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= elements_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    elements_.WriteTo(output, _repeated_elements_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += elements_.CalculateSize(_repeated_elements_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_story_fast other) {
    if (other == null) {
      return;
    }
    elements_.Add(other.elements_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          elements_.AddEntriesFrom(input, _repeated_elements_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 主线关卡次数
/// </summary>
public sealed partial class c2l_story_add_cnts : pb::IMessage<c2l_story_add_cnts> {
  private static readonly pb::MessageParser<c2l_story_add_cnts> _parser = new pb::MessageParser<c2l_story_add_cnts>(() => new c2l_story_add_cnts());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_story_add_cnts> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_add_cnts() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_add_cnts(c2l_story_add_cnts other) : this() {
    storyId_ = other.storyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_story_add_cnts Clone() {
    return new c2l_story_add_cnts(this);
  }

  /// <summary>Field number for the "story_id" field.</summary>
  public const int StoryIdFieldNumber = 1;
  private int storyId_;
  /// <summary>
  /// 购买的关卡
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StoryId {
    get { return storyId_; }
    set {
      storyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_story_add_cnts);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_story_add_cnts other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StoryId != other.StoryId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StoryId != 0) hash ^= StoryId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StoryId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StoryId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StoryId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StoryId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_story_add_cnts other) {
    if (other == null) {
      return;
    }
    if (other.StoryId != 0) {
      StoryId = other.StoryId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StoryId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 强化
/// </summary>
public sealed partial class c2l_strengthen_equipment : pb::IMessage<c2l_strengthen_equipment> {
  private static readonly pb::MessageParser<c2l_strengthen_equipment> _parser = new pb::MessageParser<c2l_strengthen_equipment>(() => new c2l_strengthen_equipment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_strengthen_equipment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_strengthen_equipment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_strengthen_equipment(c2l_strengthen_equipment other) : this() {
    opType_ = other.opType_;
    equipmentId_ = other.equipmentId_;
    consumables_ = other.consumables_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_strengthen_equipment Clone() {
    return new c2l_strengthen_equipment(this);
  }

  /// <summary>Field number for the "op_type" field.</summary>
  public const int OpTypeFieldNumber = 1;
  private global::c2l_strengthen_equipment.Types.Type opType_ = 0;
  /// <summary>
  /// 操作类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::c2l_strengthen_equipment.Types.Type OpType {
    get { return opType_; }
    set {
      opType_ = value;
    }
  }

  /// <summary>Field number for the "equipment_id" field.</summary>
  public const int EquipmentIdFieldNumber = 2;
  private int equipmentId_;
  /// <summary>
  /// 被强化的装备ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EquipmentId {
    get { return equipmentId_; }
    set {
      equipmentId_ = value;
    }
  }

  /// <summary>Field number for the "consumables" field.</summary>
  public const int ConsumablesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::c2l_strengthen_equipment.Types.Consumable> _repeated_consumables_codec
      = pb::FieldCodec.ForMessage(26, global::c2l_strengthen_equipment.Types.Consumable.Parser);
  private readonly pbc::RepeatedField<global::c2l_strengthen_equipment.Types.Consumable> consumables_ = new pbc::RepeatedField<global::c2l_strengthen_equipment.Types.Consumable>();
  /// <summary>
  /// 指定消耗(升经验用)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::c2l_strengthen_equipment.Types.Consumable> Consumables {
    get { return consumables_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_strengthen_equipment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_strengthen_equipment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OpType != other.OpType) return false;
    if (EquipmentId != other.EquipmentId) return false;
    if(!consumables_.Equals(other.consumables_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (OpType != 0) hash ^= OpType.GetHashCode();
    if (EquipmentId != 0) hash ^= EquipmentId.GetHashCode();
    hash ^= consumables_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (OpType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) OpType);
    }
    if (EquipmentId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(EquipmentId);
    }
    consumables_.WriteTo(output, _repeated_consumables_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (OpType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OpType);
    }
    if (EquipmentId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipmentId);
    }
    size += consumables_.CalculateSize(_repeated_consumables_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_strengthen_equipment other) {
    if (other == null) {
      return;
    }
    if (other.OpType != 0) {
      OpType = other.OpType;
    }
    if (other.EquipmentId != 0) {
      EquipmentId = other.EquipmentId;
    }
    consumables_.Add(other.consumables_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          opType_ = (global::c2l_strengthen_equipment.Types.Type) input.ReadEnum();
          break;
        }
        case 16: {
          EquipmentId = input.ReadInt32();
          break;
        }
        case 26: {
          consumables_.AddEntriesFrom(input, _repeated_consumables_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_strengthen_equipment message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      /// <summary>
      /// 升级经验
      /// </summary>
      [pbr::OriginalName("STRENGTHEN_TYPE_RAISE_EXP")] StrengthenTypeRaiseExp = 0,
      /// <summary>
      /// 升星
      /// </summary>
      [pbr::OriginalName("STRENGTHEN_TYPE_RAISE_STAR")] StrengthenTypeRaiseStar = 1,
      /// <summary>
      /// 升阶
      /// </summary>
      [pbr::OriginalName("STRENGTHEN_TYPE_RAISE_STAGE")] StrengthenTypeRaiseStage = 2,
    }

    public sealed partial class Consumable : pb::IMessage<Consumable> {
      private static readonly pb::MessageParser<Consumable> _parser = new pb::MessageParser<Consumable>(() => new Consumable());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Consumable> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_strengthen_equipment.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable(Consumable other) : this() {
        itemId_ = other.itemId_;
        itemCount_ = other.itemCount_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable Clone() {
        return new Consumable(this);
      }

      /// <summary>Field number for the "item_id" field.</summary>
      public const int ItemIdFieldNumber = 1;
      private int itemId_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int ItemId {
        get { return itemId_; }
        set {
          itemId_ = value;
        }
      }

      /// <summary>Field number for the "item_count" field.</summary>
      public const int ItemCountFieldNumber = 2;
      private int itemCount_;
      /// <summary>
      /// 数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int ItemCount {
        get { return itemCount_; }
        set {
          itemCount_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Consumable);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Consumable other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ItemId != other.ItemId) return false;
        if (ItemCount != other.ItemCount) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (ItemId != 0) hash ^= ItemId.GetHashCode();
        if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (ItemId != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(ItemId);
        }
        if (ItemCount != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(ItemCount);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (ItemId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
        }
        if (ItemCount != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Consumable other) {
        if (other == null) {
          return;
        }
        if (other.ItemId != 0) {
          ItemId = other.ItemId;
        }
        if (other.ItemCount != 0) {
          ItemCount = other.ItemCount;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ItemId = input.ReadInt32();
              break;
            }
            case 16: {
              ItemCount = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class l2c_strengthen_equipment : pb::IMessage<l2c_strengthen_equipment> {
  private static readonly pb::MessageParser<l2c_strengthen_equipment> _parser = new pb::MessageParser<l2c_strengthen_equipment>(() => new l2c_strengthen_equipment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_strengthen_equipment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_strengthen_equipment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_strengthen_equipment(l2c_strengthen_equipment other) : this() {
    equipmentId_ = other.equipmentId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_strengthen_equipment Clone() {
    return new l2c_strengthen_equipment(this);
  }

  /// <summary>Field number for the "equipment_id" field.</summary>
  public const int EquipmentIdFieldNumber = 1;
  private int equipmentId_;
  /// <summary>
  /// 被强化的装备ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EquipmentId {
    get { return equipmentId_; }
    set {
      equipmentId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private global::l2c_strengthen_equipment.Types.Result result_ = 0;
  /// <summary>
  /// 强化结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_strengthen_equipment.Types.Result Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_strengthen_equipment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_strengthen_equipment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EquipmentId != other.EquipmentId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EquipmentId != 0) hash ^= EquipmentId.GetHashCode();
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EquipmentId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(EquipmentId);
    }
    if (Result != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EquipmentId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipmentId);
    }
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_strengthen_equipment other) {
    if (other == null) {
      return;
    }
    if (other.EquipmentId != 0) {
      EquipmentId = other.EquipmentId;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EquipmentId = input.ReadInt32();
          break;
        }
        case 16: {
          result_ = (global::l2c_strengthen_equipment.Types.Result) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_strengthen_equipment message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Result {
      /// <summary>
      /// 成功
      /// </summary>
      [pbr::OriginalName("STRENGTHEN_RESULT_SUCCEED")] StrengthenResultSucceed = 0,
      /// <summary>
      /// 消耗品不足
      /// </summary>
      [pbr::OriginalName("STRENGTHEN_RESULT_CONSUMABLES_DEFICIENCY")] StrengthenResultConsumablesDeficiency = 1,
    }

  }
  #endregion

}

/// <summary>
/// 分解
/// </summary>
public sealed partial class c2l_sublime_equipment : pb::IMessage<c2l_sublime_equipment> {
  private static readonly pb::MessageParser<c2l_sublime_equipment> _parser = new pb::MessageParser<c2l_sublime_equipment>(() => new c2l_sublime_equipment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_sublime_equipment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sublime_equipment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sublime_equipment(c2l_sublime_equipment other) : this() {
    equipments_ = other.equipments_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sublime_equipment Clone() {
    return new c2l_sublime_equipment(this);
  }

  /// <summary>Field number for the "equipments" field.</summary>
  public const int EquipmentsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::c2l_sublime_equipment.Types.Equipment> _repeated_equipments_codec
      = pb::FieldCodec.ForMessage(10, global::c2l_sublime_equipment.Types.Equipment.Parser);
  private readonly pbc::RepeatedField<global::c2l_sublime_equipment.Types.Equipment> equipments_ = new pbc::RepeatedField<global::c2l_sublime_equipment.Types.Equipment>();
  /// <summary>
  /// 被分解的装备
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::c2l_sublime_equipment.Types.Equipment> Equipments {
    get { return equipments_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_sublime_equipment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_sublime_equipment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!equipments_.Equals(other.equipments_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= equipments_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    equipments_.WriteTo(output, _repeated_equipments_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += equipments_.CalculateSize(_repeated_equipments_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_sublime_equipment other) {
    if (other == null) {
      return;
    }
    equipments_.Add(other.equipments_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          equipments_.AddEntriesFrom(input, _repeated_equipments_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_sublime_equipment message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Equipment : pb::IMessage<Equipment> {
      private static readonly pb::MessageParser<Equipment> _parser = new pb::MessageParser<Equipment>(() => new Equipment());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Equipment> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_sublime_equipment.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Equipment() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Equipment(Equipment other) : this() {
        equipmentId_ = other.equipmentId_;
        equipmentCount_ = other.equipmentCount_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Equipment Clone() {
        return new Equipment(this);
      }

      /// <summary>Field number for the "equipment_id" field.</summary>
      public const int EquipmentIdFieldNumber = 1;
      private int equipmentId_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int EquipmentId {
        get { return equipmentId_; }
        set {
          equipmentId_ = value;
        }
      }

      /// <summary>Field number for the "equipment_count" field.</summary>
      public const int EquipmentCountFieldNumber = 2;
      private int equipmentCount_;
      /// <summary>
      /// 数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int EquipmentCount {
        get { return equipmentCount_; }
        set {
          equipmentCount_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Equipment);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Equipment other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (EquipmentId != other.EquipmentId) return false;
        if (EquipmentCount != other.EquipmentCount) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (EquipmentId != 0) hash ^= EquipmentId.GetHashCode();
        if (EquipmentCount != 0) hash ^= EquipmentCount.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (EquipmentId != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(EquipmentId);
        }
        if (EquipmentCount != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(EquipmentCount);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (EquipmentId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipmentId);
        }
        if (EquipmentCount != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipmentCount);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Equipment other) {
        if (other == null) {
          return;
        }
        if (other.EquipmentId != 0) {
          EquipmentId = other.EquipmentId;
        }
        if (other.EquipmentCount != 0) {
          EquipmentCount = other.EquipmentCount;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              EquipmentId = input.ReadInt32();
              break;
            }
            case 16: {
              EquipmentCount = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class l2c_sublime_equipment : pb::IMessage<l2c_sublime_equipment> {
  private static readonly pb::MessageParser<l2c_sublime_equipment> _parser = new pb::MessageParser<l2c_sublime_equipment>(() => new l2c_sublime_equipment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_sublime_equipment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sublime_equipment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sublime_equipment(l2c_sublime_equipment other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sublime_equipment Clone() {
    return new l2c_sublime_equipment(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private global::l2c_sublime_equipment.Types.Result result_ = 0;
  /// <summary>
  /// 结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_sublime_equipment.Types.Result Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_sublime_equipment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_sublime_equipment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_sublime_equipment other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          result_ = (global::l2c_sublime_equipment.Types.Result) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_sublime_equipment message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Result {
      /// <summary>
      /// 成功
      /// </summary>
      [pbr::OriginalName("SUBLIME_RESULT_SUCCEED")] SublimeResultSucceed = 0,
      /// <summary>
      /// 消耗品不足
      /// </summary>
      [pbr::OriginalName("SUBLIME_RESULT_CONSUMABLES_DEFICIENCY")] SublimeResultConsumablesDeficiency = 1,
    }

  }
  #endregion

}

/// <summary>
/// 合成
/// </summary>
public sealed partial class c2l_synthesize_equipment : pb::IMessage<c2l_synthesize_equipment> {
  private static readonly pb::MessageParser<c2l_synthesize_equipment> _parser = new pb::MessageParser<c2l_synthesize_equipment>(() => new c2l_synthesize_equipment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_synthesize_equipment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_synthesize_equipment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_synthesize_equipment(c2l_synthesize_equipment other) : this() {
    equipmentId_ = other.equipmentId_;
    tailorIdx_ = other.tailorIdx_;
    consumables_ = other.consumables_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_synthesize_equipment Clone() {
    return new c2l_synthesize_equipment(this);
  }

  /// <summary>Field number for the "equipment_id" field.</summary>
  public const int EquipmentIdFieldNumber = 1;
  private int equipmentId_;
  /// <summary>
  /// 需要合成的装备ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EquipmentId {
    get { return equipmentId_; }
    set {
      equipmentId_ = value;
    }
  }

  /// <summary>Field number for the "tailor_idx" field.</summary>
  public const int TailorIdxFieldNumber = 2;
  private int tailorIdx_;
  /// <summary>
  /// 裁缝索引 [1-9]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TailorIdx {
    get { return tailorIdx_; }
    set {
      tailorIdx_ = value;
    }
  }

  /// <summary>Field number for the "consumables" field.</summary>
  public const int ConsumablesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::c2l_synthesize_equipment.Types.Consumable> _repeated_consumables_codec
      = pb::FieldCodec.ForMessage(26, global::c2l_synthesize_equipment.Types.Consumable.Parser);
  private readonly pbc::RepeatedField<global::c2l_synthesize_equipment.Types.Consumable> consumables_ = new pbc::RepeatedField<global::c2l_synthesize_equipment.Types.Consumable>();
  /// <summary>
  /// 附加物品(调整成功率)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::c2l_synthesize_equipment.Types.Consumable> Consumables {
    get { return consumables_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_synthesize_equipment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_synthesize_equipment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EquipmentId != other.EquipmentId) return false;
    if (TailorIdx != other.TailorIdx) return false;
    if(!consumables_.Equals(other.consumables_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EquipmentId != 0) hash ^= EquipmentId.GetHashCode();
    if (TailorIdx != 0) hash ^= TailorIdx.GetHashCode();
    hash ^= consumables_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EquipmentId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(EquipmentId);
    }
    if (TailorIdx != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TailorIdx);
    }
    consumables_.WriteTo(output, _repeated_consumables_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EquipmentId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipmentId);
    }
    if (TailorIdx != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TailorIdx);
    }
    size += consumables_.CalculateSize(_repeated_consumables_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_synthesize_equipment other) {
    if (other == null) {
      return;
    }
    if (other.EquipmentId != 0) {
      EquipmentId = other.EquipmentId;
    }
    if (other.TailorIdx != 0) {
      TailorIdx = other.TailorIdx;
    }
    consumables_.Add(other.consumables_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EquipmentId = input.ReadInt32();
          break;
        }
        case 16: {
          TailorIdx = input.ReadInt32();
          break;
        }
        case 26: {
          consumables_.AddEntriesFrom(input, _repeated_consumables_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_synthesize_equipment message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Consumable : pb::IMessage<Consumable> {
      private static readonly pb::MessageParser<Consumable> _parser = new pb::MessageParser<Consumable>(() => new Consumable());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Consumable> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_synthesize_equipment.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable(Consumable other) : this() {
        itemId_ = other.itemId_;
        itemCount_ = other.itemCount_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable Clone() {
        return new Consumable(this);
      }

      /// <summary>Field number for the "item_id" field.</summary>
      public const int ItemIdFieldNumber = 1;
      private int itemId_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int ItemId {
        get { return itemId_; }
        set {
          itemId_ = value;
        }
      }

      /// <summary>Field number for the "item_count" field.</summary>
      public const int ItemCountFieldNumber = 2;
      private int itemCount_;
      /// <summary>
      /// 数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int ItemCount {
        get { return itemCount_; }
        set {
          itemCount_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Consumable);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Consumable other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ItemId != other.ItemId) return false;
        if (ItemCount != other.ItemCount) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (ItemId != 0) hash ^= ItemId.GetHashCode();
        if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (ItemId != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(ItemId);
        }
        if (ItemCount != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(ItemCount);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (ItemId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
        }
        if (ItemCount != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Consumable other) {
        if (other == null) {
          return;
        }
        if (other.ItemId != 0) {
          ItemId = other.ItemId;
        }
        if (other.ItemCount != 0) {
          ItemCount = other.ItemCount;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ItemId = input.ReadInt32();
              break;
            }
            case 16: {
              ItemCount = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class l2c_synthesize_equipment : pb::IMessage<l2c_synthesize_equipment> {
  private static readonly pb::MessageParser<l2c_synthesize_equipment> _parser = new pb::MessageParser<l2c_synthesize_equipment>(() => new l2c_synthesize_equipment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_synthesize_equipment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_synthesize_equipment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_synthesize_equipment(l2c_synthesize_equipment other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_synthesize_equipment Clone() {
    return new l2c_synthesize_equipment(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private global::l2c_synthesize_equipment.Types.Result result_ = 0;
  /// <summary>
  /// 结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_synthesize_equipment.Types.Result Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_synthesize_equipment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_synthesize_equipment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_synthesize_equipment other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          result_ = (global::l2c_synthesize_equipment.Types.Result) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_synthesize_equipment message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Result {
      /// <summary>
      /// 小成功
      /// </summary>
      [pbr::OriginalName("SYNTHESIZE_RESULT_NORMAL_SUCCEED")] SynthesizeResultNormalSucceed = 0,
      /// <summary>
      /// 大成功
      /// </summary>
      [pbr::OriginalName("SYNTHESIZE_RESULT_BIG_SUCCEED")] SynthesizeResultBigSucceed = 1,
      /// <summary>
      /// 意外
      /// </summary>
      [pbr::OriginalName("SYNTHESIZE_RESULT_SURPRISE")] SynthesizeResultSurprise = 2,
      /// <summary>
      /// 合成失败返还
      /// </summary>
      [pbr::OriginalName("SYNTHESIZE_RESULT_NORMAL_FAILED")] SynthesizeResultNormalFailed = 3,
      /// <summary>
      /// 没有配方
      /// </summary>
      [pbr::OriginalName("SYNTHESIZE_RESULT_NO_FORMULA")] SynthesizeResultNoFormula = 4,
      /// <summary>
      /// 消耗品不足
      /// </summary>
      [pbr::OriginalName("SYNTHESIZE_RESULT_CONSUMABLES_DEFICIENCY")] SynthesizeResultConsumablesDeficiency = 5,
    }

  }
  #endregion

}

/// <summary>
/// 穿戴装备
/// </summary>
public sealed partial class c2l_equip_outfits : pb::IMessage<c2l_equip_outfits> {
  private static readonly pb::MessageParser<c2l_equip_outfits> _parser = new pb::MessageParser<c2l_equip_outfits>(() => new c2l_equip_outfits());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_equip_outfits> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_equip_outfits() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_equip_outfits(c2l_equip_outfits other) : this() {
    charOutfits_ = other.charOutfits_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_equip_outfits Clone() {
    return new c2l_equip_outfits(this);
  }

  /// <summary>Field number for the "char_outfits" field.</summary>
  public const int CharOutfitsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::c2l_equip_outfits.Types.Outfit> _repeated_charOutfits_codec
      = pb::FieldCodec.ForMessage(10, global::c2l_equip_outfits.Types.Outfit.Parser);
  private readonly pbc::RepeatedField<global::c2l_equip_outfits.Types.Outfit> charOutfits_ = new pbc::RepeatedField<global::c2l_equip_outfits.Types.Outfit>();
  /// <summary>
  /// 角色装备调整
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::c2l_equip_outfits.Types.Outfit> CharOutfits {
    get { return charOutfits_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_equip_outfits);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_equip_outfits other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!charOutfits_.Equals(other.charOutfits_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= charOutfits_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    charOutfits_.WriteTo(output, _repeated_charOutfits_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += charOutfits_.CalculateSize(_repeated_charOutfits_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_equip_outfits other) {
    if (other == null) {
      return;
    }
    charOutfits_.Add(other.charOutfits_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          charOutfits_.AddEntriesFrom(input, _repeated_charOutfits_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_equip_outfits message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Outfit : pb::IMessage<Outfit> {
      private static readonly pb::MessageParser<Outfit> _parser = new pb::MessageParser<Outfit>(() => new Outfit());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Outfit> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_equip_outfits.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Outfit() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Outfit(Outfit other) : this() {
        characterId_ = other.characterId_;
        firstHair_ = other.firstHair_;
        firstFace_ = other.firstFace_;
        firstDress_ = other.firstDress_;
        firstChest_ = other.firstChest_;
        firstCape_ = other.firstCape_;
        firstExtra_ = other.firstExtra_;
        secondHair_ = other.secondHair_;
        secondFace_ = other.secondFace_;
        secondDress_ = other.secondDress_;
        secondChest_ = other.secondChest_;
        secondCape_ = other.secondCape_;
        secondExtra_ = other.secondExtra_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Outfit Clone() {
        return new Outfit(this);
      }

      /// <summary>Field number for the "character_id" field.</summary>
      public const int CharacterIdFieldNumber = 1;
      private int characterId_;
      /// <summary>
      /// 角色ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CharacterId {
        get { return characterId_; }
        set {
          characterId_ = value;
        }
      }

      /// <summary>Field number for the "first_hair" field.</summary>
      public const int FirstHairFieldNumber = 6;
      private int firstHair_;
      /// <summary>
      /// 第一套
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstHair {
        get { return firstHair_; }
        set {
          firstHair_ = value;
        }
      }

      /// <summary>Field number for the "first_face" field.</summary>
      public const int FirstFaceFieldNumber = 7;
      private int firstFace_;
      /// <summary>
      /// 2脸
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstFace {
        get { return firstFace_; }
        set {
          firstFace_ = value;
        }
      }

      /// <summary>Field number for the "first_dress" field.</summary>
      public const int FirstDressFieldNumber = 8;
      private int firstDress_;
      /// <summary>
      /// 3衣服
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstDress {
        get { return firstDress_; }
        set {
          firstDress_ = value;
        }
      }

      /// <summary>Field number for the "first_chest" field.</summary>
      public const int FirstChestFieldNumber = 9;
      private int firstChest_;
      /// <summary>
      /// 4胸
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstChest {
        get { return firstChest_; }
        set {
          firstChest_ = value;
        }
      }

      /// <summary>Field number for the "first_cape" field.</summary>
      public const int FirstCapeFieldNumber = 10;
      private int firstCape_;
      /// <summary>
      /// 5背
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstCape {
        get { return firstCape_; }
        set {
          firstCape_ = value;
        }
      }

      /// <summary>Field number for the "first_extra" field.</summary>
      public const int FirstExtraFieldNumber = 11;
      private int firstExtra_;
      /// <summary>
      /// 6其他
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int FirstExtra {
        get { return firstExtra_; }
        set {
          firstExtra_ = value;
        }
      }

      /// <summary>Field number for the "second_hair" field.</summary>
      public const int SecondHairFieldNumber = 12;
      private int secondHair_;
      /// <summary>
      /// 第二套
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondHair {
        get { return secondHair_; }
        set {
          secondHair_ = value;
        }
      }

      /// <summary>Field number for the "second_face" field.</summary>
      public const int SecondFaceFieldNumber = 13;
      private int secondFace_;
      /// <summary>
      /// 2脸
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondFace {
        get { return secondFace_; }
        set {
          secondFace_ = value;
        }
      }

      /// <summary>Field number for the "second_dress" field.</summary>
      public const int SecondDressFieldNumber = 14;
      private int secondDress_;
      /// <summary>
      /// 3衣服
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondDress {
        get { return secondDress_; }
        set {
          secondDress_ = value;
        }
      }

      /// <summary>Field number for the "second_chest" field.</summary>
      public const int SecondChestFieldNumber = 15;
      private int secondChest_;
      /// <summary>
      /// 4胸
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondChest {
        get { return secondChest_; }
        set {
          secondChest_ = value;
        }
      }

      /// <summary>Field number for the "second_cape" field.</summary>
      public const int SecondCapeFieldNumber = 16;
      private int secondCape_;
      /// <summary>
      /// 5背
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondCape {
        get { return secondCape_; }
        set {
          secondCape_ = value;
        }
      }

      /// <summary>Field number for the "second_extra" field.</summary>
      public const int SecondExtraFieldNumber = 17;
      private int secondExtra_;
      /// <summary>
      /// 6其他 
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int SecondExtra {
        get { return secondExtra_; }
        set {
          secondExtra_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Outfit);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Outfit other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (CharacterId != other.CharacterId) return false;
        if (FirstHair != other.FirstHair) return false;
        if (FirstFace != other.FirstFace) return false;
        if (FirstDress != other.FirstDress) return false;
        if (FirstChest != other.FirstChest) return false;
        if (FirstCape != other.FirstCape) return false;
        if (FirstExtra != other.FirstExtra) return false;
        if (SecondHair != other.SecondHair) return false;
        if (SecondFace != other.SecondFace) return false;
        if (SecondDress != other.SecondDress) return false;
        if (SecondChest != other.SecondChest) return false;
        if (SecondCape != other.SecondCape) return false;
        if (SecondExtra != other.SecondExtra) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (CharacterId != 0) hash ^= CharacterId.GetHashCode();
        if (FirstHair != 0) hash ^= FirstHair.GetHashCode();
        if (FirstFace != 0) hash ^= FirstFace.GetHashCode();
        if (FirstDress != 0) hash ^= FirstDress.GetHashCode();
        if (FirstChest != 0) hash ^= FirstChest.GetHashCode();
        if (FirstCape != 0) hash ^= FirstCape.GetHashCode();
        if (FirstExtra != 0) hash ^= FirstExtra.GetHashCode();
        if (SecondHair != 0) hash ^= SecondHair.GetHashCode();
        if (SecondFace != 0) hash ^= SecondFace.GetHashCode();
        if (SecondDress != 0) hash ^= SecondDress.GetHashCode();
        if (SecondChest != 0) hash ^= SecondChest.GetHashCode();
        if (SecondCape != 0) hash ^= SecondCape.GetHashCode();
        if (SecondExtra != 0) hash ^= SecondExtra.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (CharacterId != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(CharacterId);
        }
        if (FirstHair != 0) {
          output.WriteRawTag(48);
          output.WriteInt32(FirstHair);
        }
        if (FirstFace != 0) {
          output.WriteRawTag(56);
          output.WriteInt32(FirstFace);
        }
        if (FirstDress != 0) {
          output.WriteRawTag(64);
          output.WriteInt32(FirstDress);
        }
        if (FirstChest != 0) {
          output.WriteRawTag(72);
          output.WriteInt32(FirstChest);
        }
        if (FirstCape != 0) {
          output.WriteRawTag(80);
          output.WriteInt32(FirstCape);
        }
        if (FirstExtra != 0) {
          output.WriteRawTag(88);
          output.WriteInt32(FirstExtra);
        }
        if (SecondHair != 0) {
          output.WriteRawTag(96);
          output.WriteInt32(SecondHair);
        }
        if (SecondFace != 0) {
          output.WriteRawTag(104);
          output.WriteInt32(SecondFace);
        }
        if (SecondDress != 0) {
          output.WriteRawTag(112);
          output.WriteInt32(SecondDress);
        }
        if (SecondChest != 0) {
          output.WriteRawTag(120);
          output.WriteInt32(SecondChest);
        }
        if (SecondCape != 0) {
          output.WriteRawTag(128, 1);
          output.WriteInt32(SecondCape);
        }
        if (SecondExtra != 0) {
          output.WriteRawTag(136, 1);
          output.WriteInt32(SecondExtra);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (CharacterId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterId);
        }
        if (FirstHair != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstHair);
        }
        if (FirstFace != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstFace);
        }
        if (FirstDress != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstDress);
        }
        if (FirstChest != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstChest);
        }
        if (FirstCape != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstCape);
        }
        if (FirstExtra != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstExtra);
        }
        if (SecondHair != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondHair);
        }
        if (SecondFace != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondFace);
        }
        if (SecondDress != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondDress);
        }
        if (SecondChest != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondChest);
        }
        if (SecondCape != 0) {
          size += 2 + pb::CodedOutputStream.ComputeInt32Size(SecondCape);
        }
        if (SecondExtra != 0) {
          size += 2 + pb::CodedOutputStream.ComputeInt32Size(SecondExtra);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Outfit other) {
        if (other == null) {
          return;
        }
        if (other.CharacterId != 0) {
          CharacterId = other.CharacterId;
        }
        if (other.FirstHair != 0) {
          FirstHair = other.FirstHair;
        }
        if (other.FirstFace != 0) {
          FirstFace = other.FirstFace;
        }
        if (other.FirstDress != 0) {
          FirstDress = other.FirstDress;
        }
        if (other.FirstChest != 0) {
          FirstChest = other.FirstChest;
        }
        if (other.FirstCape != 0) {
          FirstCape = other.FirstCape;
        }
        if (other.FirstExtra != 0) {
          FirstExtra = other.FirstExtra;
        }
        if (other.SecondHair != 0) {
          SecondHair = other.SecondHair;
        }
        if (other.SecondFace != 0) {
          SecondFace = other.SecondFace;
        }
        if (other.SecondDress != 0) {
          SecondDress = other.SecondDress;
        }
        if (other.SecondChest != 0) {
          SecondChest = other.SecondChest;
        }
        if (other.SecondCape != 0) {
          SecondCape = other.SecondCape;
        }
        if (other.SecondExtra != 0) {
          SecondExtra = other.SecondExtra;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              CharacterId = input.ReadInt32();
              break;
            }
            case 48: {
              FirstHair = input.ReadInt32();
              break;
            }
            case 56: {
              FirstFace = input.ReadInt32();
              break;
            }
            case 64: {
              FirstDress = input.ReadInt32();
              break;
            }
            case 72: {
              FirstChest = input.ReadInt32();
              break;
            }
            case 80: {
              FirstCape = input.ReadInt32();
              break;
            }
            case 88: {
              FirstExtra = input.ReadInt32();
              break;
            }
            case 96: {
              SecondHair = input.ReadInt32();
              break;
            }
            case 104: {
              SecondFace = input.ReadInt32();
              break;
            }
            case 112: {
              SecondDress = input.ReadInt32();
              break;
            }
            case 120: {
              SecondChest = input.ReadInt32();
              break;
            }
            case 128: {
              SecondCape = input.ReadInt32();
              break;
            }
            case 136: {
              SecondExtra = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

/// <summary>
/// 套装领取信息
/// </summary>
public sealed partial class EquipSuitInfo : pb::IMessage<EquipSuitInfo> {
  private static readonly pb::MessageParser<EquipSuitInfo> _parser = new pb::MessageParser<EquipSuitInfo>(() => new EquipSuitInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EquipSuitInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EquipSuitInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EquipSuitInfo(EquipSuitInfo other) : this() {
    suitId_ = other.suitId_;
    nodes_ = other.nodes_.Clone();
    actives_ = other.actives_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EquipSuitInfo Clone() {
    return new EquipSuitInfo(this);
  }

  /// <summary>Field number for the "suit_id" field.</summary>
  public const int SuitIdFieldNumber = 1;
  private int suitId_;
  /// <summary>
  /// 套装ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SuitId {
    get { return suitId_; }
    set {
      suitId_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 已领取的奖励节点（对应配表中的参数位）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  /// <summary>Field number for the "actives" field.</summary>
  public const int ActivesFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_actives_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> actives_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 可激活的节点（对应配表中的参数位）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Actives {
    get { return actives_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EquipSuitInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EquipSuitInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SuitId != other.SuitId) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    if(!actives_.Equals(other.actives_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SuitId != 0) hash ^= SuitId.GetHashCode();
    hash ^= nodes_.GetHashCode();
    hash ^= actives_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SuitId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SuitId);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    actives_.WriteTo(output, _repeated_actives_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SuitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuitId);
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    size += actives_.CalculateSize(_repeated_actives_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EquipSuitInfo other) {
    if (other == null) {
      return;
    }
    if (other.SuitId != 0) {
      SuitId = other.SuitId;
    }
    nodes_.Add(other.nodes_);
    actives_.Add(other.actives_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SuitId = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
        case 26:
        case 24: {
          actives_.AddEntriesFrom(input, _repeated_actives_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_suit_upd : pb::IMessage<l2c_suit_upd> {
  private static readonly pb::MessageParser<l2c_suit_upd> _parser = new pb::MessageParser<l2c_suit_upd>(() => new l2c_suit_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_suit_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_upd(l2c_suit_upd other) : this() {
    suit_ = other.suit_ != null ? other.suit_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_upd Clone() {
    return new l2c_suit_upd(this);
  }

  /// <summary>Field number for the "suit" field.</summary>
  public const int SuitFieldNumber = 1;
  private global::EquipSuitInfo suit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EquipSuitInfo Suit {
    get { return suit_; }
    set {
      suit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_suit_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_suit_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Suit, other.Suit)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (suit_ != null) hash ^= Suit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (suit_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Suit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (suit_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Suit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_suit_upd other) {
    if (other == null) {
      return;
    }
    if (other.suit_ != null) {
      if (suit_ == null) {
        suit_ = new global::EquipSuitInfo();
      }
      Suit.MergeFrom(other.Suit);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (suit_ == null) {
            suit_ = new global::EquipSuitInfo();
          }
          input.ReadMessage(suit_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 套装请求
/// </summary>
public sealed partial class c2l_suit_init : pb::IMessage<c2l_suit_init> {
  private static readonly pb::MessageParser<c2l_suit_init> _parser = new pb::MessageParser<c2l_suit_init>(() => new c2l_suit_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_suit_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_suit_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_suit_init(c2l_suit_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_suit_init Clone() {
    return new c2l_suit_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_suit_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_suit_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_suit_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_suit_init : pb::IMessage<l2c_suit_init> {
  private static readonly pb::MessageParser<l2c_suit_init> _parser = new pb::MessageParser<l2c_suit_init>(() => new l2c_suit_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_suit_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_init(l2c_suit_init other) : this() {
    suits_ = other.suits_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_init Clone() {
    return new l2c_suit_init(this);
  }

  /// <summary>Field number for the "suits" field.</summary>
  public const int SuitsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::EquipSuitInfo> _repeated_suits_codec
      = pb::FieldCodec.ForMessage(10, global::EquipSuitInfo.Parser);
  private readonly pbc::RepeatedField<global::EquipSuitInfo> suits_ = new pbc::RepeatedField<global::EquipSuitInfo>();
  /// <summary>
  /// 玩家已经领取的套装信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::EquipSuitInfo> Suits {
    get { return suits_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_suit_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_suit_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!suits_.Equals(other.suits_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= suits_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    suits_.WriteTo(output, _repeated_suits_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += suits_.CalculateSize(_repeated_suits_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_suit_init other) {
    if (other == null) {
      return;
    }
    suits_.Add(other.suits_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          suits_.AddEntriesFrom(input, _repeated_suits_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// // 套装对应奖励领取
/// </summary>
public sealed partial class c2l_suit_reward : pb::IMessage<c2l_suit_reward> {
  private static readonly pb::MessageParser<c2l_suit_reward> _parser = new pb::MessageParser<c2l_suit_reward>(() => new c2l_suit_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_suit_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_suit_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_suit_reward(c2l_suit_reward other) : this() {
    suitId_ = other.suitId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_suit_reward Clone() {
    return new c2l_suit_reward(this);
  }

  /// <summary>Field number for the "suit_id" field.</summary>
  public const int SuitIdFieldNumber = 1;
  private int suitId_;
  /// <summary>
  /// 套装ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SuitId {
    get { return suitId_; }
    set {
      suitId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_suit_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_suit_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SuitId != other.SuitId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SuitId != 0) hash ^= SuitId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SuitId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SuitId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SuitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuitId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_suit_reward other) {
    if (other == null) {
      return;
    }
    if (other.SuitId != 0) {
      SuitId = other.SuitId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SuitId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_suit_reward : pb::IMessage<l2c_suit_reward> {
  private static readonly pb::MessageParser<l2c_suit_reward> _parser = new pb::MessageParser<l2c_suit_reward>(() => new l2c_suit_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_suit_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_reward(l2c_suit_reward other) : this() {
    eles_ = other.eles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_suit_reward Clone() {
    return new l2c_suit_reward(this);
  }

  /// <summary>Field number for the "eles" field.</summary>
  public const int ElesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_eles_codec
      = pb::FieldCodec.ForMessage(10, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> eles_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励的元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Eles {
    get { return eles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_suit_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_suit_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!eles_.Equals(other.eles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= eles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    eles_.WriteTo(output, _repeated_eles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += eles_.CalculateSize(_repeated_eles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_suit_reward other) {
    if (other == null) {
      return;
    }
    eles_.Add(other.eles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          eles_.AddEntriesFrom(input, _repeated_eles_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 角色升级
/// </summary>
public sealed partial class c2l_character_uplevel : pb::IMessage<c2l_character_uplevel> {
  private static readonly pb::MessageParser<c2l_character_uplevel> _parser = new pb::MessageParser<c2l_character_uplevel>(() => new c2l_character_uplevel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_character_uplevel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_character_uplevel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_character_uplevel(c2l_character_uplevel other) : this() {
    characterId_ = other.characterId_;
    consumables_ = other.consumables_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_character_uplevel Clone() {
    return new c2l_character_uplevel(this);
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 1;
  private int characterId_;
  /// <summary>
  /// 被强化的角色ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CharacterId {
    get { return characterId_; }
    set {
      characterId_ = value;
    }
  }

  /// <summary>Field number for the "consumables" field.</summary>
  public const int ConsumablesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::c2l_character_uplevel.Types.Consumable> _repeated_consumables_codec
      = pb::FieldCodec.ForMessage(18, global::c2l_character_uplevel.Types.Consumable.Parser);
  private readonly pbc::RepeatedField<global::c2l_character_uplevel.Types.Consumable> consumables_ = new pbc::RepeatedField<global::c2l_character_uplevel.Types.Consumable>();
  /// <summary>
  /// 指定消耗(升经验用)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::c2l_character_uplevel.Types.Consumable> Consumables {
    get { return consumables_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_character_uplevel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_character_uplevel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId != other.CharacterId) return false;
    if(!consumables_.Equals(other.consumables_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId != 0) hash ^= CharacterId.GetHashCode();
    hash ^= consumables_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CharacterId);
    }
    consumables_.WriteTo(output, _repeated_consumables_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterId);
    }
    size += consumables_.CalculateSize(_repeated_consumables_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_character_uplevel other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId != 0) {
      CharacterId = other.CharacterId;
    }
    consumables_.Add(other.consumables_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CharacterId = input.ReadInt32();
          break;
        }
        case 18: {
          consumables_.AddEntriesFrom(input, _repeated_consumables_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_character_uplevel message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Consumable : pb::IMessage<Consumable> {
      private static readonly pb::MessageParser<Consumable> _parser = new pb::MessageParser<Consumable>(() => new Consumable());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Consumable> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_character_uplevel.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable(Consumable other) : this() {
        itemId_ = other.itemId_;
        itemCount_ = other.itemCount_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Consumable Clone() {
        return new Consumable(this);
      }

      /// <summary>Field number for the "item_id" field.</summary>
      public const int ItemIdFieldNumber = 1;
      private int itemId_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int ItemId {
        get { return itemId_; }
        set {
          itemId_ = value;
        }
      }

      /// <summary>Field number for the "item_count" field.</summary>
      public const int ItemCountFieldNumber = 2;
      private int itemCount_;
      /// <summary>
      /// 数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int ItemCount {
        get { return itemCount_; }
        set {
          itemCount_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Consumable);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Consumable other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ItemId != other.ItemId) return false;
        if (ItemCount != other.ItemCount) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (ItemId != 0) hash ^= ItemId.GetHashCode();
        if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (ItemId != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(ItemId);
        }
        if (ItemCount != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(ItemCount);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (ItemId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
        }
        if (ItemCount != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Consumable other) {
        if (other == null) {
          return;
        }
        if (other.ItemId != 0) {
          ItemId = other.ItemId;
        }
        if (other.ItemCount != 0) {
          ItemCount = other.ItemCount;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ItemId = input.ReadInt32();
              break;
            }
            case 16: {
              ItemCount = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class l2c_character_uplevel : pb::IMessage<l2c_character_uplevel> {
  private static readonly pb::MessageParser<l2c_character_uplevel> _parser = new pb::MessageParser<l2c_character_uplevel>(() => new l2c_character_uplevel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_character_uplevel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_character_uplevel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_character_uplevel(l2c_character_uplevel other) : this() {
    characterId_ = other.characterId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_character_uplevel Clone() {
    return new l2c_character_uplevel(this);
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 1;
  private int characterId_;
  /// <summary>
  /// 被强化的角色ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CharacterId {
    get { return characterId_; }
    set {
      characterId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private global::l2c_character_uplevel.Types.Result result_ = 0;
  /// <summary>
  /// 强化结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_character_uplevel.Types.Result Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_character_uplevel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_character_uplevel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId != other.CharacterId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId != 0) hash ^= CharacterId.GetHashCode();
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CharacterId);
    }
    if (Result != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterId);
    }
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_character_uplevel other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CharacterId = input.ReadInt32();
          break;
        }
        case 16: {
          result_ = (global::l2c_character_uplevel.Types.Result) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_character_uplevel message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Result {
      /// <summary>
      /// 成功
      /// </summary>
      [pbr::OriginalName("CHARACTER_UPLEVEL_SUCCEED")] CharacterUplevelSucceed = 0,
      /// <summary>
      /// 消耗品不足
      /// </summary>
      [pbr::OriginalName("CHARACTER_UPLEVEL_CONSUMABLES_DEFICIENCY")] CharacterUplevelConsumablesDeficiency = 1,
    }

  }
  #endregion

}

/// <summary>
/// 日常副本------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class DailyStageInfo : pb::IMessage<DailyStageInfo> {
  private static readonly pb::MessageParser<DailyStageInfo> _parser = new pb::MessageParser<DailyStageInfo>(() => new DailyStageInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DailyStageInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DailyStageInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DailyStageInfo(DailyStageInfo other) : this() {
    type_ = other.type_;
    remainchallengecount_ = other.remainchallengecount_;
    stageList_ = other.stageList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DailyStageInfo Clone() {
    return new DailyStageInfo(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private int type_;
  /// <summary>
  ///类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "remainchallengecount" field.</summary>
  public const int RemainchallengecountFieldNumber = 2;
  private int remainchallengecount_;
  /// <summary>
  ///剩余次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Remainchallengecount {
    get { return remainchallengecount_; }
    set {
      remainchallengecount_ = value;
    }
  }

  /// <summary>Field number for the "stageList" field.</summary>
  public const int StageListFieldNumber = 3;
  private static readonly pb::FieldCodec<global::StageInfo> _repeated_stageList_codec
      = pb::FieldCodec.ForMessage(26, global::StageInfo.Parser);
  private readonly pbc::RepeatedField<global::StageInfo> stageList_ = new pbc::RepeatedField<global::StageInfo>();
  /// <summary>
  ///关卡信息列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StageInfo> StageList {
    get { return stageList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DailyStageInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DailyStageInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Remainchallengecount != other.Remainchallengecount) return false;
    if(!stageList_.Equals(other.stageList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Remainchallengecount != 0) hash ^= Remainchallengecount.GetHashCode();
    hash ^= stageList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (Remainchallengecount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Remainchallengecount);
    }
    stageList_.WriteTo(output, _repeated_stageList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (Remainchallengecount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Remainchallengecount);
    }
    size += stageList_.CalculateSize(_repeated_stageList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DailyStageInfo other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Remainchallengecount != 0) {
      Remainchallengecount = other.Remainchallengecount;
    }
    stageList_.Add(other.stageList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 16: {
          Remainchallengecount = input.ReadInt32();
          break;
        }
        case 26: {
          stageList_.AddEntriesFrom(input, _repeated_stageList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 日常副本関卡信息
/// </summary>
public sealed partial class StageInfo : pb::IMessage<StageInfo> {
  private static readonly pb::MessageParser<StageInfo> _parser = new pb::MessageParser<StageInfo>(() => new StageInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StageInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[66]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StageInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StageInfo(StageInfo other) : this() {
    id_ = other.id_;
    state_ = other.state_;
    starnum_ = other.starnum_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StageInfo Clone() {
    return new StageInfo(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private int state_;
  /// <summary>
  /// 状态 0:新的 1:已打过
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "starnum" field.</summary>
  public const int StarnumFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_starnum_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> starnum_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 星级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Starnum {
    get { return starnum_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StageInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StageInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (State != other.State) return false;
    if(!starnum_.Equals(other.starnum_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (State != 0) hash ^= State.GetHashCode();
    hash ^= starnum_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (State != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(State);
    }
    starnum_.WriteTo(output, _repeated_starnum_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (State != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
    }
    size += starnum_.CalculateSize(_repeated_starnum_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StageInfo other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.State != 0) {
      State = other.State;
    }
    starnum_.Add(other.starnum_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          State = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          starnum_.AddEntriesFrom(input, _repeated_starnum_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_daily_stage_init : pb::IMessage<c2l_daily_stage_init> {
  private static readonly pb::MessageParser<c2l_daily_stage_init> _parser = new pb::MessageParser<c2l_daily_stage_init>(() => new c2l_daily_stage_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_daily_stage_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[67]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_stage_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_stage_init(c2l_daily_stage_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_stage_init Clone() {
    return new c2l_daily_stage_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_daily_stage_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_daily_stage_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_daily_stage_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_daily_stage_init : pb::IMessage<l2c_daily_stage_init> {
  private static readonly pb::MessageParser<l2c_daily_stage_init> _parser = new pb::MessageParser<l2c_daily_stage_init>(() => new l2c_daily_stage_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_stage_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[68]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_stage_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_stage_init(l2c_daily_stage_init other) : this() {
    opentypes_ = other.opentypes_.Clone();
    dailyStageInfo_ = other.dailyStageInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_stage_init Clone() {
    return new l2c_daily_stage_init(this);
  }

  /// <summary>Field number for the "opentypes" field.</summary>
  public const int OpentypesFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_opentypes_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> opentypes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 类型信息	
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Opentypes {
    get { return opentypes_; }
  }

  /// <summary>Field number for the "daily_stage_info" field.</summary>
  public const int DailyStageInfoFieldNumber = 2;
  private static readonly pb::FieldCodec<global::DailyStageInfo> _repeated_dailyStageInfo_codec
      = pb::FieldCodec.ForMessage(18, global::DailyStageInfo.Parser);
  private readonly pbc::RepeatedField<global::DailyStageInfo> dailyStageInfo_ = new pbc::RepeatedField<global::DailyStageInfo>();
  /// <summary>
  /// 日常副本信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::DailyStageInfo> DailyStageInfo {
    get { return dailyStageInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_stage_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_stage_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!opentypes_.Equals(other.opentypes_)) return false;
    if(!dailyStageInfo_.Equals(other.dailyStageInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= opentypes_.GetHashCode();
    hash ^= dailyStageInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    opentypes_.WriteTo(output, _repeated_opentypes_codec);
    dailyStageInfo_.WriteTo(output, _repeated_dailyStageInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += opentypes_.CalculateSize(_repeated_opentypes_codec);
    size += dailyStageInfo_.CalculateSize(_repeated_dailyStageInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_stage_init other) {
    if (other == null) {
      return;
    }
    opentypes_.Add(other.opentypes_);
    dailyStageInfo_.Add(other.dailyStageInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          opentypes_.AddEntriesFrom(input, _repeated_opentypes_codec);
          break;
        }
        case 18: {
          dailyStageInfo_.AddEntriesFrom(input, _repeated_dailyStageInfo_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_daily_start : pb::IMessage<c2l_daily_start> {
  private static readonly pb::MessageParser<c2l_daily_start> _parser = new pb::MessageParser<c2l_daily_start>(() => new c2l_daily_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_daily_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[69]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_start(c2l_daily_start other) : this() {
    dailyId_ = other.dailyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_start Clone() {
    return new c2l_daily_start(this);
  }

  /// <summary>Field number for the "daily_id" field.</summary>
  public const int DailyIdFieldNumber = 1;
  private int dailyId_;
  /// <summary>
  /// 关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DailyId {
    get { return dailyId_; }
    set {
      dailyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_daily_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_daily_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DailyId != other.DailyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DailyId != 0) hash ^= DailyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DailyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(DailyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DailyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_daily_start other) {
    if (other == null) {
      return;
    }
    if (other.DailyId != 0) {
      DailyId = other.DailyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DailyId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_daily_start : pb::IMessage<l2c_daily_start> {
  private static readonly pb::MessageParser<l2c_daily_start> _parser = new pb::MessageParser<l2c_daily_start>(() => new l2c_daily_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[70]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_start(l2c_daily_start other) : this() {
    dailyId_ = other.dailyId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_start Clone() {
    return new l2c_daily_start(this);
  }

  /// <summary>Field number for the "daily_id" field.</summary>
  public const int DailyIdFieldNumber = 1;
  private int dailyId_;
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DailyId {
    get { return dailyId_; }
    set {
      dailyId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private bool result_;
  /// <summary>
  /// 关卡开始结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DailyId != other.DailyId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DailyId != 0) hash ^= DailyId.GetHashCode();
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DailyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(DailyId);
    }
    if (Result != false) {
      output.WriteRawTag(16);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DailyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyId);
    }
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_start other) {
    if (other == null) {
      return;
    }
    if (other.DailyId != 0) {
      DailyId = other.DailyId;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DailyId = input.ReadInt32();
          break;
        }
        case 16: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_daily_upd : pb::IMessage<l2c_daily_upd> {
  private static readonly pb::MessageParser<l2c_daily_upd> _parser = new pb::MessageParser<l2c_daily_upd>(() => new l2c_daily_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[71]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_upd(l2c_daily_upd other) : this() {
    type_ = other.type_;
    dailyId_ = other.dailyId_;
    state_ = other.state_;
    nCombatlimit_ = other.nCombatlimit_;
    stars_ = other.stars_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_upd Clone() {
    return new l2c_daily_upd(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private int type_;
  /// <summary>
  ///类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "daily_id" field.</summary>
  public const int DailyIdFieldNumber = 2;
  private int dailyId_;
  /// <summary>
  ///关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DailyId {
    get { return dailyId_; }
    set {
      dailyId_ = value;
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 3;
  private int state_;
  /// <summary>
  /// 状态 0:新的 1:已打过
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "nCombatlimit" field.</summary>
  public const int NCombatlimitFieldNumber = 4;
  private int nCombatlimit_;
  /// <summary>
  /// 次数（作废）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NCombatlimit {
    get { return nCombatlimit_; }
    set {
      nCombatlimit_ = value;
    }
  }

  /// <summary>Field number for the "stars" field.</summary>
  public const int StarsFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_stars_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> stars_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 星级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Stars {
    get { return stars_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (DailyId != other.DailyId) return false;
    if (State != other.State) return false;
    if (NCombatlimit != other.NCombatlimit) return false;
    if(!stars_.Equals(other.stars_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (DailyId != 0) hash ^= DailyId.GetHashCode();
    if (State != 0) hash ^= State.GetHashCode();
    if (NCombatlimit != 0) hash ^= NCombatlimit.GetHashCode();
    hash ^= stars_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (DailyId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(DailyId);
    }
    if (State != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(State);
    }
    if (NCombatlimit != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(NCombatlimit);
    }
    stars_.WriteTo(output, _repeated_stars_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (DailyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyId);
    }
    if (State != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
    }
    if (NCombatlimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCombatlimit);
    }
    size += stars_.CalculateSize(_repeated_stars_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_upd other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.DailyId != 0) {
      DailyId = other.DailyId;
    }
    if (other.State != 0) {
      State = other.State;
    }
    if (other.NCombatlimit != 0) {
      NCombatlimit = other.NCombatlimit;
    }
    stars_.Add(other.stars_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 16: {
          DailyId = input.ReadInt32();
          break;
        }
        case 24: {
          State = input.ReadInt32();
          break;
        }
        case 32: {
          NCombatlimit = input.ReadInt32();
          break;
        }
        case 42:
        case 40: {
          stars_.AddEntriesFrom(input, _repeated_stars_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_daily_cnts_upd : pb::IMessage<l2c_daily_cnts_upd> {
  private static readonly pb::MessageParser<l2c_daily_cnts_upd> _parser = new pb::MessageParser<l2c_daily_cnts_upd>(() => new l2c_daily_cnts_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_cnts_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[72]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_cnts_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_cnts_upd(l2c_daily_cnts_upd other) : this() {
    type_ = other.type_;
    nCombatlimit_ = other.nCombatlimit_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_cnts_upd Clone() {
    return new l2c_daily_cnts_upd(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private int type_;
  /// <summary>
  /// 类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "nCombatlimit" field.</summary>
  public const int NCombatlimitFieldNumber = 4;
  private int nCombatlimit_;
  /// <summary>
  /// 次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NCombatlimit {
    get { return nCombatlimit_; }
    set {
      nCombatlimit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_cnts_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_cnts_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (NCombatlimit != other.NCombatlimit) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (NCombatlimit != 0) hash ^= NCombatlimit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (NCombatlimit != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(NCombatlimit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (NCombatlimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCombatlimit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_cnts_upd other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.NCombatlimit != 0) {
      NCombatlimit = other.NCombatlimit;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          NCombatlimit = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_daily_result : pb::IMessage<c2l_daily_result> {
  private static readonly pb::MessageParser<c2l_daily_result> _parser = new pb::MessageParser<c2l_daily_result>(() => new c2l_daily_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_daily_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[73]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_result(c2l_daily_result other) : this() {
    dailyId_ = other.dailyId_;
    type_ = other.type_;
    stars_ = other.stars_.Clone();
    killnpcid_ = other.killnpcid_.Clone();
    phalanx_ = other.phalanx_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_result Clone() {
    return new c2l_daily_result(this);
  }

  /// <summary>Field number for the "daily_id" field.</summary>
  public const int DailyIdFieldNumber = 1;
  private int dailyId_;
  /// <summary>
  /// 关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DailyId {
    get { return dailyId_; }
    set {
      dailyId_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private int type_;
  /// <summary>
  /// 类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "stars" field.</summary>
  public const int StarsFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_stars_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> stars_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 星级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Stars {
    get { return stars_; }
  }

  /// <summary>Field number for the "killnpcid" field.</summary>
  public const int KillnpcidFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_killnpcid_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> killnpcid_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 杀死npc集合
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Killnpcid {
    get { return killnpcid_; }
  }

  /// <summary>Field number for the "phalanx" field.</summary>
  public const int PhalanxFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_phalanx_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> phalanx_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 战斗阵容(胜利有效)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Phalanx {
    get { return phalanx_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_daily_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_daily_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DailyId != other.DailyId) return false;
    if (Type != other.Type) return false;
    if(!stars_.Equals(other.stars_)) return false;
    if(!killnpcid_.Equals(other.killnpcid_)) return false;
    if(!phalanx_.Equals(other.phalanx_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DailyId != 0) hash ^= DailyId.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    hash ^= stars_.GetHashCode();
    hash ^= killnpcid_.GetHashCode();
    hash ^= phalanx_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DailyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(DailyId);
    }
    if (Type != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Type);
    }
    stars_.WriteTo(output, _repeated_stars_codec);
    killnpcid_.WriteTo(output, _repeated_killnpcid_codec);
    phalanx_.WriteTo(output, _repeated_phalanx_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DailyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyId);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    size += stars_.CalculateSize(_repeated_stars_codec);
    size += killnpcid_.CalculateSize(_repeated_killnpcid_codec);
    size += phalanx_.CalculateSize(_repeated_phalanx_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_daily_result other) {
    if (other == null) {
      return;
    }
    if (other.DailyId != 0) {
      DailyId = other.DailyId;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    stars_.Add(other.stars_);
    killnpcid_.Add(other.killnpcid_);
    phalanx_.Add(other.phalanx_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DailyId = input.ReadInt32();
          break;
        }
        case 16: {
          Type = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          stars_.AddEntriesFrom(input, _repeated_stars_codec);
          break;
        }
        case 34:
        case 32: {
          killnpcid_.AddEntriesFrom(input, _repeated_killnpcid_codec);
          break;
        }
        case 42:
        case 40: {
          phalanx_.AddEntriesFrom(input, _repeated_phalanx_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_daily_fast : pb::IMessage<c2l_daily_fast> {
  private static readonly pb::MessageParser<c2l_daily_fast> _parser = new pb::MessageParser<c2l_daily_fast>(() => new c2l_daily_fast());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_daily_fast> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[74]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_fast() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_fast(c2l_daily_fast other) : this() {
    dailyId_ = other.dailyId_;
    times_ = other.times_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_fast Clone() {
    return new c2l_daily_fast(this);
  }

  /// <summary>Field number for the "daily_id" field.</summary>
  public const int DailyIdFieldNumber = 1;
  private int dailyId_;
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DailyId {
    get { return dailyId_; }
    set {
      dailyId_ = value;
    }
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int TimesFieldNumber = 2;
  private int times_;
  /// <summary>
  /// 次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Times {
    get { return times_; }
    set {
      times_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_daily_fast);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_daily_fast other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DailyId != other.DailyId) return false;
    if (Times != other.Times) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DailyId != 0) hash ^= DailyId.GetHashCode();
    if (Times != 0) hash ^= Times.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DailyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(DailyId);
    }
    if (Times != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Times);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DailyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyId);
    }
    if (Times != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_daily_fast other) {
    if (other == null) {
      return;
    }
    if (other.DailyId != 0) {
      DailyId = other.DailyId;
    }
    if (other.Times != 0) {
      Times = other.Times;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DailyId = input.ReadInt32();
          break;
        }
        case 16: {
          Times = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_daily_fast : pb::IMessage<l2c_daily_fast> {
  private static readonly pb::MessageParser<l2c_daily_fast> _parser = new pb::MessageParser<l2c_daily_fast>(() => new l2c_daily_fast());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_fast> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[75]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_fast() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_fast(l2c_daily_fast other) : this() {
    elements_ = other.elements_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_fast Clone() {
    return new l2c_daily_fast(this);
  }

  /// <summary>Field number for the "elements" field.</summary>
  public const int ElementsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_daily_result> _repeated_elements_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_daily_result.Parser);
  private readonly pbc::RepeatedField<global::l2c_daily_result> elements_ = new pbc::RepeatedField<global::l2c_daily_result>();
  /// <summary>
  /// 扫荡奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_daily_result> Elements {
    get { return elements_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_fast);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_fast other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!elements_.Equals(other.elements_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= elements_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    elements_.WriteTo(output, _repeated_elements_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += elements_.CalculateSize(_repeated_elements_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_fast other) {
    if (other == null) {
      return;
    }
    elements_.Add(other.elements_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          elements_.AddEntriesFrom(input, _repeated_elements_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_daily_result : pb::IMessage<l2c_daily_result> {
  private static readonly pb::MessageParser<l2c_daily_result> _parser = new pb::MessageParser<l2c_daily_result>(() => new l2c_daily_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[76]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_result(l2c_daily_result other) : this() {
    characterLevel_ = other.characterLevel_.Clone();
    npcElement_ = other.npcElement_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_result Clone() {
    return new l2c_daily_result(this);
  }

  /// <summary>Field number for the "character_level" field.</summary>
  public const int CharacterLevelFieldNumber = 2;
  private static readonly pb::FieldCodec<global::l2c_daily_result.Types.CharacterLevel> _repeated_characterLevel_codec
      = pb::FieldCodec.ForMessage(18, global::l2c_daily_result.Types.CharacterLevel.Parser);
  private readonly pbc::RepeatedField<global::l2c_daily_result.Types.CharacterLevel> characterLevel_ = new pbc::RepeatedField<global::l2c_daily_result.Types.CharacterLevel>();
  /// <summary>
  /// 角色等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_daily_result.Types.CharacterLevel> CharacterLevel {
    get { return characterLevel_; }
  }

  /// <summary>Field number for the "npc_element" field.</summary>
  public const int NpcElementFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_daily_result.Types.NpcElement> _repeated_npcElement_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_daily_result.Types.NpcElement.Parser);
  private readonly pbc::RepeatedField<global::l2c_daily_result.Types.NpcElement> npcElement_ = new pbc::RepeatedField<global::l2c_daily_result.Types.NpcElement>();
  /// <summary>
  /// npc对应奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_daily_result.Types.NpcElement> NpcElement {
    get { return npcElement_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!characterLevel_.Equals(other.characterLevel_)) return false;
    if(!npcElement_.Equals(other.npcElement_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= characterLevel_.GetHashCode();
    hash ^= npcElement_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    characterLevel_.WriteTo(output, _repeated_characterLevel_codec);
    npcElement_.WriteTo(output, _repeated_npcElement_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += characterLevel_.CalculateSize(_repeated_characterLevel_codec);
    size += npcElement_.CalculateSize(_repeated_npcElement_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_result other) {
    if (other == null) {
      return;
    }
    characterLevel_.Add(other.characterLevel_);
    npcElement_.Add(other.npcElement_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          characterLevel_.AddEntriesFrom(input, _repeated_characterLevel_codec);
          break;
        }
        case 26: {
          npcElement_.AddEntriesFrom(input, _repeated_npcElement_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_daily_result message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class CharacterLevel : pb::IMessage<CharacterLevel> {
      private static readonly pb::MessageParser<CharacterLevel> _parser = new pb::MessageParser<CharacterLevel>(() => new CharacterLevel());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<CharacterLevel> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_daily_result.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterLevel() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterLevel(CharacterLevel other) : this() {
        id_ = other.id_;
        level_ = other.level_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CharacterLevel Clone() {
        return new CharacterLevel(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 2;
      private int level_;
      /// <summary>
      /// 等级
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Level {
        get { return level_; }
        set {
          level_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as CharacterLevel);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(CharacterLevel other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Level != other.Level) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Level != 0) hash ^= Level.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Level != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Level);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Level != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(CharacterLevel other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Level != 0) {
          Level = other.Level;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Level = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

    public sealed partial class NpcElement : pb::IMessage<NpcElement> {
      private static readonly pb::MessageParser<NpcElement> _parser = new pb::MessageParser<NpcElement>(() => new NpcElement());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<NpcElement> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_daily_result.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NpcElement() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NpcElement(NpcElement other) : this() {
        id_ = other.id_;
        reward_ = other.reward_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NpcElement Clone() {
        return new NpcElement(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// NpcID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "reward" field.</summary>
      public const int RewardFieldNumber = 2;
      private static readonly pb::FieldCodec<global::PTGameElement> _repeated_reward_codec
          = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
      private readonly pbc::RepeatedField<global::PTGameElement> reward_ = new pbc::RepeatedField<global::PTGameElement>();
      /// <summary>
      /// 奖励
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::PTGameElement> Reward {
        get { return reward_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as NpcElement);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(NpcElement other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if(!reward_.Equals(other.reward_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        hash ^= reward_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        reward_.WriteTo(output, _repeated_reward_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        size += reward_.CalculateSize(_repeated_reward_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(NpcElement other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        reward_.Add(other.reward_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 18: {
              reward_.AddEntriesFrom(input, _repeated_reward_codec);
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

/// <summary>
/// 修改阵容
/// </summary>
public sealed partial class c2l_upd_phalanx : pb::IMessage<c2l_upd_phalanx> {
  private static readonly pb::MessageParser<c2l_upd_phalanx> _parser = new pb::MessageParser<c2l_upd_phalanx>(() => new c2l_upd_phalanx());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_upd_phalanx> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[77]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_upd_phalanx() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_upd_phalanx(c2l_upd_phalanx other) : this() {
    opInfo_ = other.opInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_upd_phalanx Clone() {
    return new c2l_upd_phalanx(this);
  }

  /// <summary>Field number for the "op_info" field.</summary>
  public const int OpInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::c2l_upd_phalanx.Types.Operation> _repeated_opInfo_codec
      = pb::FieldCodec.ForMessage(10, global::c2l_upd_phalanx.Types.Operation.Parser);
  private readonly pbc::RepeatedField<global::c2l_upd_phalanx.Types.Operation> opInfo_ = new pbc::RepeatedField<global::c2l_upd_phalanx.Types.Operation>();
  /// <summary>
  /// 关卡数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::c2l_upd_phalanx.Types.Operation> OpInfo {
    get { return opInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_upd_phalanx);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_upd_phalanx other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!opInfo_.Equals(other.opInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= opInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    opInfo_.WriteTo(output, _repeated_opInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += opInfo_.CalculateSize(_repeated_opInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_upd_phalanx other) {
    if (other == null) {
      return;
    }
    opInfo_.Add(other.opInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          opInfo_.AddEntriesFrom(input, _repeated_opInfo_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_upd_phalanx message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Operation : pb::IMessage<Operation> {
      private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Operation> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_upd_phalanx.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Operation() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Operation(Operation other) : this() {
        id_ = other.id_;
        inphalanx_ = other.inphalanx_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Operation Clone() {
        return new Operation(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "inphalanx" field.</summary>
      public const int InphalanxFieldNumber = 2;
      private bool inphalanx_;
      /// <summary>
      /// 在阵型中(true:是 false:否)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Inphalanx {
        get { return inphalanx_; }
        set {
          inphalanx_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Operation);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Operation other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Inphalanx != other.Inphalanx) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Inphalanx != false) hash ^= Inphalanx.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Inphalanx != false) {
          output.WriteRawTag(16);
          output.WriteBool(Inphalanx);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Inphalanx != false) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Operation other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Inphalanx != false) {
          Inphalanx = other.Inphalanx;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Inphalanx = input.ReadBool();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

/// <summary>
/// 单人副本------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class SingleStageInfo : pb::IMessage<SingleStageInfo> {
  private static readonly pb::MessageParser<SingleStageInfo> _parser = new pb::MessageParser<SingleStageInfo>(() => new SingleStageInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SingleStageInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[78]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SingleStageInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SingleStageInfo(SingleStageInfo other) : this() {
    role_ = other.role_;
    stageIdx_ = other.stageIdx_;
    isFinish_ = other.isFinish_;
    stageId_ = other.stageId_;
    cfgRound_ = other.cfgRound_;
    cfgAttype_ = other.cfgAttype_;
    cfgNpcset_ = other.cfgNpcset_;
    cfgSpecialBuff_ = other.cfgSpecialBuff_;
    cfgNpcDisplay_ = other.cfgNpcDisplay_;
    cfgWinCondition_ = other.cfgWinCondition_;
    cfgSpecialText_ = other.cfgSpecialText_;
    cfgFailCondition_ = other.cfgFailCondition_;
    cfgBgmChangeCondition_ = other.cfgBgmChangeCondition_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SingleStageInfo Clone() {
    return new SingleStageInfo(this);
  }

  /// <summary>Field number for the "role" field.</summary>
  public const int RoleFieldNumber = 1;
  private int role_;
  /// <summary>
  /// 角色id[2-8]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Role {
    get { return role_; }
    set {
      role_ = value;
    }
  }

  /// <summary>Field number for the "stage_idx" field.</summary>
  public const int StageIdxFieldNumber = 2;
  private int stageIdx_;
  /// <summary>
  /// 关卡idx[1-10]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageIdx {
    get { return stageIdx_; }
    set {
      stageIdx_ = value;
    }
  }

  /// <summary>Field number for the "is_finish" field.</summary>
  public const int IsFinishFieldNumber = 3;
  private bool isFinish_;
  /// <summary>
  /// 关卡状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsFinish {
    get { return isFinish_; }
    set {
      isFinish_ = value;
    }
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 4;
  private int stageId_;
  /// <summary>
  /// id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "cfg_round" field.</summary>
  public const int CfgRoundFieldNumber = 11;
  private int cfgRound_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CfgRound {
    get { return cfgRound_; }
    set {
      cfgRound_ = value;
    }
  }

  /// <summary>Field number for the "cfg_attype" field.</summary>
  public const int CfgAttypeFieldNumber = 12;
  private string cfgAttype_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CfgAttype {
    get { return cfgAttype_; }
    set {
      cfgAttype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cfg_npcset" field.</summary>
  public const int CfgNpcsetFieldNumber = 13;
  private string cfgNpcset_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CfgNpcset {
    get { return cfgNpcset_; }
    set {
      cfgNpcset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cfg_special_buff" field.</summary>
  public const int CfgSpecialBuffFieldNumber = 14;
  private string cfgSpecialBuff_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CfgSpecialBuff {
    get { return cfgSpecialBuff_; }
    set {
      cfgSpecialBuff_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cfg_npc_display" field.</summary>
  public const int CfgNpcDisplayFieldNumber = 15;
  private string cfgNpcDisplay_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CfgNpcDisplay {
    get { return cfgNpcDisplay_; }
    set {
      cfgNpcDisplay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cfg_win_condition" field.</summary>
  public const int CfgWinConditionFieldNumber = 16;
  private string cfgWinCondition_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CfgWinCondition {
    get { return cfgWinCondition_; }
    set {
      cfgWinCondition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cfg_special_text" field.</summary>
  public const int CfgSpecialTextFieldNumber = 17;
  private int cfgSpecialText_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CfgSpecialText {
    get { return cfgSpecialText_; }
    set {
      cfgSpecialText_ = value;
    }
  }

  /// <summary>Field number for the "cfg_fail_condition" field.</summary>
  public const int CfgFailConditionFieldNumber = 18;
  private string cfgFailCondition_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CfgFailCondition {
    get { return cfgFailCondition_; }
    set {
      cfgFailCondition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cfg_bgm_change_condition" field.</summary>
  public const int CfgBgmChangeConditionFieldNumber = 19;
  private string cfgBgmChangeCondition_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CfgBgmChangeCondition {
    get { return cfgBgmChangeCondition_; }
    set {
      cfgBgmChangeCondition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SingleStageInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SingleStageInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Role != other.Role) return false;
    if (StageIdx != other.StageIdx) return false;
    if (IsFinish != other.IsFinish) return false;
    if (StageId != other.StageId) return false;
    if (CfgRound != other.CfgRound) return false;
    if (CfgAttype != other.CfgAttype) return false;
    if (CfgNpcset != other.CfgNpcset) return false;
    if (CfgSpecialBuff != other.CfgSpecialBuff) return false;
    if (CfgNpcDisplay != other.CfgNpcDisplay) return false;
    if (CfgWinCondition != other.CfgWinCondition) return false;
    if (CfgSpecialText != other.CfgSpecialText) return false;
    if (CfgFailCondition != other.CfgFailCondition) return false;
    if (CfgBgmChangeCondition != other.CfgBgmChangeCondition) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Role != 0) hash ^= Role.GetHashCode();
    if (StageIdx != 0) hash ^= StageIdx.GetHashCode();
    if (IsFinish != false) hash ^= IsFinish.GetHashCode();
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (CfgRound != 0) hash ^= CfgRound.GetHashCode();
    if (CfgAttype.Length != 0) hash ^= CfgAttype.GetHashCode();
    if (CfgNpcset.Length != 0) hash ^= CfgNpcset.GetHashCode();
    if (CfgSpecialBuff.Length != 0) hash ^= CfgSpecialBuff.GetHashCode();
    if (CfgNpcDisplay.Length != 0) hash ^= CfgNpcDisplay.GetHashCode();
    if (CfgWinCondition.Length != 0) hash ^= CfgWinCondition.GetHashCode();
    if (CfgSpecialText != 0) hash ^= CfgSpecialText.GetHashCode();
    if (CfgFailCondition.Length != 0) hash ^= CfgFailCondition.GetHashCode();
    if (CfgBgmChangeCondition.Length != 0) hash ^= CfgBgmChangeCondition.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Role != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Role);
    }
    if (StageIdx != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(StageIdx);
    }
    if (IsFinish != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsFinish);
    }
    if (StageId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(StageId);
    }
    if (CfgRound != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(CfgRound);
    }
    if (CfgAttype.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(CfgAttype);
    }
    if (CfgNpcset.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(CfgNpcset);
    }
    if (CfgSpecialBuff.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(CfgSpecialBuff);
    }
    if (CfgNpcDisplay.Length != 0) {
      output.WriteRawTag(122);
      output.WriteString(CfgNpcDisplay);
    }
    if (CfgWinCondition.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(CfgWinCondition);
    }
    if (CfgSpecialText != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(CfgSpecialText);
    }
    if (CfgFailCondition.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(CfgFailCondition);
    }
    if (CfgBgmChangeCondition.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(CfgBgmChangeCondition);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Role != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
    }
    if (StageIdx != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageIdx);
    }
    if (IsFinish != false) {
      size += 1 + 1;
    }
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (CfgRound != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CfgRound);
    }
    if (CfgAttype.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CfgAttype);
    }
    if (CfgNpcset.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CfgNpcset);
    }
    if (CfgSpecialBuff.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CfgSpecialBuff);
    }
    if (CfgNpcDisplay.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CfgNpcDisplay);
    }
    if (CfgWinCondition.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(CfgWinCondition);
    }
    if (CfgSpecialText != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(CfgSpecialText);
    }
    if (CfgFailCondition.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(CfgFailCondition);
    }
    if (CfgBgmChangeCondition.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(CfgBgmChangeCondition);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SingleStageInfo other) {
    if (other == null) {
      return;
    }
    if (other.Role != 0) {
      Role = other.Role;
    }
    if (other.StageIdx != 0) {
      StageIdx = other.StageIdx;
    }
    if (other.IsFinish != false) {
      IsFinish = other.IsFinish;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.CfgRound != 0) {
      CfgRound = other.CfgRound;
    }
    if (other.CfgAttype.Length != 0) {
      CfgAttype = other.CfgAttype;
    }
    if (other.CfgNpcset.Length != 0) {
      CfgNpcset = other.CfgNpcset;
    }
    if (other.CfgSpecialBuff.Length != 0) {
      CfgSpecialBuff = other.CfgSpecialBuff;
    }
    if (other.CfgNpcDisplay.Length != 0) {
      CfgNpcDisplay = other.CfgNpcDisplay;
    }
    if (other.CfgWinCondition.Length != 0) {
      CfgWinCondition = other.CfgWinCondition;
    }
    if (other.CfgSpecialText != 0) {
      CfgSpecialText = other.CfgSpecialText;
    }
    if (other.CfgFailCondition.Length != 0) {
      CfgFailCondition = other.CfgFailCondition;
    }
    if (other.CfgBgmChangeCondition.Length != 0) {
      CfgBgmChangeCondition = other.CfgBgmChangeCondition;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Role = input.ReadInt32();
          break;
        }
        case 16: {
          StageIdx = input.ReadInt32();
          break;
        }
        case 24: {
          IsFinish = input.ReadBool();
          break;
        }
        case 32: {
          StageId = input.ReadInt32();
          break;
        }
        case 88: {
          CfgRound = input.ReadInt32();
          break;
        }
        case 98: {
          CfgAttype = input.ReadString();
          break;
        }
        case 106: {
          CfgNpcset = input.ReadString();
          break;
        }
        case 114: {
          CfgSpecialBuff = input.ReadString();
          break;
        }
        case 122: {
          CfgNpcDisplay = input.ReadString();
          break;
        }
        case 130: {
          CfgWinCondition = input.ReadString();
          break;
        }
        case 136: {
          CfgSpecialText = input.ReadInt32();
          break;
        }
        case 146: {
          CfgFailCondition = input.ReadString();
          break;
        }
        case 154: {
          CfgBgmChangeCondition = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 上周通关奖励信息
/// </summary>
public sealed partial class SingleStageLastAward : pb::IMessage<SingleStageLastAward> {
  private static readonly pb::MessageParser<SingleStageLastAward> _parser = new pb::MessageParser<SingleStageLastAward>(() => new SingleStageLastAward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SingleStageLastAward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[79]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SingleStageLastAward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SingleStageLastAward(SingleStageLastAward other) : this() {
    roleId_ = other.roleId_;
    awards_ = other.awards_.Clone();
    lastStageId_ = other.lastStageId_;
    isAward_ = other.isAward_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SingleStageLastAward Clone() {
    return new SingleStageLastAward(this);
  }

  /// <summary>Field number for the "role_id" field.</summary>
  public const int RoleIdFieldNumber = 1;
  private int roleId_;
  /// <summary>
  /// 角色ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RoleId {
    get { return roleId_; }
    set {
      roleId_ = value;
    }
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  /// <summary>Field number for the "last_stage_id" field.</summary>
  public const int LastStageIdFieldNumber = 3;
  private int lastStageId_;
  /// <summary>
  /// 上周关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LastStageId {
    get { return lastStageId_; }
    set {
      lastStageId_ = value;
    }
  }

  /// <summary>Field number for the "is_award" field.</summary>
  public const int IsAwardFieldNumber = 4;
  private bool isAward_;
  /// <summary>
  /// 是否可以领奖
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsAward {
    get { return isAward_; }
    set {
      isAward_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SingleStageLastAward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SingleStageLastAward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoleId != other.RoleId) return false;
    if(!awards_.Equals(other.awards_)) return false;
    if (LastStageId != other.LastStageId) return false;
    if (IsAward != other.IsAward) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoleId != 0) hash ^= RoleId.GetHashCode();
    hash ^= awards_.GetHashCode();
    if (LastStageId != 0) hash ^= LastStageId.GetHashCode();
    if (IsAward != false) hash ^= IsAward.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoleId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RoleId);
    }
    awards_.WriteTo(output, _repeated_awards_codec);
    if (LastStageId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(LastStageId);
    }
    if (IsAward != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsAward);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoleId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
    }
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (LastStageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastStageId);
    }
    if (IsAward != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SingleStageLastAward other) {
    if (other == null) {
      return;
    }
    if (other.RoleId != 0) {
      RoleId = other.RoleId;
    }
    awards_.Add(other.awards_);
    if (other.LastStageId != 0) {
      LastStageId = other.LastStageId;
    }
    if (other.IsAward != false) {
      IsAward = other.IsAward;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RoleId = input.ReadInt32();
          break;
        }
        case 18: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
        case 24: {
          LastStageId = input.ReadInt32();
          break;
        }
        case 32: {
          IsAward = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 单人副本初始化
/// </summary>
public sealed partial class c2l_single_combat_init : pb::IMessage<c2l_single_combat_init> {
  private static readonly pb::MessageParser<c2l_single_combat_init> _parser = new pb::MessageParser<c2l_single_combat_init>(() => new c2l_single_combat_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_single_combat_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[80]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_init(c2l_single_combat_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_init Clone() {
    return new c2l_single_combat_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_single_combat_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_single_combat_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_single_combat_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_single_combat_init : pb::IMessage<l2c_single_combat_init> {
  private static readonly pb::MessageParser<l2c_single_combat_init> _parser = new pb::MessageParser<l2c_single_combat_init>(() => new l2c_single_combat_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_single_combat_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[81]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_init(l2c_single_combat_init other) : this() {
    roleInfo_ = other.roleInfo_.Clone();
    lastReward_ = other.lastReward_.Clone();
    remainSecs_ = other.remainSecs_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_init Clone() {
    return new l2c_single_combat_init(this);
  }

  /// <summary>Field number for the "role_info" field.</summary>
  public const int RoleInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_single_combat_init.Types.SingleRoleInfo> _repeated_roleInfo_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_single_combat_init.Types.SingleRoleInfo.Parser);
  private readonly pbc::RepeatedField<global::l2c_single_combat_init.Types.SingleRoleInfo> roleInfo_ = new pbc::RepeatedField<global::l2c_single_combat_init.Types.SingleRoleInfo>();
  /// <summary>
  /// 角色信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_single_combat_init.Types.SingleRoleInfo> RoleInfo {
    get { return roleInfo_; }
  }

  /// <summary>Field number for the "last_reward" field.</summary>
  public const int LastRewardFieldNumber = 2;
  private static readonly pb::FieldCodec<global::SingleStageLastAward> _repeated_lastReward_codec
      = pb::FieldCodec.ForMessage(18, global::SingleStageLastAward.Parser);
  private readonly pbc::RepeatedField<global::SingleStageLastAward> lastReward_ = new pbc::RepeatedField<global::SingleStageLastAward>();
  /// <summary>
  /// 上周通关奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::SingleStageLastAward> LastReward {
    get { return lastReward_; }
  }

  /// <summary>Field number for the "remain_secs" field.</summary>
  public const int RemainSecsFieldNumber = 3;
  private int remainSecs_;
  /// <summary>
  /// 副本剩余秒数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RemainSecs {
    get { return remainSecs_; }
    set {
      remainSecs_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_single_combat_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_single_combat_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!roleInfo_.Equals(other.roleInfo_)) return false;
    if(!lastReward_.Equals(other.lastReward_)) return false;
    if (RemainSecs != other.RemainSecs) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= roleInfo_.GetHashCode();
    hash ^= lastReward_.GetHashCode();
    if (RemainSecs != 0) hash ^= RemainSecs.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    roleInfo_.WriteTo(output, _repeated_roleInfo_codec);
    lastReward_.WriteTo(output, _repeated_lastReward_codec);
    if (RemainSecs != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RemainSecs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += roleInfo_.CalculateSize(_repeated_roleInfo_codec);
    size += lastReward_.CalculateSize(_repeated_lastReward_codec);
    if (RemainSecs != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSecs);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_single_combat_init other) {
    if (other == null) {
      return;
    }
    roleInfo_.Add(other.roleInfo_);
    lastReward_.Add(other.lastReward_);
    if (other.RemainSecs != 0) {
      RemainSecs = other.RemainSecs;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          roleInfo_.AddEntriesFrom(input, _repeated_roleInfo_codec);
          break;
        }
        case 18: {
          lastReward_.AddEntriesFrom(input, _repeated_lastReward_codec);
          break;
        }
        case 24: {
          RemainSecs = input.ReadInt32();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_single_combat_init message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class SingleRoleInfo : pb::IMessage<SingleRoleInfo> {
      private static readonly pb::MessageParser<SingleRoleInfo> _parser = new pb::MessageParser<SingleRoleInfo>(() => new SingleRoleInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<SingleRoleInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_single_combat_init.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public SingleRoleInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public SingleRoleInfo(SingleRoleInfo other) : this() {
        roleId_ = other.roleId_;
        buffEquipId_ = other.buffEquipId_.Clone();
        maxStageIdx_ = other.maxStageIdx_;
        stageInfo_ = other.stageInfo_ != null ? other.stageInfo_.Clone() : null;
        isChoose_ = other.isChoose_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public SingleRoleInfo Clone() {
        return new SingleRoleInfo(this);
      }

      /// <summary>Field number for the "role_id" field.</summary>
      public const int RoleIdFieldNumber = 1;
      private int roleId_;
      /// <summary>
      /// 角色ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int RoleId {
        get { return roleId_; }
        set {
          roleId_ = value;
        }
      }

      /// <summary>Field number for the "buff_equip_id" field.</summary>
      public const int BuffEquipIdFieldNumber = 2;
      private static readonly pb::FieldCodec<int> _repeated_buffEquipId_codec
          = pb::FieldCodec.ForInt32(18);
      private readonly pbc::RepeatedField<int> buffEquipId_ = new pbc::RepeatedField<int>();
      /// <summary>
      /// buff装备列表
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<int> BuffEquipId {
        get { return buffEquipId_; }
      }

      /// <summary>Field number for the "max_stage_idx" field.</summary>
      public const int MaxStageIdxFieldNumber = 3;
      private int maxStageIdx_;
      /// <summary>
      /// 最大通关层数
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int MaxStageIdx {
        get { return maxStageIdx_; }
        set {
          maxStageIdx_ = value;
        }
      }

      /// <summary>Field number for the "stage_info" field.</summary>
      public const int StageInfoFieldNumber = 4;
      private global::SingleStageInfo stageInfo_;
      /// <summary>
      /// 下一个关卡信息(包括配置)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::SingleStageInfo StageInfo {
        get { return stageInfo_; }
        set {
          stageInfo_ = value;
        }
      }

      /// <summary>Field number for the "is_choose" field.</summary>
      public const int IsChooseFieldNumber = 5;
      private bool isChoose_;
      /// <summary>
      /// 是否选定
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IsChoose {
        get { return isChoose_; }
        set {
          isChoose_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as SingleRoleInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(SingleRoleInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (RoleId != other.RoleId) return false;
        if(!buffEquipId_.Equals(other.buffEquipId_)) return false;
        if (MaxStageIdx != other.MaxStageIdx) return false;
        if (!object.Equals(StageInfo, other.StageInfo)) return false;
        if (IsChoose != other.IsChoose) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (RoleId != 0) hash ^= RoleId.GetHashCode();
        hash ^= buffEquipId_.GetHashCode();
        if (MaxStageIdx != 0) hash ^= MaxStageIdx.GetHashCode();
        if (stageInfo_ != null) hash ^= StageInfo.GetHashCode();
        if (IsChoose != false) hash ^= IsChoose.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (RoleId != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(RoleId);
        }
        buffEquipId_.WriteTo(output, _repeated_buffEquipId_codec);
        if (MaxStageIdx != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(MaxStageIdx);
        }
        if (stageInfo_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(StageInfo);
        }
        if (IsChoose != false) {
          output.WriteRawTag(40);
          output.WriteBool(IsChoose);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (RoleId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
        }
        size += buffEquipId_.CalculateSize(_repeated_buffEquipId_codec);
        if (MaxStageIdx != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStageIdx);
        }
        if (stageInfo_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(StageInfo);
        }
        if (IsChoose != false) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(SingleRoleInfo other) {
        if (other == null) {
          return;
        }
        if (other.RoleId != 0) {
          RoleId = other.RoleId;
        }
        buffEquipId_.Add(other.buffEquipId_);
        if (other.MaxStageIdx != 0) {
          MaxStageIdx = other.MaxStageIdx;
        }
        if (other.stageInfo_ != null) {
          if (stageInfo_ == null) {
            stageInfo_ = new global::SingleStageInfo();
          }
          StageInfo.MergeFrom(other.StageInfo);
        }
        if (other.IsChoose != false) {
          IsChoose = other.IsChoose;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              RoleId = input.ReadInt32();
              break;
            }
            case 18:
            case 16: {
              buffEquipId_.AddEntriesFrom(input, _repeated_buffEquipId_codec);
              break;
            }
            case 24: {
              MaxStageIdx = input.ReadInt32();
              break;
            }
            case 34: {
              if (stageInfo_ == null) {
                stageInfo_ = new global::SingleStageInfo();
              }
              input.ReadMessage(stageInfo_);
              break;
            }
            case 40: {
              IsChoose = input.ReadBool();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

/// <summary>
/// 单人副本开始
/// </summary>
public sealed partial class c2l_single_combat_start : pb::IMessage<c2l_single_combat_start> {
  private static readonly pb::MessageParser<c2l_single_combat_start> _parser = new pb::MessageParser<c2l_single_combat_start>(() => new c2l_single_combat_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_single_combat_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[82]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_start(c2l_single_combat_start other) : this() {
    stageId_ = other.stageId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_start Clone() {
    return new c2l_single_combat_start(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_single_combat_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_single_combat_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_single_combat_start other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_single_combat_start : pb::IMessage<l2c_single_combat_start> {
  private static readonly pb::MessageParser<l2c_single_combat_start> _parser = new pb::MessageParser<l2c_single_combat_start>(() => new l2c_single_combat_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_single_combat_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[83]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_start(l2c_single_combat_start other) : this() {
    stageId_ = other.stageId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_start Clone() {
    return new l2c_single_combat_start(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private bool result_;
  /// <summary>
  /// true 允许 false 不允许
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_single_combat_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_single_combat_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (Result != false) {
      output.WriteRawTag(16);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_single_combat_start other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 单人副本结算
/// </summary>
public sealed partial class c2l_single_combat_result : pb::IMessage<c2l_single_combat_result> {
  private static readonly pb::MessageParser<c2l_single_combat_result> _parser = new pb::MessageParser<c2l_single_combat_result>(() => new c2l_single_combat_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_single_combat_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[84]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_result(c2l_single_combat_result other) : this() {
    stageId_ = other.stageId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_combat_result Clone() {
    return new c2l_single_combat_result(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private bool result_;
  /// <summary>
  /// true:赢 false:输
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_single_combat_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_single_combat_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (Result != false) {
      output.WriteRawTag(16);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_single_combat_result other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_single_combat_result : pb::IMessage<l2c_single_combat_result> {
  private static readonly pb::MessageParser<l2c_single_combat_result> _parser = new pb::MessageParser<l2c_single_combat_result>(() => new l2c_single_combat_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_single_combat_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[85]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_result(l2c_single_combat_result other) : this() {
    stageId_ = other.stageId_;
    reward_ = other.reward_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_combat_result Clone() {
    return new l2c_single_combat_result(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_reward_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> reward_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Reward {
    get { return reward_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_single_combat_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_single_combat_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if(!reward_.Equals(other.reward_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    hash ^= reward_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    reward_.WriteTo(output, _repeated_reward_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    size += reward_.CalculateSize(_repeated_reward_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_single_combat_result other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    reward_.Add(other.reward_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 18: {
          reward_.AddEntriesFrom(input, _repeated_reward_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 单人副本更新
/// </summary>
public sealed partial class l2c_single_stage_upd : pb::IMessage<l2c_single_stage_upd> {
  private static readonly pb::MessageParser<l2c_single_stage_upd> _parser = new pb::MessageParser<l2c_single_stage_upd>(() => new l2c_single_stage_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_single_stage_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[86]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_stage_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_stage_upd(l2c_single_stage_upd other) : this() {
    stageId_ = other.stageId_;
    isFinish_ = other.isFinish_;
    stageInfo_ = other.stageInfo_ != null ? other.stageInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_stage_upd Clone() {
    return new l2c_single_stage_upd(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 完成关卡id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "is_finish" field.</summary>
  public const int IsFinishFieldNumber = 2;
  private bool isFinish_;
  /// <summary>
  /// 完成状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsFinish {
    get { return isFinish_; }
    set {
      isFinish_ = value;
    }
  }

  /// <summary>Field number for the "stage_info" field.</summary>
  public const int StageInfoFieldNumber = 3;
  private global::SingleStageInfo stageInfo_;
  /// <summary>
  /// 新的当前关卡信息(包括配置)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SingleStageInfo StageInfo {
    get { return stageInfo_; }
    set {
      stageInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_single_stage_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_single_stage_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (IsFinish != other.IsFinish) return false;
    if (!object.Equals(StageInfo, other.StageInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (IsFinish != false) hash ^= IsFinish.GetHashCode();
    if (stageInfo_ != null) hash ^= StageInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (IsFinish != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsFinish);
    }
    if (stageInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(StageInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (IsFinish != false) {
      size += 1 + 1;
    }
    if (stageInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StageInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_single_stage_upd other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.IsFinish != false) {
      IsFinish = other.IsFinish;
    }
    if (other.stageInfo_ != null) {
      if (stageInfo_ == null) {
        stageInfo_ = new global::SingleStageInfo();
      }
      StageInfo.MergeFrom(other.StageInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          IsFinish = input.ReadBool();
          break;
        }
        case 26: {
          if (stageInfo_ == null) {
            stageInfo_ = new global::SingleStageInfo();
          }
          input.ReadMessage(stageInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 领取上周结算奖励
/// </summary>
public sealed partial class c2l_single_reward : pb::IMessage<c2l_single_reward> {
  private static readonly pb::MessageParser<c2l_single_reward> _parser = new pb::MessageParser<c2l_single_reward>(() => new c2l_single_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_single_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[87]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_reward(c2l_single_reward other) : this() {
    roleId_ = other.roleId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_single_reward Clone() {
    return new c2l_single_reward(this);
  }

  /// <summary>Field number for the "role_id" field.</summary>
  public const int RoleIdFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_roleId_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> roleId_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 领取的角色ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> RoleId {
    get { return roleId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_single_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_single_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!roleId_.Equals(other.roleId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= roleId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    roleId_.WriteTo(output, _repeated_roleId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += roleId_.CalculateSize(_repeated_roleId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_single_reward other) {
    if (other == null) {
      return;
    }
    roleId_.Add(other.roleId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          roleId_.AddEntriesFrom(input, _repeated_roleId_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_single_reward : pb::IMessage<l2c_single_reward> {
  private static readonly pb::MessageParser<l2c_single_reward> _parser = new pb::MessageParser<l2c_single_reward>(() => new l2c_single_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_single_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[88]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_reward(l2c_single_reward other) : this() {
    awards_ = other.awards_.Clone();
    lastReward_ = other.lastReward_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_single_reward Clone() {
    return new l2c_single_reward(this);
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(10, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 领取的奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  /// <summary>Field number for the "last_reward" field.</summary>
  public const int LastRewardFieldNumber = 2;
  private static readonly pb::FieldCodec<global::SingleStageLastAward> _repeated_lastReward_codec
      = pb::FieldCodec.ForMessage(18, global::SingleStageLastAward.Parser);
  private readonly pbc::RepeatedField<global::SingleStageLastAward> lastReward_ = new pbc::RepeatedField<global::SingleStageLastAward>();
  /// <summary>
  /// 上周通关奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::SingleStageLastAward> LastReward {
    get { return lastReward_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_single_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_single_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!awards_.Equals(other.awards_)) return false;
    if(!lastReward_.Equals(other.lastReward_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= awards_.GetHashCode();
    hash ^= lastReward_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    awards_.WriteTo(output, _repeated_awards_codec);
    lastReward_.WriteTo(output, _repeated_lastReward_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += awards_.CalculateSize(_repeated_awards_codec);
    size += lastReward_.CalculateSize(_repeated_lastReward_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_single_reward other) {
    if (other == null) {
      return;
    }
    awards_.Add(other.awards_);
    lastReward_.Add(other.lastReward_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
        case 18: {
          lastReward_.AddEntriesFrom(input, _repeated_lastReward_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_engagement_upd : pb::IMessage<l2c_engagement_upd> {
  private static readonly pb::MessageParser<l2c_engagement_upd> _parser = new pb::MessageParser<l2c_engagement_upd>(() => new l2c_engagement_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_engagement_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[89]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_engagement_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_engagement_upd(l2c_engagement_upd other) : this() {
    id_ = other.id_;
    state_ = other.state_;
    nodes_ = other.nodes_.Clone();
    unlockTime_ = other.unlockTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_engagement_upd Clone() {
    return new l2c_engagement_upd(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 约会ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private global::EngagementState state_ = 0;
  /// <summary>
  /// 状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EngagementState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  /// <summary>Field number for the "unlock_time" field.</summary>
  public const int UnlockTimeFieldNumber = 4;
  private long unlockTime_;
  /// <summary>
  /// 约会解锁时间（目前发送第一片解锁时间）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long UnlockTime {
    get { return unlockTime_; }
    set {
      unlockTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_engagement_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_engagement_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (State != other.State) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    if (UnlockTime != other.UnlockTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (State != 0) hash ^= State.GetHashCode();
    hash ^= nodes_.GetHashCode();
    if (UnlockTime != 0L) hash ^= UnlockTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (State != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) State);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    if (UnlockTime != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(UnlockTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (State != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    if (UnlockTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_engagement_upd other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.State != 0) {
      State = other.State;
    }
    nodes_.Add(other.nodes_);
    if (other.UnlockTime != 0L) {
      UnlockTime = other.UnlockTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          state_ = (global::EngagementState) input.ReadEnum();
          break;
        }
        case 26:
        case 24: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
        case 32: {
          UnlockTime = input.ReadInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_engagement_init : pb::IMessage<c2l_engagement_init> {
  private static readonly pb::MessageParser<c2l_engagement_init> _parser = new pb::MessageParser<c2l_engagement_init>(() => new c2l_engagement_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_engagement_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[90]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_engagement_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_engagement_init(c2l_engagement_init other) : this() {
    role_ = other.role_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_engagement_init Clone() {
    return new c2l_engagement_init(this);
  }

  /// <summary>Field number for the "role" field.</summary>
  public const int RoleFieldNumber = 1;
  private int role_;
  /// <summary>
  /// 角色id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Role {
    get { return role_; }
    set {
      role_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_engagement_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_engagement_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Role != other.Role) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Role != 0) hash ^= Role.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Role != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Role);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Role != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_engagement_init other) {
    if (other == null) {
      return;
    }
    if (other.Role != 0) {
      Role = other.Role;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Role = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_engagement_init : pb::IMessage<l2c_engagement_init> {
  private static readonly pb::MessageParser<l2c_engagement_init> _parser = new pb::MessageParser<l2c_engagement_init>(() => new l2c_engagement_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_engagement_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[91]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_engagement_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_engagement_init(l2c_engagement_init other) : this() {
    role_ = other.role_;
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    engagement_ = other.engagement_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_engagement_init Clone() {
    return new l2c_engagement_init(this);
  }

  /// <summary>Field number for the "role" field.</summary>
  public const int RoleFieldNumber = 1;
  private int role_;
  /// <summary>
  /// 角色id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Role {
    get { return role_; }
    set {
      role_ = value;
    }
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 2;
  private int totalPage_;
  /// <summary>
  /// 总页数(每页最多10个数据)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 3;
  private int pageNum_;
  /// <summary>
  /// 当前页数[0,9]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "engagement" field.</summary>
  public const int EngagementFieldNumber = 4;
  private static readonly pb::FieldCodec<global::l2c_engagement_upd> _repeated_engagement_codec
      = pb::FieldCodec.ForMessage(34, global::l2c_engagement_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_engagement_upd> engagement_ = new pbc::RepeatedField<global::l2c_engagement_upd>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_engagement_upd> Engagement {
    get { return engagement_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_engagement_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_engagement_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Role != other.Role) return false;
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!engagement_.Equals(other.engagement_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Role != 0) hash ^= Role.GetHashCode();
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= engagement_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Role != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Role);
    }
    if (TotalPage != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(PageNum);
    }
    engagement_.WriteTo(output, _repeated_engagement_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Role != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
    }
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += engagement_.CalculateSize(_repeated_engagement_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_engagement_init other) {
    if (other == null) {
      return;
    }
    if (other.Role != 0) {
      Role = other.Role;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    engagement_.Add(other.engagement_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Role = input.ReadInt32();
          break;
        }
        case 16: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 24: {
          PageNum = input.ReadInt32();
          break;
        }
        case 34: {
          engagement_.AddEntriesFrom(input, _repeated_engagement_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_engagement_unlock : pb::IMessage<c2l_engagement_unlock> {
  private static readonly pb::MessageParser<c2l_engagement_unlock> _parser = new pb::MessageParser<c2l_engagement_unlock>(() => new c2l_engagement_unlock());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_engagement_unlock> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[92]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_engagement_unlock() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_engagement_unlock(c2l_engagement_unlock other) : this() {
    id_ = other.id_;
    ele_ = other.ele_ != null ? other.ele_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_engagement_unlock Clone() {
    return new c2l_engagement_unlock(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 约会ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "ele" field.</summary>
  public const int EleFieldNumber = 2;
  private global::PTGameElement ele_;
  /// <summary>
  /// 选择的道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PTGameElement Ele {
    get { return ele_; }
    set {
      ele_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_engagement_unlock);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_engagement_unlock other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!object.Equals(Ele, other.Ele)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (ele_ != null) hash ^= Ele.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (ele_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Ele);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (ele_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ele);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_engagement_unlock other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.ele_ != null) {
      if (ele_ == null) {
        ele_ = new global::PTGameElement();
      }
      Ele.MergeFrom(other.Ele);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          if (ele_ == null) {
            ele_ = new global::PTGameElement();
          }
          input.ReadMessage(ele_);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_start_engagement : pb::IMessage<c2l_start_engagement> {
  private static readonly pb::MessageParser<c2l_start_engagement> _parser = new pb::MessageParser<c2l_start_engagement>(() => new c2l_start_engagement());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_start_engagement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[93]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_start_engagement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_start_engagement(c2l_start_engagement other) : this() {
    engagementId_ = other.engagementId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_start_engagement Clone() {
    return new c2l_start_engagement(this);
  }

  /// <summary>Field number for the "engagement_id" field.</summary>
  public const int EngagementIdFieldNumber = 1;
  private int engagementId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EngagementId {
    get { return engagementId_; }
    set {
      engagementId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_start_engagement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_start_engagement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EngagementId != other.EngagementId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EngagementId != 0) hash ^= EngagementId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EngagementId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(EngagementId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EngagementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngagementId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_start_engagement other) {
    if (other == null) {
      return;
    }
    if (other.EngagementId != 0) {
      EngagementId = other.EngagementId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EngagementId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_start_engagement : pb::IMessage<l2c_start_engagement> {
  private static readonly pb::MessageParser<l2c_start_engagement> _parser = new pb::MessageParser<l2c_start_engagement>(() => new l2c_start_engagement());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_start_engagement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[94]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_start_engagement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_start_engagement(l2c_start_engagement other) : this() {
    engagementId_ = other.engagementId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_start_engagement Clone() {
    return new l2c_start_engagement(this);
  }

  /// <summary>Field number for the "engagement_id" field.</summary>
  public const int EngagementIdFieldNumber = 1;
  private int engagementId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EngagementId {
    get { return engagementId_; }
    set {
      engagementId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private bool result_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_start_engagement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_start_engagement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EngagementId != other.EngagementId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EngagementId != 0) hash ^= EngagementId.GetHashCode();
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EngagementId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(EngagementId);
    }
    if (Result != false) {
      output.WriteRawTag(16);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EngagementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngagementId);
    }
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_start_engagement other) {
    if (other == null) {
      return;
    }
    if (other.EngagementId != 0) {
      EngagementId = other.EngagementId;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EngagementId = input.ReadInt32();
          break;
        }
        case 16: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_ends_engagement : pb::IMessage<c2l_ends_engagement> {
  private static readonly pb::MessageParser<c2l_ends_engagement> _parser = new pb::MessageParser<c2l_ends_engagement>(() => new c2l_ends_engagement());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_ends_engagement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[95]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ends_engagement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ends_engagement(c2l_ends_engagement other) : this() {
    engagementId_ = other.engagementId_;
    finishCount_ = other.finishCount_;
    choosedNodes_ = other.choosedNodes_.Clone();
    gifts_ = other.gifts_.Clone();
    mutexNodes_ = other.mutexNodes_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ends_engagement Clone() {
    return new c2l_ends_engagement(this);
  }

  /// <summary>Field number for the "engagement_id" field.</summary>
  public const int EngagementIdFieldNumber = 1;
  private int engagementId_;
  /// <summary>
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EngagementId {
    get { return engagementId_; }
    set {
      engagementId_ = value;
    }
  }

  /// <summary>Field number for the "finish_count" field.</summary>
  public const int FinishCountFieldNumber = 2;
  private int finishCount_;
  /// <summary>
  /// 完成数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FinishCount {
    get { return finishCount_; }
    set {
      finishCount_ = value;
    }
  }

  /// <summary>Field number for the "choosed_nodes" field.</summary>
  public const int ChoosedNodesFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_choosedNodes_codec
      = pb::FieldCodec.ForUInt32(26);
  private readonly pbc::RepeatedField<uint> choosedNodes_ = new pbc::RepeatedField<uint>();
  /// <summary>
  /// 完成节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> ChoosedNodes {
    get { return choosedNodes_; }
  }

  /// <summary>Field number for the "gifts" field.</summary>
  public const int GiftsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::c2l_ends_engagement.Types.gift> _repeated_gifts_codec
      = pb::FieldCodec.ForMessage(34, global::c2l_ends_engagement.Types.gift.Parser);
  private readonly pbc::RepeatedField<global::c2l_ends_engagement.Types.gift> gifts_ = new pbc::RepeatedField<global::c2l_ends_engagement.Types.gift>();
  /// <summary>
  /// 礼物
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::c2l_ends_engagement.Types.gift> Gifts {
    get { return gifts_; }
  }

  /// <summary>Field number for the "mutex_nodes" field.</summary>
  public const int MutexNodesFieldNumber = 5;
  private static readonly pb::FieldCodec<global::MutexNode> _repeated_mutexNodes_codec
      = pb::FieldCodec.ForMessage(42, global::MutexNode.Parser);
  private readonly pbc::RepeatedField<global::MutexNode> mutexNodes_ = new pbc::RepeatedField<global::MutexNode>();
  /// <summary>
  /// 互斥节点集合
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MutexNode> MutexNodes {
    get { return mutexNodes_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_ends_engagement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_ends_engagement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EngagementId != other.EngagementId) return false;
    if (FinishCount != other.FinishCount) return false;
    if(!choosedNodes_.Equals(other.choosedNodes_)) return false;
    if(!gifts_.Equals(other.gifts_)) return false;
    if(!mutexNodes_.Equals(other.mutexNodes_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EngagementId != 0) hash ^= EngagementId.GetHashCode();
    if (FinishCount != 0) hash ^= FinishCount.GetHashCode();
    hash ^= choosedNodes_.GetHashCode();
    hash ^= gifts_.GetHashCode();
    hash ^= mutexNodes_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EngagementId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(EngagementId);
    }
    if (FinishCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FinishCount);
    }
    choosedNodes_.WriteTo(output, _repeated_choosedNodes_codec);
    gifts_.WriteTo(output, _repeated_gifts_codec);
    mutexNodes_.WriteTo(output, _repeated_mutexNodes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EngagementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngagementId);
    }
    if (FinishCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinishCount);
    }
    size += choosedNodes_.CalculateSize(_repeated_choosedNodes_codec);
    size += gifts_.CalculateSize(_repeated_gifts_codec);
    size += mutexNodes_.CalculateSize(_repeated_mutexNodes_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_ends_engagement other) {
    if (other == null) {
      return;
    }
    if (other.EngagementId != 0) {
      EngagementId = other.EngagementId;
    }
    if (other.FinishCount != 0) {
      FinishCount = other.FinishCount;
    }
    choosedNodes_.Add(other.choosedNodes_);
    gifts_.Add(other.gifts_);
    mutexNodes_.Add(other.mutexNodes_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EngagementId = input.ReadInt32();
          break;
        }
        case 16: {
          FinishCount = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          choosedNodes_.AddEntriesFrom(input, _repeated_choosedNodes_codec);
          break;
        }
        case 34: {
          gifts_.AddEntriesFrom(input, _repeated_gifts_codec);
          break;
        }
        case 42: {
          mutexNodes_.AddEntriesFrom(input, _repeated_mutexNodes_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_ends_engagement message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class gift : pb::IMessage<gift> {
      private static readonly pb::MessageParser<gift> _parser = new pb::MessageParser<gift>(() => new gift());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<gift> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_ends_engagement.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public gift() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public gift(gift other) : this() {
        id_ = other.id_;
        count_ = other.count_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public gift Clone() {
        return new gift(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// 礼物ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "count" field.</summary>
      public const int CountFieldNumber = 2;
      private int count_;
      /// <summary>
      /// 数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Count {
        get { return count_; }
        set {
          count_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as gift);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(gift other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Count != other.Count) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Count != 0) hash ^= Count.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Count != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Count);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(gift other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Count != 0) {
          Count = other.Count;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Count = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class l2c_ends_engagement : pb::IMessage<l2c_ends_engagement> {
  private static readonly pb::MessageParser<l2c_ends_engagement> _parser = new pb::MessageParser<l2c_ends_engagement>(() => new l2c_ends_engagement());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_ends_engagement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[96]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ends_engagement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ends_engagement(l2c_ends_engagement other) : this() {
    engagementId_ = other.engagementId_;
    favorLevel_ = other.favorLevel_;
    favorExp_ = other.favorExp_;
    rewards_ = other.rewards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ends_engagement Clone() {
    return new l2c_ends_engagement(this);
  }

  /// <summary>Field number for the "engagement_id" field.</summary>
  public const int EngagementIdFieldNumber = 1;
  private int engagementId_;
  /// <summary>
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EngagementId {
    get { return engagementId_; }
    set {
      engagementId_ = value;
    }
  }

  /// <summary>Field number for the "favor_level" field.</summary>
  public const int FavorLevelFieldNumber = 2;
  private int favorLevel_;
  /// <summary>
  /// 好感度等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FavorLevel {
    get { return favorLevel_; }
    set {
      favorLevel_ = value;
    }
  }

  /// <summary>Field number for the "favor_exp" field.</summary>
  public const int FavorExpFieldNumber = 3;
  private int favorExp_;
  /// <summary>
  /// 好感度经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FavorExp {
    get { return favorExp_; }
    set {
      favorExp_ = value;
    }
  }

  /// <summary>Field number for the "rewards" field.</summary>
  public const int RewardsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(34, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> rewards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Rewards {
    get { return rewards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_ends_engagement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_ends_engagement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EngagementId != other.EngagementId) return false;
    if (FavorLevel != other.FavorLevel) return false;
    if (FavorExp != other.FavorExp) return false;
    if(!rewards_.Equals(other.rewards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EngagementId != 0) hash ^= EngagementId.GetHashCode();
    if (FavorLevel != 0) hash ^= FavorLevel.GetHashCode();
    if (FavorExp != 0) hash ^= FavorExp.GetHashCode();
    hash ^= rewards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EngagementId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(EngagementId);
    }
    if (FavorLevel != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FavorLevel);
    }
    if (FavorExp != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(FavorExp);
    }
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EngagementId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngagementId);
    }
    if (FavorLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FavorLevel);
    }
    if (FavorExp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FavorExp);
    }
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_ends_engagement other) {
    if (other == null) {
      return;
    }
    if (other.EngagementId != 0) {
      EngagementId = other.EngagementId;
    }
    if (other.FavorLevel != 0) {
      FavorLevel = other.FavorLevel;
    }
    if (other.FavorExp != 0) {
      FavorExp = other.FavorExp;
    }
    rewards_.Add(other.rewards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EngagementId = input.ReadInt32();
          break;
        }
        case 16: {
          FavorLevel = input.ReadInt32();
          break;
        }
        case 24: {
          FavorExp = input.ReadInt32();
          break;
        }
        case 34: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class FishingEquipments : pb::IMessage<FishingEquipments> {
  private static readonly pb::MessageParser<FishingEquipments> _parser = new pb::MessageParser<FishingEquipments>(() => new FishingEquipments());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FishingEquipments> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[97]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishingEquipments() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishingEquipments(FishingEquipments other) : this() {
    fishingRod_ = other.fishingRod_;
    bait_ = other.bait_;
    characterId_ = other.characterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishingEquipments Clone() {
    return new FishingEquipments(this);
  }

  /// <summary>Field number for the "fishing_rod" field.</summary>
  public const int FishingRodFieldNumber = 1;
  private int fishingRod_;
  /// <summary>
  /// 鱼竿
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishingRod {
    get { return fishingRod_; }
    set {
      fishingRod_ = value;
    }
  }

  /// <summary>Field number for the "bait" field.</summary>
  public const int BaitFieldNumber = 2;
  private int bait_;
  /// <summary>
  /// 鱼饵
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Bait {
    get { return bait_; }
    set {
      bait_ = value;
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 3;
  private int characterId_;
  /// <summary>
  /// 角色
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CharacterId {
    get { return characterId_; }
    set {
      characterId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FishingEquipments);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FishingEquipments other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FishingRod != other.FishingRod) return false;
    if (Bait != other.Bait) return false;
    if (CharacterId != other.CharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FishingRod != 0) hash ^= FishingRod.GetHashCode();
    if (Bait != 0) hash ^= Bait.GetHashCode();
    if (CharacterId != 0) hash ^= CharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FishingRod != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FishingRod);
    }
    if (Bait != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Bait);
    }
    if (CharacterId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FishingRod != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishingRod);
    }
    if (Bait != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bait);
    }
    if (CharacterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FishingEquipments other) {
    if (other == null) {
      return;
    }
    if (other.FishingRod != 0) {
      FishingRod = other.FishingRod;
    }
    if (other.Bait != 0) {
      Bait = other.Bait;
    }
    if (other.CharacterId != 0) {
      CharacterId = other.CharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FishingRod = input.ReadInt32();
          break;
        }
        case 16: {
          Bait = input.ReadInt32();
          break;
        }
        case 24: {
          CharacterId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class FishRecordData : pb::IMessage<FishRecordData> {
  private static readonly pb::MessageParser<FishRecordData> _parser = new pb::MessageParser<FishRecordData>(() => new FishRecordData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FishRecordData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[98]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishRecordData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishRecordData(FishRecordData other) : this() {
    fishId_ = other.fishId_;
    amount_ = other.amount_;
    minSize_ = other.minSize_;
    maxSize_ = other.maxSize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishRecordData Clone() {
    return new FishRecordData(this);
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 1;
  private int fishId_;
  /// <summary>
  /// 鱼ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishId {
    get { return fishId_; }
    set {
      fishId_ = value;
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  /// <summary>
  /// 数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  /// <summary>Field number for the "min_size" field.</summary>
  public const int MinSizeFieldNumber = 3;
  private int minSize_;
  /// <summary>
  /// 最小尺寸
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MinSize {
    get { return minSize_; }
    set {
      minSize_ = value;
    }
  }

  /// <summary>Field number for the "max_size" field.</summary>
  public const int MaxSizeFieldNumber = 4;
  private int maxSize_;
  /// <summary>
  /// 最大尺寸
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxSize {
    get { return maxSize_; }
    set {
      maxSize_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FishRecordData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FishRecordData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FishId != other.FishId) return false;
    if (Amount != other.Amount) return false;
    if (MinSize != other.MinSize) return false;
    if (MaxSize != other.MaxSize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FishId != 0) hash ^= FishId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (MinSize != 0) hash ^= MinSize.GetHashCode();
    if (MaxSize != 0) hash ^= MaxSize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FishId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FishId);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (MinSize != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(MinSize);
    }
    if (MaxSize != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(MaxSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FishId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (MinSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinSize);
    }
    if (MaxSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxSize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FishRecordData other) {
    if (other == null) {
      return;
    }
    if (other.FishId != 0) {
      FishId = other.FishId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    if (other.MinSize != 0) {
      MinSize = other.MinSize;
    }
    if (other.MaxSize != 0) {
      MaxSize = other.MaxSize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FishId = input.ReadInt32();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
        case 24: {
          MinSize = input.ReadInt32();
          break;
        }
        case 32: {
          MaxSize = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_fish_info : pb::IMessage<c2l_fish_info> {
  private static readonly pb::MessageParser<c2l_fish_info> _parser = new pb::MessageParser<c2l_fish_info>(() => new c2l_fish_info());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_fish_info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[99]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_fish_info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_fish_info(c2l_fish_info other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_fish_info Clone() {
    return new c2l_fish_info(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_fish_info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_fish_info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_fish_info other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_fish_info : pb::IMessage<l2c_fish_info> {
  private static readonly pb::MessageParser<l2c_fish_info> _parser = new pb::MessageParser<l2c_fish_info>(() => new l2c_fish_info());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_fish_info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[100]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_info(l2c_fish_info other) : this() {
    fishingLevel_ = other.fishingLevel_;
    fishingExp_ = other.fishingExp_;
    fishingEquipments_ = other.fishingEquipments_ != null ? other.fishingEquipments_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_info Clone() {
    return new l2c_fish_info(this);
  }

  /// <summary>Field number for the "fishing_level" field.</summary>
  public const int FishingLevelFieldNumber = 1;
  private int fishingLevel_;
  /// <summary>
  /// 钓鱼等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishingLevel {
    get { return fishingLevel_; }
    set {
      fishingLevel_ = value;
    }
  }

  /// <summary>Field number for the "fishing_exp" field.</summary>
  public const int FishingExpFieldNumber = 2;
  private int fishingExp_;
  /// <summary>
  /// 钓鱼经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishingExp {
    get { return fishingExp_; }
    set {
      fishingExp_ = value;
    }
  }

  /// <summary>Field number for the "fishing_equipments" field.</summary>
  public const int FishingEquipmentsFieldNumber = 3;
  private global::FishingEquipments fishingEquipments_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FishingEquipments FishingEquipments {
    get { return fishingEquipments_; }
    set {
      fishingEquipments_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_fish_info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_fish_info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FishingLevel != other.FishingLevel) return false;
    if (FishingExp != other.FishingExp) return false;
    if (!object.Equals(FishingEquipments, other.FishingEquipments)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FishingLevel != 0) hash ^= FishingLevel.GetHashCode();
    if (FishingExp != 0) hash ^= FishingExp.GetHashCode();
    if (fishingEquipments_ != null) hash ^= FishingEquipments.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FishingLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FishingLevel);
    }
    if (FishingExp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishingExp);
    }
    if (fishingEquipments_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(FishingEquipments);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FishingLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishingLevel);
    }
    if (FishingExp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishingExp);
    }
    if (fishingEquipments_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FishingEquipments);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_fish_info other) {
    if (other == null) {
      return;
    }
    if (other.FishingLevel != 0) {
      FishingLevel = other.FishingLevel;
    }
    if (other.FishingExp != 0) {
      FishingExp = other.FishingExp;
    }
    if (other.fishingEquipments_ != null) {
      if (fishingEquipments_ == null) {
        fishingEquipments_ = new global::FishingEquipments();
      }
      FishingEquipments.MergeFrom(other.FishingEquipments);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FishingLevel = input.ReadInt32();
          break;
        }
        case 16: {
          FishingExp = input.ReadInt32();
          break;
        }
        case 26: {
          if (fishingEquipments_ == null) {
            fishingEquipments_ = new global::FishingEquipments();
          }
          input.ReadMessage(fishingEquipments_);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_fish_record : pb::IMessage<l2c_fish_record> {
  private static readonly pb::MessageParser<l2c_fish_record> _parser = new pb::MessageParser<l2c_fish_record>(() => new l2c_fish_record());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_fish_record> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[101]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_record() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_record(l2c_fish_record other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    records_ = other.records_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_record Clone() {
    return new l2c_fish_record(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(>=0)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 页号(从0开始第一页)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "records" field.</summary>
  public const int RecordsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::FishRecordData> _repeated_records_codec
      = pb::FieldCodec.ForMessage(26, global::FishRecordData.Parser);
  private readonly pbc::RepeatedField<global::FishRecordData> records_ = new pbc::RepeatedField<global::FishRecordData>();
  /// <summary>
  /// 当前页数据(每页最多20条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::FishRecordData> Records {
    get { return records_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_fish_record);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_fish_record other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!records_.Equals(other.records_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= records_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    records_.WriteTo(output, _repeated_records_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += records_.CalculateSize(_repeated_records_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_fish_record other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    records_.Add(other.records_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          records_.AddEntriesFrom(input, _repeated_records_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_fish_record_upd : pb::IMessage<l2c_fish_record_upd> {
  private static readonly pb::MessageParser<l2c_fish_record_upd> _parser = new pb::MessageParser<l2c_fish_record_upd>(() => new l2c_fish_record_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_fish_record_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[102]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_record_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_record_upd(l2c_fish_record_upd other) : this() {
    records_ = other.records_ != null ? other.records_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fish_record_upd Clone() {
    return new l2c_fish_record_upd(this);
  }

  /// <summary>Field number for the "records" field.</summary>
  public const int RecordsFieldNumber = 1;
  private global::FishRecordData records_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FishRecordData Records {
    get { return records_; }
    set {
      records_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_fish_record_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_fish_record_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Records, other.Records)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (records_ != null) hash ^= Records.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (records_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Records);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (records_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Records);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_fish_record_upd other) {
    if (other == null) {
      return;
    }
    if (other.records_ != null) {
      if (records_ == null) {
        records_ = new global::FishRecordData();
      }
      Records.MergeFrom(other.Records);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (records_ == null) {
            records_ = new global::FishRecordData();
          }
          input.ReadMessage(records_);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_upd_fishing_equipments : pb::IMessage<c2l_upd_fishing_equipments> {
  private static readonly pb::MessageParser<c2l_upd_fishing_equipments> _parser = new pb::MessageParser<c2l_upd_fishing_equipments>(() => new c2l_upd_fishing_equipments());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_upd_fishing_equipments> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[103]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_upd_fishing_equipments() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_upd_fishing_equipments(c2l_upd_fishing_equipments other) : this() {
    fishingEquipments_ = other.fishingEquipments_ != null ? other.fishingEquipments_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_upd_fishing_equipments Clone() {
    return new c2l_upd_fishing_equipments(this);
  }

  /// <summary>Field number for the "fishing_equipments" field.</summary>
  public const int FishingEquipmentsFieldNumber = 1;
  private global::FishingEquipments fishingEquipments_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FishingEquipments FishingEquipments {
    get { return fishingEquipments_; }
    set {
      fishingEquipments_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_upd_fishing_equipments);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_upd_fishing_equipments other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(FishingEquipments, other.FishingEquipments)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (fishingEquipments_ != null) hash ^= FishingEquipments.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (fishingEquipments_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FishingEquipments);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (fishingEquipments_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FishingEquipments);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_upd_fishing_equipments other) {
    if (other == null) {
      return;
    }
    if (other.fishingEquipments_ != null) {
      if (fishingEquipments_ == null) {
        fishingEquipments_ = new global::FishingEquipments();
      }
      FishingEquipments.MergeFrom(other.FishingEquipments);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (fishingEquipments_ == null) {
            fishingEquipments_ = new global::FishingEquipments();
          }
          input.ReadMessage(fishingEquipments_);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_start_fishing : pb::IMessage<c2l_start_fishing> {
  private static readonly pb::MessageParser<c2l_start_fishing> _parser = new pb::MessageParser<c2l_start_fishing>(() => new c2l_start_fishing());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_start_fishing> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[104]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_start_fishing() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_start_fishing(c2l_start_fishing other) : this() {
    fishingSpace_ = other.fishingSpace_;
    randomInfo_ = other.randomInfo_ != null ? other.randomInfo_.Clone() : null;
    isRandomInit_ = other.isRandomInit_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_start_fishing Clone() {
    return new c2l_start_fishing(this);
  }

  /// <summary>Field number for the "fishing_space" field.</summary>
  public const int FishingSpaceFieldNumber = 1;
  private int fishingSpace_;
  /// <summary>
  /// 渔场ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishingSpace {
    get { return fishingSpace_; }
    set {
      fishingSpace_ = value;
    }
  }

  /// <summary>Field number for the "random_info" field.</summary>
  public const int RandomInfoFieldNumber = 2;
  private global::RandomStageIndex randomInfo_;
  /// <summary>
  /// 随机钓鱼关卡索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RandomStageIndex RandomInfo {
    get { return randomInfo_; }
    set {
      randomInfo_ = value;
    }
  }

  /// <summary>Field number for the "is_random_init" field.</summary>
  public const int IsRandomInitFieldNumber = 3;
  private bool isRandomInit_;
  /// <summary>
  /// 随机钓鱼关卡是否初始化
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsRandomInit {
    get { return isRandomInit_; }
    set {
      isRandomInit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_start_fishing);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_start_fishing other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FishingSpace != other.FishingSpace) return false;
    if (!object.Equals(RandomInfo, other.RandomInfo)) return false;
    if (IsRandomInit != other.IsRandomInit) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FishingSpace != 0) hash ^= FishingSpace.GetHashCode();
    if (randomInfo_ != null) hash ^= RandomInfo.GetHashCode();
    if (IsRandomInit != false) hash ^= IsRandomInit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FishingSpace != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FishingSpace);
    }
    if (randomInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(RandomInfo);
    }
    if (IsRandomInit != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsRandomInit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FishingSpace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishingSpace);
    }
    if (randomInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomInfo);
    }
    if (IsRandomInit != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_start_fishing other) {
    if (other == null) {
      return;
    }
    if (other.FishingSpace != 0) {
      FishingSpace = other.FishingSpace;
    }
    if (other.randomInfo_ != null) {
      if (randomInfo_ == null) {
        randomInfo_ = new global::RandomStageIndex();
      }
      RandomInfo.MergeFrom(other.RandomInfo);
    }
    if (other.IsRandomInit != false) {
      IsRandomInit = other.IsRandomInit;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FishingSpace = input.ReadInt32();
          break;
        }
        case 18: {
          if (randomInfo_ == null) {
            randomInfo_ = new global::RandomStageIndex();
          }
          input.ReadMessage(randomInfo_);
          break;
        }
        case 24: {
          IsRandomInit = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_start_fishing : pb::IMessage<l2c_start_fishing> {
  private static readonly pb::MessageParser<l2c_start_fishing> _parser = new pb::MessageParser<l2c_start_fishing>(() => new l2c_start_fishing());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_start_fishing> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[105]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_start_fishing() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_start_fishing(l2c_start_fishing other) : this() {
    fishingSpace_ = other.fishingSpace_;
    result_ = other.result_;
    fishId_ = other.fishId_;
    favor_ = other.favor_;
    remainSecs_ = other.remainSecs_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_start_fishing Clone() {
    return new l2c_start_fishing(this);
  }

  /// <summary>Field number for the "fishing_space" field.</summary>
  public const int FishingSpaceFieldNumber = 1;
  private int fishingSpace_;
  /// <summary>
  /// 渔场ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishingSpace {
    get { return fishingSpace_; }
    set {
      fishingSpace_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private bool result_;
  /// <summary>
  /// 结果(true:可用 false:不可用)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 3;
  private int fishId_;
  /// <summary>
  /// 鱼ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishId {
    get { return fishId_; }
    set {
      fishId_ = value;
    }
  }

  /// <summary>Field number for the "favor" field.</summary>
  public const int FavorFieldNumber = 4;
  private int favor_;
  /// <summary>
  /// 好感度奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Favor {
    get { return favor_; }
    set {
      favor_ = value;
    }
  }

  /// <summary>Field number for the "remain_secs" field.</summary>
  public const int RemainSecsFieldNumber = 6;
  private long remainSecs_;
  /// <summary>
  ///剩余秒数（随机钓鱼类型为1时用）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long RemainSecs {
    get { return remainSecs_; }
    set {
      remainSecs_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_start_fishing);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_start_fishing other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FishingSpace != other.FishingSpace) return false;
    if (Result != other.Result) return false;
    if (FishId != other.FishId) return false;
    if (Favor != other.Favor) return false;
    if (RemainSecs != other.RemainSecs) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FishingSpace != 0) hash ^= FishingSpace.GetHashCode();
    if (Result != false) hash ^= Result.GetHashCode();
    if (FishId != 0) hash ^= FishId.GetHashCode();
    if (Favor != 0) hash ^= Favor.GetHashCode();
    if (RemainSecs != 0L) hash ^= RemainSecs.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FishingSpace != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FishingSpace);
    }
    if (Result != false) {
      output.WriteRawTag(16);
      output.WriteBool(Result);
    }
    if (FishId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(FishId);
    }
    if (Favor != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Favor);
    }
    if (RemainSecs != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(RemainSecs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FishingSpace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishingSpace);
    }
    if (Result != false) {
      size += 1 + 1;
    }
    if (FishId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
    }
    if (Favor != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Favor);
    }
    if (RemainSecs != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainSecs);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_start_fishing other) {
    if (other == null) {
      return;
    }
    if (other.FishingSpace != 0) {
      FishingSpace = other.FishingSpace;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    if (other.FishId != 0) {
      FishId = other.FishId;
    }
    if (other.Favor != 0) {
      Favor = other.Favor;
    }
    if (other.RemainSecs != 0L) {
      RemainSecs = other.RemainSecs;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FishingSpace = input.ReadInt32();
          break;
        }
        case 16: {
          Result = input.ReadBool();
          break;
        }
        case 24: {
          FishId = input.ReadInt32();
          break;
        }
        case 32: {
          Favor = input.ReadInt32();
          break;
        }
        case 48: {
          RemainSecs = input.ReadInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_fishing_success : pb::IMessage<c2l_fishing_success> {
  private static readonly pb::MessageParser<c2l_fishing_success> _parser = new pb::MessageParser<c2l_fishing_success>(() => new c2l_fishing_success());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_fishing_success> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[106]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_fishing_success() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_fishing_success(c2l_fishing_success other) : this() {
    fishingSpace_ = other.fishingSpace_;
    randomInfo_ = other.randomInfo_ != null ? other.randomInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_fishing_success Clone() {
    return new c2l_fishing_success(this);
  }

  /// <summary>Field number for the "fishing_space" field.</summary>
  public const int FishingSpaceFieldNumber = 1;
  private int fishingSpace_;
  /// <summary>
  /// 渔场ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishingSpace {
    get { return fishingSpace_; }
    set {
      fishingSpace_ = value;
    }
  }

  /// <summary>Field number for the "random_info" field.</summary>
  public const int RandomInfoFieldNumber = 2;
  private global::RandomStageIndex randomInfo_;
  /// <summary>
  /// 随机钓鱼关卡索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RandomStageIndex RandomInfo {
    get { return randomInfo_; }
    set {
      randomInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_fishing_success);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_fishing_success other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FishingSpace != other.FishingSpace) return false;
    if (!object.Equals(RandomInfo, other.RandomInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FishingSpace != 0) hash ^= FishingSpace.GetHashCode();
    if (randomInfo_ != null) hash ^= RandomInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FishingSpace != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FishingSpace);
    }
    if (randomInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(RandomInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FishingSpace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishingSpace);
    }
    if (randomInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_fishing_success other) {
    if (other == null) {
      return;
    }
    if (other.FishingSpace != 0) {
      FishingSpace = other.FishingSpace;
    }
    if (other.randomInfo_ != null) {
      if (randomInfo_ == null) {
        randomInfo_ = new global::RandomStageIndex();
      }
      RandomInfo.MergeFrom(other.RandomInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FishingSpace = input.ReadInt32();
          break;
        }
        case 18: {
          if (randomInfo_ == null) {
            randomInfo_ = new global::RandomStageIndex();
          }
          input.ReadMessage(randomInfo_);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_fishing_success : pb::IMessage<l2c_fishing_success> {
  private static readonly pb::MessageParser<l2c_fishing_success> _parser = new pb::MessageParser<l2c_fishing_success>(() => new l2c_fishing_success());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_fishing_success> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[107]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fishing_success() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fishing_success(l2c_fishing_success other) : this() {
    fishingSpace_ = other.fishingSpace_;
    fishId_ = other.fishId_;
    fishSize_ = other.fishSize_;
    rewards_ = other.rewards_.Clone();
    process_ = other.process_;
    remainSecs_ = other.remainSecs_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_fishing_success Clone() {
    return new l2c_fishing_success(this);
  }

  /// <summary>Field number for the "fishing_space" field.</summary>
  public const int FishingSpaceFieldNumber = 1;
  private int fishingSpace_;
  /// <summary>
  /// 渔场ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishingSpace {
    get { return fishingSpace_; }
    set {
      fishingSpace_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 2;
  private int fishId_;
  /// <summary>
  /// 鱼ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishId {
    get { return fishId_; }
    set {
      fishId_ = value;
    }
  }

  /// <summary>Field number for the "fish_size" field.</summary>
  public const int FishSizeFieldNumber = 3;
  private int fishSize_;
  /// <summary>
  /// 鱼大小
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishSize {
    get { return fishSize_; }
    set {
      fishSize_ = value;
    }
  }

  /// <summary>Field number for the "rewards" field.</summary>
  public const int RewardsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(34, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> rewards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Rewards {
    get { return rewards_; }
  }

  /// <summary>Field number for the "process" field.</summary>
  public const int ProcessFieldNumber = 6;
  private int process_;
  /// <summary>
  /// 随机钓鱼委托完成数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Process {
    get { return process_; }
    set {
      process_ = value;
    }
  }

  /// <summary>Field number for the "remain_secs" field.</summary>
  public const int RemainSecsFieldNumber = 7;
  private long remainSecs_;
  /// <summary>
  /// 剩余秒数（随机钓鱼类型为1时用）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long RemainSecs {
    get { return remainSecs_; }
    set {
      remainSecs_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_fishing_success);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_fishing_success other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FishingSpace != other.FishingSpace) return false;
    if (FishId != other.FishId) return false;
    if (FishSize != other.FishSize) return false;
    if(!rewards_.Equals(other.rewards_)) return false;
    if (Process != other.Process) return false;
    if (RemainSecs != other.RemainSecs) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FishingSpace != 0) hash ^= FishingSpace.GetHashCode();
    if (FishId != 0) hash ^= FishId.GetHashCode();
    if (FishSize != 0) hash ^= FishSize.GetHashCode();
    hash ^= rewards_.GetHashCode();
    if (Process != 0) hash ^= Process.GetHashCode();
    if (RemainSecs != 0L) hash ^= RemainSecs.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FishingSpace != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FishingSpace);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (FishSize != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(FishSize);
    }
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (Process != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Process);
    }
    if (RemainSecs != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(RemainSecs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FishingSpace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishingSpace);
    }
    if (FishId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
    }
    if (FishSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishSize);
    }
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (Process != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Process);
    }
    if (RemainSecs != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainSecs);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_fishing_success other) {
    if (other == null) {
      return;
    }
    if (other.FishingSpace != 0) {
      FishingSpace = other.FishingSpace;
    }
    if (other.FishId != 0) {
      FishId = other.FishId;
    }
    if (other.FishSize != 0) {
      FishSize = other.FishSize;
    }
    rewards_.Add(other.rewards_);
    if (other.Process != 0) {
      Process = other.Process;
    }
    if (other.RemainSecs != 0L) {
      RemainSecs = other.RemainSecs;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FishingSpace = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
        case 24: {
          FishSize = input.ReadInt32();
          break;
        }
        case 34: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
        case 48: {
          Process = input.ReadInt32();
          break;
        }
        case 56: {
          RemainSecs = input.ReadInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_random_fishing_result : pb::IMessage<c2l_random_fishing_result> {
  private static readonly pb::MessageParser<c2l_random_fishing_result> _parser = new pb::MessageParser<c2l_random_fishing_result>(() => new c2l_random_fishing_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_random_fishing_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[108]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_fishing_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_fishing_result(c2l_random_fishing_result other) : this() {
    randomInfo_ = other.randomInfo_ != null ? other.randomInfo_.Clone() : null;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_fishing_result Clone() {
    return new c2l_random_fishing_result(this);
  }

  /// <summary>Field number for the "random_info" field.</summary>
  public const int RandomInfoFieldNumber = 1;
  private global::RandomStageIndex randomInfo_;
  /// <summary>
  /// 随机钓鱼关卡索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RandomStageIndex RandomInfo {
    get { return randomInfo_; }
    set {
      randomInfo_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private bool result_;
  /// <summary>
  /// 钓鱼是否成功
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_random_fishing_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_random_fishing_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RandomInfo, other.RandomInfo)) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (randomInfo_ != null) hash ^= RandomInfo.GetHashCode();
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (randomInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RandomInfo);
    }
    if (Result != false) {
      output.WriteRawTag(16);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (randomInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomInfo);
    }
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_random_fishing_result other) {
    if (other == null) {
      return;
    }
    if (other.randomInfo_ != null) {
      if (randomInfo_ == null) {
        randomInfo_ = new global::RandomStageIndex();
      }
      RandomInfo.MergeFrom(other.RandomInfo);
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (randomInfo_ == null) {
            randomInfo_ = new global::RandomStageIndex();
          }
          input.ReadMessage(randomInfo_);
          break;
        }
        case 16: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_random_fishing_result : pb::IMessage<l2c_random_fishing_result> {
  private static readonly pb::MessageParser<l2c_random_fishing_result> _parser = new pb::MessageParser<l2c_random_fishing_result>(() => new l2c_random_fishing_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_random_fishing_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[109]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_fishing_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_fishing_result(l2c_random_fishing_result other) : this() {
    result_ = other.result_;
    rewards_ = other.rewards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_fishing_result Clone() {
    return new l2c_random_fishing_result(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 流程更新结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "rewards" field.</summary>
  public const int RewardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> rewards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 结算奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Rewards {
    get { return rewards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_random_fishing_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_random_fishing_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if(!rewards_.Equals(other.rewards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    hash ^= rewards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_random_fishing_result other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    rewards_.Add(other.rewards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
        case 18: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_encyclopedia_init : pb::IMessage<c2l_encyclopedia_init> {
  private static readonly pb::MessageParser<c2l_encyclopedia_init> _parser = new pb::MessageParser<c2l_encyclopedia_init>(() => new c2l_encyclopedia_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_encyclopedia_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[110]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_encyclopedia_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_encyclopedia_init(c2l_encyclopedia_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_encyclopedia_init Clone() {
    return new c2l_encyclopedia_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_encyclopedia_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_encyclopedia_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_encyclopedia_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_encyclopedia_init : pb::IMessage<l2c_encyclopedia_init> {
  private static readonly pb::MessageParser<l2c_encyclopedia_init> _parser = new pb::MessageParser<l2c_encyclopedia_init>(() => new l2c_encyclopedia_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_encyclopedia_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[111]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_encyclopedia_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_encyclopedia_init(l2c_encyclopedia_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    values_ = other.values_.Clone();
    readValues_ = other.readValues_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_encyclopedia_init Clone() {
    return new l2c_encyclopedia_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 当前页号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "values" field.</summary>
  public const int ValuesFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_values_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 节点ID(每页最多100条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Values {
    get { return values_; }
  }

  /// <summary>Field number for the "read_values" field.</summary>
  public const int ReadValuesFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_readValues_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> readValues_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 已读节点ID(每页最多100条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ReadValues {
    get { return readValues_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_encyclopedia_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_encyclopedia_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!values_.Equals(other.values_)) return false;
    if(!readValues_.Equals(other.readValues_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= values_.GetHashCode();
    hash ^= readValues_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    values_.WriteTo(output, _repeated_values_codec);
    readValues_.WriteTo(output, _repeated_readValues_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += values_.CalculateSize(_repeated_values_codec);
    size += readValues_.CalculateSize(_repeated_readValues_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_encyclopedia_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    values_.Add(other.values_);
    readValues_.Add(other.readValues_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          values_.AddEntriesFrom(input, _repeated_values_codec);
          break;
        }
        case 34:
        case 32: {
          readValues_.AddEntriesFrom(input, _repeated_readValues_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_encyclopedia_upd : pb::IMessage<l2c_encyclopedia_upd> {
  private static readonly pb::MessageParser<l2c_encyclopedia_upd> _parser = new pb::MessageParser<l2c_encyclopedia_upd>(() => new l2c_encyclopedia_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_encyclopedia_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[112]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_encyclopedia_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_encyclopedia_upd(l2c_encyclopedia_upd other) : this() {
    newNode_ = other.newNode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_encyclopedia_upd Clone() {
    return new l2c_encyclopedia_upd(this);
  }

  /// <summary>Field number for the "new_node" field.</summary>
  public const int NewNodeFieldNumber = 1;
  private int newNode_;
  /// <summary>
  /// 新节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NewNode {
    get { return newNode_; }
    set {
      newNode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_encyclopedia_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_encyclopedia_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NewNode != other.NewNode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NewNode != 0) hash ^= NewNode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NewNode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(NewNode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NewNode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewNode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_encyclopedia_upd other) {
    if (other == null) {
      return;
    }
    if (other.NewNode != 0) {
      NewNode = other.NewNode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          NewNode = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_encyclopedia_read : pb::IMessage<c2l_encyclopedia_read> {
  private static readonly pb::MessageParser<c2l_encyclopedia_read> _parser = new pb::MessageParser<c2l_encyclopedia_read>(() => new c2l_encyclopedia_read());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_encyclopedia_read> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[113]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_encyclopedia_read() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_encyclopedia_read(c2l_encyclopedia_read other) : this() {
    readNode_ = other.readNode_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_encyclopedia_read Clone() {
    return new c2l_encyclopedia_read(this);
  }

  /// <summary>Field number for the "read_node" field.</summary>
  public const int ReadNodeFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_readNode_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> readNode_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 新节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ReadNode {
    get { return readNode_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_encyclopedia_read);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_encyclopedia_read other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!readNode_.Equals(other.readNode_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= readNode_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    readNode_.WriteTo(output, _repeated_readNode_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += readNode_.CalculateSize(_repeated_readNode_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_encyclopedia_read other) {
    if (other == null) {
      return;
    }
    readNode_.Add(other.readNode_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          readNode_.AddEntriesFrom(input, _repeated_readNode_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_wechat_msg : pb::IMessage<l2c_wechat_msg> {
  private static readonly pb::MessageParser<l2c_wechat_msg> _parser = new pb::MessageParser<l2c_wechat_msg>(() => new l2c_wechat_msg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_wechat_msg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[114]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_msg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_msg(l2c_wechat_msg other) : this() {
    id_ = other.id_;
    time_ = other.time_;
    complete_ = other.complete_;
    nodes_ = other.nodes_.Clone();
    choices_ = other.choices_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_msg Clone() {
    return new l2c_wechat_msg(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 消息段ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 3;
  private long time_;
  /// <summary>
  ///int32				group		= 2; // 消息组(多段消息同属于某一个消息组)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "complete" field.</summary>
  public const int CompleteFieldNumber = 4;
  private bool complete_;
  /// <summary>
  /// 完成状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Complete {
    get { return complete_; }
    set {
      complete_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 剧情节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  /// <summary>Field number for the "choices" field.</summary>
  public const int ChoicesFieldNumber = 6;
  private static readonly pb::FieldCodec<int> _repeated_choices_codec
      = pb::FieldCodec.ForInt32(50);
  private readonly pbc::RepeatedField<int> choices_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 玩家选项
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Choices {
    get { return choices_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_wechat_msg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_wechat_msg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Time != other.Time) return false;
    if (Complete != other.Complete) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    if(!choices_.Equals(other.choices_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Time != 0L) hash ^= Time.GetHashCode();
    if (Complete != false) hash ^= Complete.GetHashCode();
    hash ^= nodes_.GetHashCode();
    hash ^= choices_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Time != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(Time);
    }
    if (Complete != false) {
      output.WriteRawTag(32);
      output.WriteBool(Complete);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    choices_.WriteTo(output, _repeated_choices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
    }
    if (Complete != false) {
      size += 1 + 1;
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    size += choices_.CalculateSize(_repeated_choices_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_wechat_msg other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Time != 0L) {
      Time = other.Time;
    }
    if (other.Complete != false) {
      Complete = other.Complete;
    }
    nodes_.Add(other.nodes_);
    choices_.Add(other.choices_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          Time = input.ReadInt64();
          break;
        }
        case 32: {
          Complete = input.ReadBool();
          break;
        }
        case 42:
        case 40: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
        case 50:
        case 48: {
          choices_.AddEntriesFrom(input, _repeated_choices_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_wechat_voice : pb::IMessage<l2c_wechat_voice> {
  private static readonly pb::MessageParser<l2c_wechat_voice> _parser = new pb::MessageParser<l2c_wechat_voice>(() => new l2c_wechat_voice());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_wechat_voice> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[115]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_voice() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_voice(l2c_wechat_voice other) : this() {
    id_ = other.id_;
    time_ = other.time_;
    complete_ = other.complete_;
    nodes_ = other.nodes_.Clone();
    choices_ = other.choices_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_voice Clone() {
    return new l2c_wechat_voice(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 语音ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 3;
  private long time_;
  /// <summary>
  ///int32				character	= 2; // 通话角色
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "complete" field.</summary>
  public const int CompleteFieldNumber = 4;
  private int complete_;
  /// <summary>
  /// 完成状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Complete {
    get { return complete_; }
    set {
      complete_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 剧情节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  /// <summary>Field number for the "choices" field.</summary>
  public const int ChoicesFieldNumber = 6;
  private static readonly pb::FieldCodec<int> _repeated_choices_codec
      = pb::FieldCodec.ForInt32(50);
  private readonly pbc::RepeatedField<int> choices_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 玩家选项
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Choices {
    get { return choices_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_wechat_voice);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_wechat_voice other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Time != other.Time) return false;
    if (Complete != other.Complete) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    if(!choices_.Equals(other.choices_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Time != 0L) hash ^= Time.GetHashCode();
    if (Complete != 0) hash ^= Complete.GetHashCode();
    hash ^= nodes_.GetHashCode();
    hash ^= choices_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Time != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(Time);
    }
    if (Complete != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Complete);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    choices_.WriteTo(output, _repeated_choices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
    }
    if (Complete != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Complete);
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    size += choices_.CalculateSize(_repeated_choices_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_wechat_voice other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Time != 0L) {
      Time = other.Time;
    }
    if (other.Complete != 0) {
      Complete = other.Complete;
    }
    nodes_.Add(other.nodes_);
    choices_.Add(other.choices_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          Time = input.ReadInt64();
          break;
        }
        case 32: {
          Complete = input.ReadInt32();
          break;
        }
        case 42:
        case 40: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
        case 50:
        case 48: {
          choices_.AddEntriesFrom(input, _repeated_choices_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_wechat_official_account : pb::IMessage<l2c_wechat_official_account> {
  private static readonly pb::MessageParser<l2c_wechat_official_account> _parser = new pb::MessageParser<l2c_wechat_official_account>(() => new l2c_wechat_official_account());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_wechat_official_account> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[116]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_official_account() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_official_account(l2c_wechat_official_account other) : this() {
    id_ = other.id_;
    isRead_ = other.isRead_;
    time_ = other.time_;
    tapinfo_ = other.tapinfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_official_account Clone() {
    return new l2c_wechat_official_account(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 公众号ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "is_read" field.</summary>
  public const int IsReadFieldNumber = 2;
  private bool isRead_;
  /// <summary>
  /// 阅读状态(true:已阅 false:未阅)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsRead {
    get { return isRead_; }
    set {
      isRead_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 3;
  private long time_;
  /// <summary>
  /// 时间(触发与操作的时候更新)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "tapinfo" field.</summary>
  public const int TapinfoFieldNumber = 6;
  private static readonly pb::FieldCodec<global::l2c_wechat_official_account.Types.TapInfo> _repeated_tapinfo_codec
      = pb::FieldCodec.ForMessage(50, global::l2c_wechat_official_account.Types.TapInfo.Parser);
  private readonly pbc::RepeatedField<global::l2c_wechat_official_account.Types.TapInfo> tapinfo_ = new pbc::RepeatedField<global::l2c_wechat_official_account.Types.TapInfo>();
  /// <summary>
  /// 点赞状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_wechat_official_account.Types.TapInfo> Tapinfo {
    get { return tapinfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_wechat_official_account);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_wechat_official_account other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (IsRead != other.IsRead) return false;
    if (Time != other.Time) return false;
    if(!tapinfo_.Equals(other.tapinfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (IsRead != false) hash ^= IsRead.GetHashCode();
    if (Time != 0L) hash ^= Time.GetHashCode();
    hash ^= tapinfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (IsRead != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsRead);
    }
    if (Time != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(Time);
    }
    tapinfo_.WriteTo(output, _repeated_tapinfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (IsRead != false) {
      size += 1 + 1;
    }
    if (Time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
    }
    size += tapinfo_.CalculateSize(_repeated_tapinfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_wechat_official_account other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.IsRead != false) {
      IsRead = other.IsRead;
    }
    if (other.Time != 0L) {
      Time = other.Time;
    }
    tapinfo_.Add(other.tapinfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          IsRead = input.ReadBool();
          break;
        }
        case 24: {
          Time = input.ReadInt64();
          break;
        }
        case 50: {
          tapinfo_.AddEntriesFrom(input, _repeated_tapinfo_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_wechat_official_account message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class TapInfo : pb::IMessage<TapInfo> {
      private static readonly pb::MessageParser<TapInfo> _parser = new pb::MessageParser<TapInfo>(() => new TapInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<TapInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_wechat_official_account.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public TapInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public TapInfo(TapInfo other) : this() {
        comment_ = other.comment_;
        tapNum_ = other.tapNum_;
        tapState_ = other.tapState_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public TapInfo Clone() {
        return new TapInfo(this);
      }

      /// <summary>Field number for the "comment" field.</summary>
      public const int CommentFieldNumber = 1;
      private int comment_;
      /// <summary>
      /// 评论ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Comment {
        get { return comment_; }
        set {
          comment_ = value;
        }
      }

      /// <summary>Field number for the "tap_num" field.</summary>
      public const int TapNumFieldNumber = 2;
      private int tapNum_;
      /// <summary>
      /// 点赞数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int TapNum {
        get { return tapNum_; }
        set {
          tapNum_ = value;
        }
      }

      /// <summary>Field number for the "tap_state" field.</summary>
      public const int TapStateFieldNumber = 3;
      private bool tapState_;
      /// <summary>
      /// 点赞状态(true:已赞 false:)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool TapState {
        get { return tapState_; }
        set {
          tapState_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as TapInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(TapInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Comment != other.Comment) return false;
        if (TapNum != other.TapNum) return false;
        if (TapState != other.TapState) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Comment != 0) hash ^= Comment.GetHashCode();
        if (TapNum != 0) hash ^= TapNum.GetHashCode();
        if (TapState != false) hash ^= TapState.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Comment != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Comment);
        }
        if (TapNum != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(TapNum);
        }
        if (TapState != false) {
          output.WriteRawTag(24);
          output.WriteBool(TapState);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Comment != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Comment);
        }
        if (TapNum != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(TapNum);
        }
        if (TapState != false) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(TapInfo other) {
        if (other == null) {
          return;
        }
        if (other.Comment != 0) {
          Comment = other.Comment;
        }
        if (other.TapNum != 0) {
          TapNum = other.TapNum;
        }
        if (other.TapState != false) {
          TapState = other.TapState;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Comment = input.ReadInt32();
              break;
            }
            case 16: {
              TapNum = input.ReadInt32();
              break;
            }
            case 24: {
              TapState = input.ReadBool();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_wechat_init : pb::IMessage<c2l_wechat_init> {
  private static readonly pb::MessageParser<c2l_wechat_init> _parser = new pb::MessageParser<c2l_wechat_init>(() => new c2l_wechat_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_wechat_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[117]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_init(c2l_wechat_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_init Clone() {
    return new c2l_wechat_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_wechat_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_wechat_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_wechat_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_wechat_msg_init : pb::IMessage<l2c_wechat_msg_init> {
  private static readonly pb::MessageParser<l2c_wechat_msg_init> _parser = new pb::MessageParser<l2c_wechat_msg_init>(() => new l2c_wechat_msg_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_wechat_msg_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[118]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_msg_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_msg_init(l2c_wechat_msg_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    records_ = other.records_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_msg_init Clone() {
    return new l2c_wechat_msg_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(>=0)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 页号(从1开始第一页)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "records" field.</summary>
  public const int RecordsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_wechat_msg> _repeated_records_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_wechat_msg.Parser);
  private readonly pbc::RepeatedField<global::l2c_wechat_msg> records_ = new pbc::RepeatedField<global::l2c_wechat_msg>();
  /// <summary>
  /// 当前页数据(每页最多20条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_wechat_msg> Records {
    get { return records_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_wechat_msg_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_wechat_msg_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!records_.Equals(other.records_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= records_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    records_.WriteTo(output, _repeated_records_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += records_.CalculateSize(_repeated_records_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_wechat_msg_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    records_.Add(other.records_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          records_.AddEntriesFrom(input, _repeated_records_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_wechat_voice_init : pb::IMessage<l2c_wechat_voice_init> {
  private static readonly pb::MessageParser<l2c_wechat_voice_init> _parser = new pb::MessageParser<l2c_wechat_voice_init>(() => new l2c_wechat_voice_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_wechat_voice_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[119]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_voice_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_voice_init(l2c_wechat_voice_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    records_ = other.records_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_voice_init Clone() {
    return new l2c_wechat_voice_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(>=0)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 页号(从1开始第一页)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "records" field.</summary>
  public const int RecordsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_wechat_voice> _repeated_records_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_wechat_voice.Parser);
  private readonly pbc::RepeatedField<global::l2c_wechat_voice> records_ = new pbc::RepeatedField<global::l2c_wechat_voice>();
  /// <summary>
  /// 当前页数据(每页最多20条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_wechat_voice> Records {
    get { return records_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_wechat_voice_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_wechat_voice_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!records_.Equals(other.records_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= records_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    records_.WriteTo(output, _repeated_records_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += records_.CalculateSize(_repeated_records_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_wechat_voice_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    records_.Add(other.records_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          records_.AddEntriesFrom(input, _repeated_records_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_wechat_official_account_init : pb::IMessage<l2c_wechat_official_account_init> {
  private static readonly pb::MessageParser<l2c_wechat_official_account_init> _parser = new pb::MessageParser<l2c_wechat_official_account_init>(() => new l2c_wechat_official_account_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_wechat_official_account_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[120]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_official_account_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_official_account_init(l2c_wechat_official_account_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    records_ = other.records_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_official_account_init Clone() {
    return new l2c_wechat_official_account_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(>=0)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 页号(从1开始第一页)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "records" field.</summary>
  public const int RecordsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_wechat_official_account> _repeated_records_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_wechat_official_account.Parser);
  private readonly pbc::RepeatedField<global::l2c_wechat_official_account> records_ = new pbc::RepeatedField<global::l2c_wechat_official_account>();
  /// <summary>
  /// 当前页数据(每页最多20条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_wechat_official_account> Records {
    get { return records_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_wechat_official_account_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_wechat_official_account_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!records_.Equals(other.records_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= records_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    records_.WriteTo(output, _repeated_records_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += records_.CalculateSize(_repeated_records_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_wechat_official_account_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    records_.Add(other.records_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          records_.AddEntriesFrom(input, _repeated_records_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_wechat_msg_upd : pb::IMessage<c2l_wechat_msg_upd> {
  private static readonly pb::MessageParser<c2l_wechat_msg_upd> _parser = new pb::MessageParser<c2l_wechat_msg_upd>(() => new c2l_wechat_msg_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_wechat_msg_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[121]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_msg_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_msg_upd(c2l_wechat_msg_upd other) : this() {
    id_ = other.id_;
    complete_ = other.complete_;
    nodes_ = other.nodes_.Clone();
    choices_ = other.choices_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_msg_upd Clone() {
    return new c2l_wechat_msg_upd(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 消息段ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "complete" field.</summary>
  public const int CompleteFieldNumber = 2;
  private bool complete_;
  /// <summary>
  /// 完成状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Complete {
    get { return complete_; }
    set {
      complete_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 剧情节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  /// <summary>Field number for the "choices" field.</summary>
  public const int ChoicesFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_choices_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> choices_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 玩家选项
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Choices {
    get { return choices_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_wechat_msg_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_wechat_msg_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Complete != other.Complete) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    if(!choices_.Equals(other.choices_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Complete != false) hash ^= Complete.GetHashCode();
    hash ^= nodes_.GetHashCode();
    hash ^= choices_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Complete != false) {
      output.WriteRawTag(16);
      output.WriteBool(Complete);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    choices_.WriteTo(output, _repeated_choices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Complete != false) {
      size += 1 + 1;
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    size += choices_.CalculateSize(_repeated_choices_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_wechat_msg_upd other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Complete != false) {
      Complete = other.Complete;
    }
    nodes_.Add(other.nodes_);
    choices_.Add(other.choices_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Complete = input.ReadBool();
          break;
        }
        case 26:
        case 24: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
        case 34:
        case 32: {
          choices_.AddEntriesFrom(input, _repeated_choices_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_wechat_voice_upd : pb::IMessage<c2l_wechat_voice_upd> {
  private static readonly pb::MessageParser<c2l_wechat_voice_upd> _parser = new pb::MessageParser<c2l_wechat_voice_upd>(() => new c2l_wechat_voice_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_wechat_voice_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[122]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_voice_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_voice_upd(c2l_wechat_voice_upd other) : this() {
    id_ = other.id_;
    complete_ = other.complete_;
    nodes_ = other.nodes_.Clone();
    choices_ = other.choices_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_voice_upd Clone() {
    return new c2l_wechat_voice_upd(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 语音ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "complete" field.</summary>
  public const int CompleteFieldNumber = 2;
  private int complete_;
  /// <summary>
  /// 完成状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Complete {
    get { return complete_; }
    set {
      complete_ = value;
    }
  }

  /// <summary>Field number for the "nodes" field.</summary>
  public const int NodesFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_nodes_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> nodes_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 剧情节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Nodes {
    get { return nodes_; }
  }

  /// <summary>Field number for the "choices" field.</summary>
  public const int ChoicesFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_choices_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> choices_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 玩家选项
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Choices {
    get { return choices_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_wechat_voice_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_wechat_voice_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Complete != other.Complete) return false;
    if(!nodes_.Equals(other.nodes_)) return false;
    if(!choices_.Equals(other.choices_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Complete != 0) hash ^= Complete.GetHashCode();
    hash ^= nodes_.GetHashCode();
    hash ^= choices_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Complete != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Complete);
    }
    nodes_.WriteTo(output, _repeated_nodes_codec);
    choices_.WriteTo(output, _repeated_choices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Complete != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Complete);
    }
    size += nodes_.CalculateSize(_repeated_nodes_codec);
    size += choices_.CalculateSize(_repeated_choices_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_wechat_voice_upd other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Complete != 0) {
      Complete = other.Complete;
    }
    nodes_.Add(other.nodes_);
    choices_.Add(other.choices_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Complete = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
          break;
        }
        case 34:
        case 32: {
          choices_.AddEntriesFrom(input, _repeated_choices_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_wechat_official_account_upd : pb::IMessage<c2l_wechat_official_account_upd> {
  private static readonly pb::MessageParser<c2l_wechat_official_account_upd> _parser = new pb::MessageParser<c2l_wechat_official_account_upd>(() => new c2l_wechat_official_account_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_wechat_official_account_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[123]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_official_account_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_official_account_upd(c2l_wechat_official_account_upd other) : this() {
    id_ = other.id_;
    comment_ = other.comment_;
    tapState_ = other.tapState_;
    isRead_ = other.isRead_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_official_account_upd Clone() {
    return new c2l_wechat_official_account_upd(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 公众号ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "comment" field.</summary>
  public const int CommentFieldNumber = 2;
  private int comment_;
  /// <summary>
  /// 评论ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Comment {
    get { return comment_; }
    set {
      comment_ = value;
    }
  }

  /// <summary>Field number for the "tap_state" field.</summary>
  public const int TapStateFieldNumber = 3;
  private bool tapState_;
  /// <summary>
  /// 点赞行为(true:已赞 false:未赞)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool TapState {
    get { return tapState_; }
    set {
      tapState_ = value;
    }
  }

  /// <summary>Field number for the "is_read" field.</summary>
  public const int IsReadFieldNumber = 4;
  private bool isRead_;
  /// <summary>
  /// 阅读行为(true:已阅 false:未阅)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsRead {
    get { return isRead_; }
    set {
      isRead_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_wechat_official_account_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_wechat_official_account_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Comment != other.Comment) return false;
    if (TapState != other.TapState) return false;
    if (IsRead != other.IsRead) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Comment != 0) hash ^= Comment.GetHashCode();
    if (TapState != false) hash ^= TapState.GetHashCode();
    if (IsRead != false) hash ^= IsRead.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Comment != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Comment);
    }
    if (TapState != false) {
      output.WriteRawTag(24);
      output.WriteBool(TapState);
    }
    if (IsRead != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsRead);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Comment != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Comment);
    }
    if (TapState != false) {
      size += 1 + 1;
    }
    if (IsRead != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_wechat_official_account_upd other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Comment != 0) {
      Comment = other.Comment;
    }
    if (other.TapState != false) {
      TapState = other.TapState;
    }
    if (other.IsRead != false) {
      IsRead = other.IsRead;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Comment = input.ReadInt32();
          break;
        }
        case 24: {
          TapState = input.ReadBool();
          break;
        }
        case 32: {
          IsRead = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_wechat_nickname_init : pb::IMessage<l2c_wechat_nickname_init> {
  private static readonly pb::MessageParser<l2c_wechat_nickname_init> _parser = new pb::MessageParser<l2c_wechat_nickname_init>(() => new l2c_wechat_nickname_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_wechat_nickname_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[124]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_nickname_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_nickname_init(l2c_wechat_nickname_init other) : this() {
    nicknames_ = other.nicknames_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_nickname_init Clone() {
    return new l2c_wechat_nickname_init(this);
  }

  /// <summary>Field number for the "nicknames" field.</summary>
  public const int NicknamesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_wechat_nickname_init.Types.WechatNickNameInfo> _repeated_nicknames_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_wechat_nickname_init.Types.WechatNickNameInfo.Parser);
  private readonly pbc::RepeatedField<global::l2c_wechat_nickname_init.Types.WechatNickNameInfo> nicknames_ = new pbc::RepeatedField<global::l2c_wechat_nickname_init.Types.WechatNickNameInfo>();
  /// <summary>
  /// 男主备注名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_wechat_nickname_init.Types.WechatNickNameInfo> Nicknames {
    get { return nicknames_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_wechat_nickname_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_wechat_nickname_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!nicknames_.Equals(other.nicknames_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= nicknames_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    nicknames_.WriteTo(output, _repeated_nicknames_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += nicknames_.CalculateSize(_repeated_nicknames_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_wechat_nickname_init other) {
    if (other == null) {
      return;
    }
    nicknames_.Add(other.nicknames_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          nicknames_.AddEntriesFrom(input, _repeated_nicknames_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_wechat_nickname_init message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class WechatNickNameInfo : pb::IMessage<WechatNickNameInfo> {
      private static readonly pb::MessageParser<WechatNickNameInfo> _parser = new pb::MessageParser<WechatNickNameInfo>(() => new WechatNickNameInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<WechatNickNameInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_wechat_nickname_init.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public WechatNickNameInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public WechatNickNameInfo(WechatNickNameInfo other) : this() {
        id_ = other.id_;
        nickname_ = other.nickname_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public WechatNickNameInfo Clone() {
        return new WechatNickNameInfo(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// 男主ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "nickname" field.</summary>
      public const int NicknameFieldNumber = 2;
      private string nickname_ = "";
      /// <summary>
      /// 备注名
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Nickname {
        get { return nickname_; }
        set {
          nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as WechatNickNameInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(WechatNickNameInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Nickname != other.Nickname) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Nickname.Length != 0) {
          output.WriteRawTag(18);
          output.WriteString(Nickname);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Nickname.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(WechatNickNameInfo other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Nickname.Length != 0) {
          Nickname = other.Nickname;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 18: {
              Nickname = input.ReadString();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_wechat_nickname_rename : pb::IMessage<c2l_wechat_nickname_rename> {
  private static readonly pb::MessageParser<c2l_wechat_nickname_rename> _parser = new pb::MessageParser<c2l_wechat_nickname_rename>(() => new c2l_wechat_nickname_rename());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_wechat_nickname_rename> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[125]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_nickname_rename() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_nickname_rename(c2l_wechat_nickname_rename other) : this() {
    id_ = other.id_;
    nickname_ = other.nickname_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_wechat_nickname_rename Clone() {
    return new c2l_wechat_nickname_rename(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 通讯录ID（WeChatList里ID那一列）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 2;
  private string nickname_ = "";
  /// <summary>
  /// 备注名（传空表示重置备注名）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_wechat_nickname_rename);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_wechat_nickname_rename other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Nickname != other.Nickname) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_wechat_nickname_rename other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Nickname = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_wechat_nickname_rename : pb::IMessage<l2c_wechat_nickname_rename> {
  private static readonly pb::MessageParser<l2c_wechat_nickname_rename> _parser = new pb::MessageParser<l2c_wechat_nickname_rename>(() => new l2c_wechat_nickname_rename());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_wechat_nickname_rename> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[126]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_nickname_rename() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_nickname_rename(l2c_wechat_nickname_rename other) : this() {
    id_ = other.id_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_wechat_nickname_rename Clone() {
    return new l2c_wechat_nickname_rename(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 通讯录ID（WeChatList里ID那一列）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private int result_;
  /// <summary>
  /// 0：角色不存在 1：通过 2：备注名包含非法词
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_wechat_nickname_rename);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_wechat_nickname_rename other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Result != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_wechat_nickname_rename other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Result = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 充值-------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class c2l_generate_recharge_order : pb::IMessage<c2l_generate_recharge_order> {
  private static readonly pb::MessageParser<c2l_generate_recharge_order> _parser = new pb::MessageParser<c2l_generate_recharge_order>(() => new c2l_generate_recharge_order());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_generate_recharge_order> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[127]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_generate_recharge_order() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_generate_recharge_order(c2l_generate_recharge_order other) : this() {
    commodityId_ = other.commodityId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_generate_recharge_order Clone() {
    return new c2l_generate_recharge_order(this);
  }

  /// <summary>Field number for the "commodity_id" field.</summary>
  public const int CommodityIdFieldNumber = 1;
  private int commodityId_;
  /// <summary>
  /// 商品ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CommodityId {
    get { return commodityId_; }
    set {
      commodityId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_generate_recharge_order);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_generate_recharge_order other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CommodityId != other.CommodityId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CommodityId != 0) hash ^= CommodityId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CommodityId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CommodityId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CommodityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommodityId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_generate_recharge_order other) {
    if (other == null) {
      return;
    }
    if (other.CommodityId != 0) {
      CommodityId = other.CommodityId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CommodityId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_generate_recharge_order : pb::IMessage<l2c_generate_recharge_order> {
  private static readonly pb::MessageParser<l2c_generate_recharge_order> _parser = new pb::MessageParser<l2c_generate_recharge_order>(() => new l2c_generate_recharge_order());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_generate_recharge_order> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[128]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_generate_recharge_order() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_generate_recharge_order(l2c_generate_recharge_order other) : this() {
    appOrderNo_ = other.appOrderNo_;
    throughParam_ = other.throughParam_;
    isTest_ = other.isTest_;
    commodityId_ = other.commodityId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_generate_recharge_order Clone() {
    return new l2c_generate_recharge_order(this);
  }

  /// <summary>Field number for the "app_order_no" field.</summary>
  public const int AppOrderNoFieldNumber = 1;
  private string appOrderNo_ = "";
  /// <summary>
  /// 游戏订单号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AppOrderNo {
    get { return appOrderNo_; }
    set {
      appOrderNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "through_param" field.</summary>
  public const int ThroughParamFieldNumber = 2;
  private string throughParam_ = "";
  /// <summary>
  /// 透参
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ThroughParam {
    get { return throughParam_; }
    set {
      throughParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "is_test" field.</summary>
  public const int IsTestFieldNumber = 3;
  private bool isTest_;
  /// <summary>
  /// 是否为模拟充值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsTest {
    get { return isTest_; }
    set {
      isTest_ = value;
    }
  }

  /// <summary>Field number for the "commodity_id" field.</summary>
  public const int CommodityIdFieldNumber = 4;
  private int commodityId_;
  /// <summary>
  /// 商品ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CommodityId {
    get { return commodityId_; }
    set {
      commodityId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_generate_recharge_order);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_generate_recharge_order other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppOrderNo != other.AppOrderNo) return false;
    if (ThroughParam != other.ThroughParam) return false;
    if (IsTest != other.IsTest) return false;
    if (CommodityId != other.CommodityId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AppOrderNo.Length != 0) hash ^= AppOrderNo.GetHashCode();
    if (ThroughParam.Length != 0) hash ^= ThroughParam.GetHashCode();
    if (IsTest != false) hash ^= IsTest.GetHashCode();
    if (CommodityId != 0) hash ^= CommodityId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AppOrderNo.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AppOrderNo);
    }
    if (ThroughParam.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ThroughParam);
    }
    if (IsTest != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsTest);
    }
    if (CommodityId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(CommodityId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AppOrderNo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AppOrderNo);
    }
    if (ThroughParam.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ThroughParam);
    }
    if (IsTest != false) {
      size += 1 + 1;
    }
    if (CommodityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommodityId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_generate_recharge_order other) {
    if (other == null) {
      return;
    }
    if (other.AppOrderNo.Length != 0) {
      AppOrderNo = other.AppOrderNo;
    }
    if (other.ThroughParam.Length != 0) {
      ThroughParam = other.ThroughParam;
    }
    if (other.IsTest != false) {
      IsTest = other.IsTest;
    }
    if (other.CommodityId != 0) {
      CommodityId = other.CommodityId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AppOrderNo = input.ReadString();
          break;
        }
        case 18: {
          ThroughParam = input.ReadString();
          break;
        }
        case 24: {
          IsTest = input.ReadBool();
          break;
        }
        case 32: {
          CommodityId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_recharge_order_upd : pb::IMessage<l2c_recharge_order_upd> {
  private static readonly pb::MessageParser<l2c_recharge_order_upd> _parser = new pb::MessageParser<l2c_recharge_order_upd>(() => new l2c_recharge_order_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_recharge_order_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[129]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_order_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_order_upd(l2c_recharge_order_upd other) : this() {
    appOrderNo_ = other.appOrderNo_;
    eles_ = other.eles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_order_upd Clone() {
    return new l2c_recharge_order_upd(this);
  }

  /// <summary>Field number for the "app_order_no" field.</summary>
  public const int AppOrderNoFieldNumber = 1;
  private string appOrderNo_ = "";
  /// <summary>
  /// 游戏订单号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AppOrderNo {
    get { return appOrderNo_; }
    set {
      appOrderNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "eles" field.</summary>
  public const int ElesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_eles_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> eles_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 购买得到的元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Eles {
    get { return eles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_recharge_order_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_recharge_order_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppOrderNo != other.AppOrderNo) return false;
    if(!eles_.Equals(other.eles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AppOrderNo.Length != 0) hash ^= AppOrderNo.GetHashCode();
    hash ^= eles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AppOrderNo.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AppOrderNo);
    }
    eles_.WriteTo(output, _repeated_eles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AppOrderNo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AppOrderNo);
    }
    size += eles_.CalculateSize(_repeated_eles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_recharge_order_upd other) {
    if (other == null) {
      return;
    }
    if (other.AppOrderNo.Length != 0) {
      AppOrderNo = other.AppOrderNo;
    }
    eles_.Add(other.eles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AppOrderNo = input.ReadString();
          break;
        }
        case 18: {
          eles_.AddEntriesFrom(input, _repeated_eles_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_recharge_goods_upd : pb::IMessage<l2c_recharge_goods_upd> {
  private static readonly pb::MessageParser<l2c_recharge_goods_upd> _parser = new pb::MessageParser<l2c_recharge_goods_upd>(() => new l2c_recharge_goods_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_recharge_goods_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[130]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_goods_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_goods_upd(l2c_recharge_goods_upd other) : this() {
    sumInfo_ = other.sumInfo_.Clone();
    doubleGoods_ = other.doubleGoods_.Clone();
    isCost_ = other.isCost_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_goods_upd Clone() {
    return new l2c_recharge_goods_upd(this);
  }

  /// <summary>Field number for the "sum_info" field.</summary>
  public const int SumInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_recharge_goods_upd.Types.SumRechargeInfo> _repeated_sumInfo_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_recharge_goods_upd.Types.SumRechargeInfo.Parser);
  private readonly pbc::RepeatedField<global::l2c_recharge_goods_upd.Types.SumRechargeInfo> sumInfo_ = new pbc::RepeatedField<global::l2c_recharge_goods_upd.Types.SumRechargeInfo>();
  /// <summary>
  /// 累充信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_recharge_goods_upd.Types.SumRechargeInfo> SumInfo {
    get { return sumInfo_; }
  }

  /// <summary>Field number for the "double_goods" field.</summary>
  public const int DoubleGoodsFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_doubleGoods_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> doubleGoods_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 已购买的首冲双倍商品
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> DoubleGoods {
    get { return doubleGoods_; }
  }

  /// <summary>Field number for the "is_cost" field.</summary>
  public const int IsCostFieldNumber = 3;
  private bool isCost_;
  /// <summary>
  /// 首充奖励标记(0:玩家没领取 1:玩家领取过)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsCost {
    get { return isCost_; }
    set {
      isCost_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_recharge_goods_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_recharge_goods_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!sumInfo_.Equals(other.sumInfo_)) return false;
    if(!doubleGoods_.Equals(other.doubleGoods_)) return false;
    if (IsCost != other.IsCost) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= sumInfo_.GetHashCode();
    hash ^= doubleGoods_.GetHashCode();
    if (IsCost != false) hash ^= IsCost.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    sumInfo_.WriteTo(output, _repeated_sumInfo_codec);
    doubleGoods_.WriteTo(output, _repeated_doubleGoods_codec);
    if (IsCost != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsCost);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += sumInfo_.CalculateSize(_repeated_sumInfo_codec);
    size += doubleGoods_.CalculateSize(_repeated_doubleGoods_codec);
    if (IsCost != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_recharge_goods_upd other) {
    if (other == null) {
      return;
    }
    sumInfo_.Add(other.sumInfo_);
    doubleGoods_.Add(other.doubleGoods_);
    if (other.IsCost != false) {
      IsCost = other.IsCost;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          sumInfo_.AddEntriesFrom(input, _repeated_sumInfo_codec);
          break;
        }
        case 18:
        case 16: {
          doubleGoods_.AddEntriesFrom(input, _repeated_doubleGoods_codec);
          break;
        }
        case 24: {
          IsCost = input.ReadBool();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_recharge_goods_upd message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class SumRechargeInfo : pb::IMessage<SumRechargeInfo> {
      private static readonly pb::MessageParser<SumRechargeInfo> _parser = new pb::MessageParser<SumRechargeInfo>(() => new SumRechargeInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<SumRechargeInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_recharge_goods_upd.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public SumRechargeInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public SumRechargeInfo(SumRechargeInfo other) : this() {
        activeId_ = other.activeId_;
        sumMoney_ = other.sumMoney_;
        canAwardId_ = other.canAwardId_.Clone();
        ownAwardId_ = other.ownAwardId_.Clone();
        deadline_ = other.deadline_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public SumRechargeInfo Clone() {
        return new SumRechargeInfo(this);
      }

      /// <summary>Field number for the "active_id" field.</summary>
      public const int ActiveIdFieldNumber = 1;
      private int activeId_;
      /// <summary>
      /// 活动ID，0:总累充 other:对应活动ID(总累充暂时没有档位奖励)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int ActiveId {
        get { return activeId_; }
        set {
          activeId_ = value;
        }
      }

      /// <summary>Field number for the "sum_money" field.</summary>
      public const int SumMoneyFieldNumber = 2;
      private long sumMoney_;
      /// <summary>
      /// 累计金额（扩大100倍的金额）
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public long SumMoney {
        get { return sumMoney_; }
        set {
          sumMoney_ = value;
        }
      }

      /// <summary>Field number for the "can_award_id" field.</summary>
      public const int CanAwardIdFieldNumber = 3;
      private static readonly pb::FieldCodec<int> _repeated_canAwardId_codec
          = pb::FieldCodec.ForInt32(26);
      private readonly pbc::RepeatedField<int> canAwardId_ = new pbc::RepeatedField<int>();
      /// <summary>
      /// 可领取奖励奖励档位ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<int> CanAwardId {
        get { return canAwardId_; }
      }

      /// <summary>Field number for the "own_award_id" field.</summary>
      public const int OwnAwardIdFieldNumber = 4;
      private static readonly pb::FieldCodec<int> _repeated_ownAwardId_codec
          = pb::FieldCodec.ForInt32(34);
      private readonly pbc::RepeatedField<int> ownAwardId_ = new pbc::RepeatedField<int>();
      /// <summary>
      /// 已领取奖励奖励档位ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<int> OwnAwardId {
        get { return ownAwardId_; }
      }

      /// <summary>Field number for the "deadline" field.</summary>
      public const int DeadlineFieldNumber = 5;
      private long deadline_;
      /// <summary>
      /// 剩余时间(单位:s，累充没有此值)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public long Deadline {
        get { return deadline_; }
        set {
          deadline_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as SumRechargeInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(SumRechargeInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ActiveId != other.ActiveId) return false;
        if (SumMoney != other.SumMoney) return false;
        if(!canAwardId_.Equals(other.canAwardId_)) return false;
        if(!ownAwardId_.Equals(other.ownAwardId_)) return false;
        if (Deadline != other.Deadline) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (ActiveId != 0) hash ^= ActiveId.GetHashCode();
        if (SumMoney != 0L) hash ^= SumMoney.GetHashCode();
        hash ^= canAwardId_.GetHashCode();
        hash ^= ownAwardId_.GetHashCode();
        if (Deadline != 0L) hash ^= Deadline.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (ActiveId != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(ActiveId);
        }
        if (SumMoney != 0L) {
          output.WriteRawTag(16);
          output.WriteInt64(SumMoney);
        }
        canAwardId_.WriteTo(output, _repeated_canAwardId_codec);
        ownAwardId_.WriteTo(output, _repeated_ownAwardId_codec);
        if (Deadline != 0L) {
          output.WriteRawTag(40);
          output.WriteInt64(Deadline);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (ActiveId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveId);
        }
        if (SumMoney != 0L) {
          size += 1 + pb::CodedOutputStream.ComputeInt64Size(SumMoney);
        }
        size += canAwardId_.CalculateSize(_repeated_canAwardId_codec);
        size += ownAwardId_.CalculateSize(_repeated_ownAwardId_codec);
        if (Deadline != 0L) {
          size += 1 + pb::CodedOutputStream.ComputeInt64Size(Deadline);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(SumRechargeInfo other) {
        if (other == null) {
          return;
        }
        if (other.ActiveId != 0) {
          ActiveId = other.ActiveId;
        }
        if (other.SumMoney != 0L) {
          SumMoney = other.SumMoney;
        }
        canAwardId_.Add(other.canAwardId_);
        ownAwardId_.Add(other.ownAwardId_);
        if (other.Deadline != 0L) {
          Deadline = other.Deadline;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ActiveId = input.ReadInt32();
              break;
            }
            case 16: {
              SumMoney = input.ReadInt64();
              break;
            }
            case 26:
            case 24: {
              canAwardId_.AddEntriesFrom(input, _repeated_canAwardId_codec);
              break;
            }
            case 34:
            case 32: {
              ownAwardId_.AddEntriesFrom(input, _repeated_ownAwardId_codec);
              break;
            }
            case 40: {
              Deadline = input.ReadInt64();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_recharge_goods_init : pb::IMessage<c2l_recharge_goods_init> {
  private static readonly pb::MessageParser<c2l_recharge_goods_init> _parser = new pb::MessageParser<c2l_recharge_goods_init>(() => new c2l_recharge_goods_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_recharge_goods_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[131]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_goods_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_goods_init(c2l_recharge_goods_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_goods_init Clone() {
    return new c2l_recharge_goods_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_recharge_goods_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_recharge_goods_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_recharge_goods_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_recharge_goods_init : pb::IMessage<l2c_recharge_goods_init> {
  private static readonly pb::MessageParser<l2c_recharge_goods_init> _parser = new pb::MessageParser<l2c_recharge_goods_init>(() => new l2c_recharge_goods_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_recharge_goods_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[132]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_goods_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_goods_init(l2c_recharge_goods_init other) : this() {
    goods_ = other.goods_ != null ? other.goods_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_goods_init Clone() {
    return new l2c_recharge_goods_init(this);
  }

  /// <summary>Field number for the "goods" field.</summary>
  public const int GoodsFieldNumber = 1;
  private global::l2c_recharge_goods_upd goods_;
  /// <summary>
  /// 商品信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_recharge_goods_upd Goods {
    get { return goods_; }
    set {
      goods_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_recharge_goods_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_recharge_goods_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Goods, other.Goods)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (goods_ != null) hash ^= Goods.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (goods_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Goods);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (goods_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Goods);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_recharge_goods_init other) {
    if (other == null) {
      return;
    }
    if (other.goods_ != null) {
      if (goods_ == null) {
        goods_ = new global::l2c_recharge_goods_upd();
      }
      Goods.MergeFrom(other.Goods);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (goods_ == null) {
            goods_ = new global::l2c_recharge_goods_upd();
          }
          input.ReadMessage(goods_);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_recharge_get_sum_award : pb::IMessage<c2l_recharge_get_sum_award> {
  private static readonly pb::MessageParser<c2l_recharge_get_sum_award> _parser = new pb::MessageParser<c2l_recharge_get_sum_award>(() => new c2l_recharge_get_sum_award());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_recharge_get_sum_award> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[133]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_get_sum_award() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_get_sum_award(c2l_recharge_get_sum_award other) : this() {
    activeId_ = other.activeId_;
    awardId_ = other.awardId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_get_sum_award Clone() {
    return new c2l_recharge_get_sum_award(this);
  }

  /// <summary>Field number for the "active_id" field.</summary>
  public const int ActiveIdFieldNumber = 1;
  private int activeId_;
  /// <summary>
  /// 活动ID，-1:首充值 0:总累充 other:对应活动ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActiveId {
    get { return activeId_; }
    set {
      activeId_ = value;
    }
  }

  /// <summary>Field number for the "award_id" field.</summary>
  public const int AwardIdFieldNumber = 2;
  private int awardId_;
  /// <summary>
  /// 奖励ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AwardId {
    get { return awardId_; }
    set {
      awardId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_recharge_get_sum_award);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_recharge_get_sum_award other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ActiveId != other.ActiveId) return false;
    if (AwardId != other.AwardId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ActiveId != 0) hash ^= ActiveId.GetHashCode();
    if (AwardId != 0) hash ^= AwardId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ActiveId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ActiveId);
    }
    if (AwardId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AwardId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ActiveId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveId);
    }
    if (AwardId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_recharge_get_sum_award other) {
    if (other == null) {
      return;
    }
    if (other.ActiveId != 0) {
      ActiveId = other.ActiveId;
    }
    if (other.AwardId != 0) {
      AwardId = other.AwardId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ActiveId = input.ReadInt32();
          break;
        }
        case 16: {
          AwardId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_recharge_get_sum_award : pb::IMessage<l2c_recharge_get_sum_award> {
  private static readonly pb::MessageParser<l2c_recharge_get_sum_award> _parser = new pb::MessageParser<l2c_recharge_get_sum_award>(() => new l2c_recharge_get_sum_award());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_recharge_get_sum_award> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[134]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_get_sum_award() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_get_sum_award(l2c_recharge_get_sum_award other) : this() {
    result_ = other.result_;
    awards_ = other.awards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_get_sum_award Clone() {
    return new l2c_recharge_get_sum_award(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 领取结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_recharge_get_sum_award);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_recharge_get_sum_award other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if(!awards_.Equals(other.awards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    hash ^= awards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    awards_.WriteTo(output, _repeated_awards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_recharge_get_sum_award other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    awards_.Add(other.awards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
        case 18: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_IOS_RECHARGE_INIT
/// </summary>
public sealed partial class c2l_ios_recharge_init : pb::IMessage<c2l_ios_recharge_init> {
  private static readonly pb::MessageParser<c2l_ios_recharge_init> _parser = new pb::MessageParser<c2l_ios_recharge_init>(() => new c2l_ios_recharge_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_ios_recharge_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[135]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge_init(c2l_ios_recharge_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge_init Clone() {
    return new c2l_ios_recharge_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_ios_recharge_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_ios_recharge_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_ios_recharge_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_IOS_RECHARGE_INIT
/// </summary>
public sealed partial class l2c_ios_recharge_init : pb::IMessage<l2c_ios_recharge_init> {
  private static readonly pb::MessageParser<l2c_ios_recharge_init> _parser = new pb::MessageParser<l2c_ios_recharge_init>(() => new l2c_ios_recharge_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_ios_recharge_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[136]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ios_recharge_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ios_recharge_init(l2c_ios_recharge_init other) : this() {
    idToClose_ = other.idToClose_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ios_recharge_init Clone() {
    return new l2c_ios_recharge_init(this);
  }

  /// <summary>Field number for the "id_to_close" field.</summary>
  public const int IdToCloseFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_idToClose_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> idToClose_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// 未删除的订单
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> IdToClose {
    get { return idToClose_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_ios_recharge_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_ios_recharge_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!idToClose_.Equals(other.idToClose_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= idToClose_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    idToClose_.WriteTo(output, _repeated_idToClose_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += idToClose_.CalculateSize(_repeated_idToClose_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_ios_recharge_init other) {
    if (other == null) {
      return;
    }
    idToClose_.Add(other.idToClose_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          idToClose_.AddEntriesFrom(input, _repeated_idToClose_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_RECHARGE_COMMODITY_ASK 问询是否可购买
/// </summary>
public sealed partial class c2l_recharge_commodity_ask : pb::IMessage<c2l_recharge_commodity_ask> {
  private static readonly pb::MessageParser<c2l_recharge_commodity_ask> _parser = new pb::MessageParser<c2l_recharge_commodity_ask>(() => new c2l_recharge_commodity_ask());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_recharge_commodity_ask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[137]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_commodity_ask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_commodity_ask(c2l_recharge_commodity_ask other) : this() {
    commodityId_ = other.commodityId_;
    qutity_ = other.qutity_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_recharge_commodity_ask Clone() {
    return new c2l_recharge_commodity_ask(this);
  }

  /// <summary>Field number for the "commodity_id" field.</summary>
  public const int CommodityIdFieldNumber = 1;
  private string commodityId_ = "";
  /// <summary>
  /// 商品唯一id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CommodityId {
    get { return commodityId_; }
    set {
      commodityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "qutity" field.</summary>
  public const int QutityFieldNumber = 2;
  private int qutity_;
  /// <summary>
  /// 商品数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Qutity {
    get { return qutity_; }
    set {
      qutity_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_recharge_commodity_ask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_recharge_commodity_ask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CommodityId != other.CommodityId) return false;
    if (Qutity != other.Qutity) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CommodityId.Length != 0) hash ^= CommodityId.GetHashCode();
    if (Qutity != 0) hash ^= Qutity.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CommodityId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CommodityId);
    }
    if (Qutity != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Qutity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CommodityId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CommodityId);
    }
    if (Qutity != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qutity);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_recharge_commodity_ask other) {
    if (other == null) {
      return;
    }
    if (other.CommodityId.Length != 0) {
      CommodityId = other.CommodityId;
    }
    if (other.Qutity != 0) {
      Qutity = other.Qutity;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CommodityId = input.ReadString();
          break;
        }
        case 16: {
          Qutity = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_RECHARGE_COMMODITY_REP
/// </summary>
public sealed partial class l2c_recharge_commodity_rep : pb::IMessage<l2c_recharge_commodity_rep> {
  private static readonly pb::MessageParser<l2c_recharge_commodity_rep> _parser = new pb::MessageParser<l2c_recharge_commodity_rep>(() => new l2c_recharge_commodity_rep());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_recharge_commodity_rep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[138]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_commodity_rep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_commodity_rep(l2c_recharge_commodity_rep other) : this() {
    able_ = other.able_;
    commodityId_ = other.commodityId_;
    qutity_ = other.qutity_;
    orderIndex_ = other.orderIndex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_recharge_commodity_rep Clone() {
    return new l2c_recharge_commodity_rep(this);
  }

  /// <summary>Field number for the "able" field.</summary>
  public const int AbleFieldNumber = 1;
  private bool able_;
  /// <summary>
  /// 能否购买
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Able {
    get { return able_; }
    set {
      able_ = value;
    }
  }

  /// <summary>Field number for the "commodity_id" field.</summary>
  public const int CommodityIdFieldNumber = 2;
  private string commodityId_ = "";
  /// <summary>
  /// 商品唯一id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CommodityId {
    get { return commodityId_; }
    set {
      commodityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "qutity" field.</summary>
  public const int QutityFieldNumber = 3;
  private int qutity_;
  /// <summary>
  /// 商品数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Qutity {
    get { return qutity_; }
    set {
      qutity_ = value;
    }
  }

  /// <summary>Field number for the "order_index" field.</summary>
  public const int OrderIndexFieldNumber = 4;
  private string orderIndex_ = "";
  /// <summary>
  /// 服务器订单索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OrderIndex {
    get { return orderIndex_; }
    set {
      orderIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_recharge_commodity_rep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_recharge_commodity_rep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Able != other.Able) return false;
    if (CommodityId != other.CommodityId) return false;
    if (Qutity != other.Qutity) return false;
    if (OrderIndex != other.OrderIndex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Able != false) hash ^= Able.GetHashCode();
    if (CommodityId.Length != 0) hash ^= CommodityId.GetHashCode();
    if (Qutity != 0) hash ^= Qutity.GetHashCode();
    if (OrderIndex.Length != 0) hash ^= OrderIndex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Able != false) {
      output.WriteRawTag(8);
      output.WriteBool(Able);
    }
    if (CommodityId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CommodityId);
    }
    if (Qutity != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Qutity);
    }
    if (OrderIndex.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(OrderIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Able != false) {
      size += 1 + 1;
    }
    if (CommodityId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CommodityId);
    }
    if (Qutity != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qutity);
    }
    if (OrderIndex.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderIndex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_recharge_commodity_rep other) {
    if (other == null) {
      return;
    }
    if (other.Able != false) {
      Able = other.Able;
    }
    if (other.CommodityId.Length != 0) {
      CommodityId = other.CommodityId;
    }
    if (other.Qutity != 0) {
      Qutity = other.Qutity;
    }
    if (other.OrderIndex.Length != 0) {
      OrderIndex = other.OrderIndex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Able = input.ReadBool();
          break;
        }
        case 18: {
          CommodityId = input.ReadString();
          break;
        }
        case 24: {
          Qutity = input.ReadInt32();
          break;
        }
        case 34: {
          OrderIndex = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_IOS_RECHARGE
/// </summary>
public sealed partial class c2l_ios_recharge : pb::IMessage<c2l_ios_recharge> {
  private static readonly pb::MessageParser<c2l_ios_recharge> _parser = new pb::MessageParser<c2l_ios_recharge>(() => new c2l_ios_recharge());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_ios_recharge> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[139]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge(c2l_ios_recharge other) : this() {
    totalPackage_ = other.totalPackage_;
    packageIndex_ = other.packageIndex_;
    payToken_ = other.payToken_;
    idClosed_ = other.idClosed_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge Clone() {
    return new c2l_ios_recharge(this);
  }

  /// <summary>Field number for the "total_package" field.</summary>
  public const int TotalPackageFieldNumber = 1;
  private int totalPackage_;
  /// <summary>
  /// 消息包总数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPackage {
    get { return totalPackage_; }
    set {
      totalPackage_ = value;
    }
  }

  /// <summary>Field number for the "package_index" field.</summary>
  public const int PackageIndexFieldNumber = 2;
  private int packageIndex_;
  /// <summary>
  /// 消息包索引(1~total_package)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PackageIndex {
    get { return packageIndex_; }
    set {
      packageIndex_ = value;
    }
  }

  /// <summary>Field number for the "pay_token" field.</summary>
  public const int PayTokenFieldNumber = 3;
  private string payToken_ = "";
  /// <summary>
  /// 充值凭据(被拆包的数据)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PayToken {
    get { return payToken_; }
    set {
      payToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "id_closed" field.</summary>
  public const int IdClosedFieldNumber = 4;
  private static readonly pb::FieldCodec<global::c2l_ios_recharge.Types.transaction_info> _repeated_idClosed_codec
      = pb::FieldCodec.ForMessage(34, global::c2l_ios_recharge.Types.transaction_info.Parser);
  private readonly pbc::RepeatedField<global::c2l_ios_recharge.Types.transaction_info> idClosed_ = new pbc::RepeatedField<global::c2l_ios_recharge.Types.transaction_info>();
  /// <summary>
  /// 该字段信息尾包发来即可
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::c2l_ios_recharge.Types.transaction_info> IdClosed {
    get { return idClosed_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_ios_recharge);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_ios_recharge other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPackage != other.TotalPackage) return false;
    if (PackageIndex != other.PackageIndex) return false;
    if (PayToken != other.PayToken) return false;
    if(!idClosed_.Equals(other.idClosed_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPackage != 0) hash ^= TotalPackage.GetHashCode();
    if (PackageIndex != 0) hash ^= PackageIndex.GetHashCode();
    if (PayToken.Length != 0) hash ^= PayToken.GetHashCode();
    hash ^= idClosed_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPackage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPackage);
    }
    if (PackageIndex != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PackageIndex);
    }
    if (PayToken.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(PayToken);
    }
    idClosed_.WriteTo(output, _repeated_idClosed_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPackage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPackage);
    }
    if (PackageIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageIndex);
    }
    if (PayToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PayToken);
    }
    size += idClosed_.CalculateSize(_repeated_idClosed_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_ios_recharge other) {
    if (other == null) {
      return;
    }
    if (other.TotalPackage != 0) {
      TotalPackage = other.TotalPackage;
    }
    if (other.PackageIndex != 0) {
      PackageIndex = other.PackageIndex;
    }
    if (other.PayToken.Length != 0) {
      PayToken = other.PayToken;
    }
    idClosed_.Add(other.idClosed_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPackage = input.ReadInt32();
          break;
        }
        case 16: {
          PackageIndex = input.ReadInt32();
          break;
        }
        case 26: {
          PayToken = input.ReadString();
          break;
        }
        case 34: {
          idClosed_.AddEntriesFrom(input, _repeated_idClosed_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the c2l_ios_recharge message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class transaction_info : pb::IMessage<transaction_info> {
      private static readonly pb::MessageParser<transaction_info> _parser = new pb::MessageParser<transaction_info>(() => new transaction_info());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<transaction_info> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::c2l_ios_recharge.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public transaction_info() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public transaction_info(transaction_info other) : this() {
        transactionId_ = other.transactionId_;
        commodityId_ = other.commodityId_;
        num_ = other.num_;
        orderIndex_ = other.orderIndex_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public transaction_info Clone() {
        return new transaction_info(this);
      }

      /// <summary>Field number for the "transaction_id" field.</summary>
      public const int TransactionIdFieldNumber = 1;
      private string transactionId_ = "";
      /// <summary>
      /// ios订单id(唯一标识)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string TransactionId {
        get { return transactionId_; }
        set {
          transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "commodity_id" field.</summary>
      public const int CommodityIdFieldNumber = 2;
      private string commodityId_ = "";
      /// <summary>
      /// 商品id
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string CommodityId {
        get { return commodityId_; }
        set {
          commodityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "num" field.</summary>
      public const int NumFieldNumber = 3;
      private int num_;
      /// <summary>
      /// 商品数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Num {
        get { return num_; }
        set {
          num_ = value;
        }
      }

      /// <summary>Field number for the "order_index" field.</summary>
      public const int OrderIndexFieldNumber = 4;
      private string orderIndex_ = "";
      /// <summary>
      /// 服务器订单索引
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string OrderIndex {
        get { return orderIndex_; }
        set {
          orderIndex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as transaction_info);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(transaction_info other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (TransactionId != other.TransactionId) return false;
        if (CommodityId != other.CommodityId) return false;
        if (Num != other.Num) return false;
        if (OrderIndex != other.OrderIndex) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
        if (CommodityId.Length != 0) hash ^= CommodityId.GetHashCode();
        if (Num != 0) hash ^= Num.GetHashCode();
        if (OrderIndex.Length != 0) hash ^= OrderIndex.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (TransactionId.Length != 0) {
          output.WriteRawTag(10);
          output.WriteString(TransactionId);
        }
        if (CommodityId.Length != 0) {
          output.WriteRawTag(18);
          output.WriteString(CommodityId);
        }
        if (Num != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(Num);
        }
        if (OrderIndex.Length != 0) {
          output.WriteRawTag(34);
          output.WriteString(OrderIndex);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (TransactionId.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
        }
        if (CommodityId.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(CommodityId);
        }
        if (Num != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
        }
        if (OrderIndex.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderIndex);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(transaction_info other) {
        if (other == null) {
          return;
        }
        if (other.TransactionId.Length != 0) {
          TransactionId = other.TransactionId;
        }
        if (other.CommodityId.Length != 0) {
          CommodityId = other.CommodityId;
        }
        if (other.Num != 0) {
          Num = other.Num;
        }
        if (other.OrderIndex.Length != 0) {
          OrderIndex = other.OrderIndex;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              TransactionId = input.ReadString();
              break;
            }
            case 18: {
              CommodityId = input.ReadString();
              break;
            }
            case 24: {
              Num = input.ReadInt32();
              break;
            }
            case 34: {
              OrderIndex = input.ReadString();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

/// <summary>
/// LOGIC_MSG_L2C_IOS_RECHARGE_REP
/// </summary>
public sealed partial class l2c_ios_recharge_rep : pb::IMessage<l2c_ios_recharge_rep> {
  private static readonly pb::MessageParser<l2c_ios_recharge_rep> _parser = new pb::MessageParser<l2c_ios_recharge_rep>(() => new l2c_ios_recharge_rep());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_ios_recharge_rep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[140]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ios_recharge_rep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ios_recharge_rep(l2c_ios_recharge_rep other) : this() {
    rechargeResult_ = other.rechargeResult_;
    transactionIds_ = other.transactionIds_.Clone();
    eles_ = other.eles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ios_recharge_rep Clone() {
    return new l2c_ios_recharge_rep(this);
  }

  /// <summary>Field number for the "recharge_result" field.</summary>
  public const int RechargeResultFieldNumber = 1;
  private global::IOSRechargeResult rechargeResult_ = 0;
  /// <summary>
  /// 充值结果(0已收到/1充值成功&amp;删除订单)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::IOSRechargeResult RechargeResult {
    get { return rechargeResult_; }
    set {
      rechargeResult_ = value;
    }
  }

  /// <summary>Field number for the "transaction_ids" field.</summary>
  public const int TransactionIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_transactionIds_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> transactionIds_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// 通知客户端去ios删除的交易id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> TransactionIds {
    get { return transactionIds_; }
  }

  /// <summary>Field number for the "eles" field.</summary>
  public const int ElesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_eles_codec
      = pb::FieldCodec.ForMessage(26, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> eles_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 购买得到的元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Eles {
    get { return eles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_ios_recharge_rep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_ios_recharge_rep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RechargeResult != other.RechargeResult) return false;
    if(!transactionIds_.Equals(other.transactionIds_)) return false;
    if(!eles_.Equals(other.eles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RechargeResult != 0) hash ^= RechargeResult.GetHashCode();
    hash ^= transactionIds_.GetHashCode();
    hash ^= eles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RechargeResult != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) RechargeResult);
    }
    transactionIds_.WriteTo(output, _repeated_transactionIds_codec);
    eles_.WriteTo(output, _repeated_eles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RechargeResult != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RechargeResult);
    }
    size += transactionIds_.CalculateSize(_repeated_transactionIds_codec);
    size += eles_.CalculateSize(_repeated_eles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_ios_recharge_rep other) {
    if (other == null) {
      return;
    }
    if (other.RechargeResult != 0) {
      RechargeResult = other.RechargeResult;
    }
    transactionIds_.Add(other.transactionIds_);
    eles_.Add(other.eles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          rechargeResult_ = (global::IOSRechargeResult) input.ReadEnum();
          break;
        }
        case 18: {
          transactionIds_.AddEntriesFrom(input, _repeated_transactionIds_codec);
          break;
        }
        case 26: {
          eles_.AddEntriesFrom(input, _repeated_eles_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_IOS_RECHARGE_CLOSED
/// </summary>
public sealed partial class c2l_ios_recharge_closed : pb::IMessage<c2l_ios_recharge_closed> {
  private static readonly pb::MessageParser<c2l_ios_recharge_closed> _parser = new pb::MessageParser<c2l_ios_recharge_closed>(() => new c2l_ios_recharge_closed());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_ios_recharge_closed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[141]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge_closed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge_closed(c2l_ios_recharge_closed other) : this() {
    orderDeleted_ = other.orderDeleted_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ios_recharge_closed Clone() {
    return new c2l_ios_recharge_closed(this);
  }

  /// <summary>Field number for the "order_deleted" field.</summary>
  public const int OrderDeletedFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_orderDeleted_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> orderDeleted_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// 已删除的订单
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> OrderDeleted {
    get { return orderDeleted_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_ios_recharge_closed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_ios_recharge_closed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!orderDeleted_.Equals(other.orderDeleted_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= orderDeleted_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    orderDeleted_.WriteTo(output, _repeated_orderDeleted_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += orderDeleted_.CalculateSize(_repeated_orderDeleted_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_ios_recharge_closed other) {
    if (other == null) {
      return;
    }
    orderDeleted_.Add(other.orderDeleted_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          orderDeleted_.AddEntriesFrom(input, _repeated_orderDeleted_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_minigame_cloth_star : pb::IMessage<c2l_minigame_cloth_star> {
  private static readonly pb::MessageParser<c2l_minigame_cloth_star> _parser = new pb::MessageParser<c2l_minigame_cloth_star>(() => new c2l_minigame_cloth_star());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_minigame_cloth_star> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[142]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_minigame_cloth_star() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_minigame_cloth_star(c2l_minigame_cloth_star other) : this() {
    id_ = other.id_;
    level_ = other.level_;
    clothId_ = other.clothId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_minigame_cloth_star Clone() {
    return new c2l_minigame_cloth_star(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private uint id_;
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 2;
  private uint level_;
  /// <summary>
  /// 档次(废弃)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "cloth_id" field.</summary>
  public const int ClothIdFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_clothId_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> clothId_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 每个部位装备id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ClothId {
    get { return clothId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_minigame_cloth_star);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_minigame_cloth_star other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Level != other.Level) return false;
    if(!clothId_.Equals(other.clothId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    hash ^= clothId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    if (Level != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Level);
    }
    clothId_.WriteTo(output, _repeated_clothId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
    }
    size += clothId_.CalculateSize(_repeated_clothId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_minigame_cloth_star other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    clothId_.Add(other.clothId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 16: {
          Level = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          clothId_.AddEntriesFrom(input, _repeated_clothId_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_send_minigame_cloth_success : pb::IMessage<l2c_send_minigame_cloth_success> {
  private static readonly pb::MessageParser<l2c_send_minigame_cloth_success> _parser = new pb::MessageParser<l2c_send_minigame_cloth_success>(() => new l2c_send_minigame_cloth_success());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_send_minigame_cloth_success> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[143]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_send_minigame_cloth_success() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_send_minigame_cloth_success(l2c_send_minigame_cloth_success other) : this() {
    rewards_ = other.rewards_.Clone();
    star_ = other.star_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_send_minigame_cloth_success Clone() {
    return new l2c_send_minigame_cloth_success(this);
  }

  /// <summary>Field number for the "rewards" field.</summary>
  public const int RewardsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(10, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> rewards_ = new pbc::RepeatedField<global::PTGameElement>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Rewards {
    get { return rewards_; }
  }

  /// <summary>Field number for the "star" field.</summary>
  public const int StarFieldNumber = 2;
  private uint star_;
  /// <summary>
  /// 分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Star {
    get { return star_; }
    set {
      star_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_send_minigame_cloth_success);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_send_minigame_cloth_success other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rewards_.Equals(other.rewards_)) return false;
    if (Star != other.Star) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rewards_.GetHashCode();
    if (Star != 0) hash ^= Star.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (Star != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Star);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (Star != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Star);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_send_minigame_cloth_success other) {
    if (other == null) {
      return;
    }
    rewards_.Add(other.rewards_);
    if (other.Star != 0) {
      Star = other.Star;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
        case 16: {
          Star = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 副本界面---------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class BranchmodelDailyRaid : pb::IMessage<BranchmodelDailyRaid> {
  private static readonly pb::MessageParser<BranchmodelDailyRaid> _parser = new pb::MessageParser<BranchmodelDailyRaid>(() => new BranchmodelDailyRaid());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BranchmodelDailyRaid> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[144]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BranchmodelDailyRaid() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BranchmodelDailyRaid(BranchmodelDailyRaid other) : this() {
    maxtimes_ = other.maxtimes_;
    remainingtimes_ = other.remainingtimes_;
    opendays_ = other.opendays_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BranchmodelDailyRaid Clone() {
    return new BranchmodelDailyRaid(this);
  }

  /// <summary>Field number for the "maxtimes" field.</summary>
  public const int MaxtimesFieldNumber = 1;
  private int maxtimes_;
  /// <summary>
  /// 最大次數
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Maxtimes {
    get { return maxtimes_; }
    set {
      maxtimes_ = value;
    }
  }

  /// <summary>Field number for the "remainingtimes" field.</summary>
  public const int RemainingtimesFieldNumber = 2;
  private int remainingtimes_;
  /// <summary>
  /// 剩餘次數
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Remainingtimes {
    get { return remainingtimes_; }
    set {
      remainingtimes_ = value;
    }
  }

  /// <summary>Field number for the "opendays" field.</summary>
  public const int OpendaysFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_opendays_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> opendays_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 開啓時間
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Opendays {
    get { return opendays_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BranchmodelDailyRaid);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BranchmodelDailyRaid other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Maxtimes != other.Maxtimes) return false;
    if (Remainingtimes != other.Remainingtimes) return false;
    if(!opendays_.Equals(other.opendays_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Maxtimes != 0) hash ^= Maxtimes.GetHashCode();
    if (Remainingtimes != 0) hash ^= Remainingtimes.GetHashCode();
    hash ^= opendays_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Maxtimes != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Maxtimes);
    }
    if (Remainingtimes != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Remainingtimes);
    }
    opendays_.WriteTo(output, _repeated_opendays_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Maxtimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maxtimes);
    }
    if (Remainingtimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Remainingtimes);
    }
    size += opendays_.CalculateSize(_repeated_opendays_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BranchmodelDailyRaid other) {
    if (other == null) {
      return;
    }
    if (other.Maxtimes != 0) {
      Maxtimes = other.Maxtimes;
    }
    if (other.Remainingtimes != 0) {
      Remainingtimes = other.Remainingtimes;
    }
    opendays_.Add(other.opendays_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Maxtimes = input.ReadInt32();
          break;
        }
        case 16: {
          Remainingtimes = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          opendays_.AddEntriesFrom(input, _repeated_opendays_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class BranchmodelSingleRaid : pb::IMessage<BranchmodelSingleRaid> {
  private static readonly pb::MessageParser<BranchmodelSingleRaid> _parser = new pb::MessageParser<BranchmodelSingleRaid>(() => new BranchmodelSingleRaid());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BranchmodelSingleRaid> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[145]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BranchmodelSingleRaid() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BranchmodelSingleRaid(BranchmodelSingleRaid other) : this() {
    choosedNum_ = other.choosedNum_;
    maxNum_ = other.maxNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BranchmodelSingleRaid Clone() {
    return new BranchmodelSingleRaid(this);
  }

  /// <summary>Field number for the "choosed_num" field.</summary>
  public const int ChoosedNumFieldNumber = 1;
  private int choosedNum_;
  /// <summary>
  /// 已选择人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChoosedNum {
    get { return choosedNum_; }
    set {
      choosedNum_ = value;
    }
  }

  /// <summary>Field number for the "max_num" field.</summary>
  public const int MaxNumFieldNumber = 2;
  private int maxNum_;
  /// <summary>
  /// 可选择人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxNum {
    get { return maxNum_; }
    set {
      maxNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BranchmodelSingleRaid);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BranchmodelSingleRaid other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChoosedNum != other.ChoosedNum) return false;
    if (MaxNum != other.MaxNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChoosedNum != 0) hash ^= ChoosedNum.GetHashCode();
    if (MaxNum != 0) hash ^= MaxNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ChoosedNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChoosedNum);
    }
    if (MaxNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(MaxNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChoosedNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChoosedNum);
    }
    if (MaxNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BranchmodelSingleRaid other) {
    if (other == null) {
      return;
    }
    if (other.ChoosedNum != 0) {
      ChoosedNum = other.ChoosedNum;
    }
    if (other.MaxNum != 0) {
      MaxNum = other.MaxNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChoosedNum = input.ReadInt32();
          break;
        }
        case 16: {
          MaxNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_stage_branchmodel : pb::IMessage<c2l_stage_branchmodel> {
  private static readonly pb::MessageParser<c2l_stage_branchmodel> _parser = new pb::MessageParser<c2l_stage_branchmodel>(() => new c2l_stage_branchmodel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_stage_branchmodel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[146]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_stage_branchmodel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_stage_branchmodel(c2l_stage_branchmodel other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_stage_branchmodel Clone() {
    return new c2l_stage_branchmodel(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_stage_branchmodel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_stage_branchmodel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_stage_branchmodel other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_stage_branchmodel : pb::IMessage<l2c_stage_branchmodel> {
  private static readonly pb::MessageParser<l2c_stage_branchmodel> _parser = new pb::MessageParser<l2c_stage_branchmodel>(() => new l2c_stage_branchmodel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_stage_branchmodel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[147]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_stage_branchmodel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_stage_branchmodel(l2c_stage_branchmodel other) : this() {
    coinraid_ = other.coinraid_ != null ? other.coinraid_.Clone() : null;
    expraid_ = other.expraid_ != null ? other.expraid_.Clone() : null;
    huchengraid_ = other.huchengraid_ != null ? other.huchengraid_.Clone() : null;
    individualraid_ = other.individualraid_ != null ? other.individualraid_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_stage_branchmodel Clone() {
    return new l2c_stage_branchmodel(this);
  }

  /// <summary>Field number for the "coinraid" field.</summary>
  public const int CoinraidFieldNumber = 1;
  private global::BranchmodelDailyRaid coinraid_;
  /// <summary>
  /// 金幣副本
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BranchmodelDailyRaid Coinraid {
    get { return coinraid_; }
    set {
      coinraid_ = value;
    }
  }

  /// <summary>Field number for the "expraid" field.</summary>
  public const int ExpraidFieldNumber = 2;
  private global::BranchmodelDailyRaid expraid_;
  /// <summary>
  /// 經驗副本
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BranchmodelDailyRaid Expraid {
    get { return expraid_; }
    set {
      expraid_ = value;
    }
  }

  /// <summary>Field number for the "huchengraid" field.</summary>
  public const int HuchengraidFieldNumber = 3;
  private global::BranchmodelDailyRaid huchengraid_;
  /// <summary>
  /// 材料副本
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BranchmodelDailyRaid Huchengraid {
    get { return huchengraid_; }
    set {
      huchengraid_ = value;
    }
  }

  /// <summary>Field number for the "individualraid" field.</summary>
  public const int IndividualraidFieldNumber = 4;
  private global::BranchmodelSingleRaid individualraid_;
  /// <summary>
  /// 單人副本
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BranchmodelSingleRaid Individualraid {
    get { return individualraid_; }
    set {
      individualraid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_stage_branchmodel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_stage_branchmodel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Coinraid, other.Coinraid)) return false;
    if (!object.Equals(Expraid, other.Expraid)) return false;
    if (!object.Equals(Huchengraid, other.Huchengraid)) return false;
    if (!object.Equals(Individualraid, other.Individualraid)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (coinraid_ != null) hash ^= Coinraid.GetHashCode();
    if (expraid_ != null) hash ^= Expraid.GetHashCode();
    if (huchengraid_ != null) hash ^= Huchengraid.GetHashCode();
    if (individualraid_ != null) hash ^= Individualraid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (coinraid_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Coinraid);
    }
    if (expraid_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Expraid);
    }
    if (huchengraid_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Huchengraid);
    }
    if (individualraid_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Individualraid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (coinraid_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Coinraid);
    }
    if (expraid_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expraid);
    }
    if (huchengraid_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Huchengraid);
    }
    if (individualraid_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Individualraid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_stage_branchmodel other) {
    if (other == null) {
      return;
    }
    if (other.coinraid_ != null) {
      if (coinraid_ == null) {
        coinraid_ = new global::BranchmodelDailyRaid();
      }
      Coinraid.MergeFrom(other.Coinraid);
    }
    if (other.expraid_ != null) {
      if (expraid_ == null) {
        expraid_ = new global::BranchmodelDailyRaid();
      }
      Expraid.MergeFrom(other.Expraid);
    }
    if (other.huchengraid_ != null) {
      if (huchengraid_ == null) {
        huchengraid_ = new global::BranchmodelDailyRaid();
      }
      Huchengraid.MergeFrom(other.Huchengraid);
    }
    if (other.individualraid_ != null) {
      if (individualraid_ == null) {
        individualraid_ = new global::BranchmodelSingleRaid();
      }
      Individualraid.MergeFrom(other.Individualraid);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (coinraid_ == null) {
            coinraid_ = new global::BranchmodelDailyRaid();
          }
          input.ReadMessage(coinraid_);
          break;
        }
        case 18: {
          if (expraid_ == null) {
            expraid_ = new global::BranchmodelDailyRaid();
          }
          input.ReadMessage(expraid_);
          break;
        }
        case 26: {
          if (huchengraid_ == null) {
            huchengraid_ = new global::BranchmodelDailyRaid();
          }
          input.ReadMessage(huchengraid_);
          break;
        }
        case 34: {
          if (individualraid_ == null) {
            individualraid_ = new global::BranchmodelSingleRaid();
          }
          input.ReadMessage(individualraid_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 商城-----------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class StoreGoods : pb::IMessage<StoreGoods> {
  private static readonly pb::MessageParser<StoreGoods> _parser = new pb::MessageParser<StoreGoods>(() => new StoreGoods());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StoreGoods> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[148]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoreGoods() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoreGoods(StoreGoods other) : this() {
    goodId_ = other.goodId_;
    count_ = other.count_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoreGoods Clone() {
    return new StoreGoods(this);
  }

  /// <summary>Field number for the "good_id" field.</summary>
  public const int GoodIdFieldNumber = 1;
  private int goodId_;
  /// <summary>
  /// 补给站商品id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GoodId {
    get { return goodId_; }
    set {
      goodId_ = value;
    }
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 2;
  private int count_;
  /// <summary>
  /// 剩余次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StoreGoods);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StoreGoods other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GoodId != other.GoodId) return false;
    if (Count != other.Count) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GoodId != 0) hash ^= GoodId.GetHashCode();
    if (Count != 0) hash ^= Count.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GoodId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GoodId);
    }
    if (Count != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GoodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodId);
    }
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StoreGoods other) {
    if (other == null) {
      return;
    }
    if (other.GoodId != 0) {
      GoodId = other.GoodId;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GoodId = input.ReadInt32();
          break;
        }
        case 16: {
          Count = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class StorePackages : pb::IMessage<StorePackages> {
  private static readonly pb::MessageParser<StorePackages> _parser = new pb::MessageParser<StorePackages>(() => new StorePackages());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StorePackages> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[149]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StorePackages() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StorePackages(StorePackages other) : this() {
    packageId_ = other.packageId_;
    remainCnts_ = other.remainCnts_;
    refreshSecs_ = other.refreshSecs_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StorePackages Clone() {
    return new StorePackages(this);
  }

  /// <summary>Field number for the "package_id" field.</summary>
  public const int PackageIdFieldNumber = 1;
  private int packageId_;
  /// <summary>
  /// 礼包ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PackageId {
    get { return packageId_; }
    set {
      packageId_ = value;
    }
  }

  /// <summary>Field number for the "remain_cnts" field.</summary>
  public const int RemainCntsFieldNumber = 2;
  private int remainCnts_;
  /// <summary>
  /// 剩余可购买次数（不限制次数，不用此字段）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RemainCnts {
    get { return remainCnts_; }
    set {
      remainCnts_ = value;
    }
  }

  /// <summary>Field number for the "refresh_secs" field.</summary>
  public const int RefreshSecsFieldNumber = 3;
  private int refreshSecs_;
  /// <summary>
  /// 下次刷新剩余秒数（没有刷新需求，不用此字段）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RefreshSecs {
    get { return refreshSecs_; }
    set {
      refreshSecs_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StorePackages);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StorePackages other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PackageId != other.PackageId) return false;
    if (RemainCnts != other.RemainCnts) return false;
    if (RefreshSecs != other.RefreshSecs) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PackageId != 0) hash ^= PackageId.GetHashCode();
    if (RemainCnts != 0) hash ^= RemainCnts.GetHashCode();
    if (RefreshSecs != 0) hash ^= RefreshSecs.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PackageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PackageId);
    }
    if (RemainCnts != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RemainCnts);
    }
    if (RefreshSecs != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RefreshSecs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PackageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageId);
    }
    if (RemainCnts != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainCnts);
    }
    if (RefreshSecs != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RefreshSecs);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StorePackages other) {
    if (other == null) {
      return;
    }
    if (other.PackageId != 0) {
      PackageId = other.PackageId;
    }
    if (other.RemainCnts != 0) {
      RemainCnts = other.RemainCnts;
    }
    if (other.RefreshSecs != 0) {
      RefreshSecs = other.RefreshSecs;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PackageId = input.ReadInt32();
          break;
        }
        case 16: {
          RemainCnts = input.ReadInt32();
          break;
        }
        case 24: {
          RefreshSecs = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_store_init : pb::IMessage<c2l_store_init> {
  private static readonly pb::MessageParser<c2l_store_init> _parser = new pb::MessageParser<c2l_store_init>(() => new c2l_store_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_store_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[150]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_store_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_store_init(c2l_store_init other) : this() {
    storeIds_ = other.storeIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_store_init Clone() {
    return new c2l_store_init(this);
  }

  /// <summary>Field number for the "store_ids" field.</summary>
  public const int StoreIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_storeIds_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> storeIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 请求的商店ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> StoreIds {
    get { return storeIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_store_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_store_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!storeIds_.Equals(other.storeIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= storeIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    storeIds_.WriteTo(output, _repeated_storeIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += storeIds_.CalculateSize(_repeated_storeIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_store_init other) {
    if (other == null) {
      return;
    }
    storeIds_.Add(other.storeIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          storeIds_.AddEntriesFrom(input, _repeated_storeIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_store_upd : pb::IMessage<l2c_store_upd> {
  private static readonly pb::MessageParser<l2c_store_upd> _parser = new pb::MessageParser<l2c_store_upd>(() => new l2c_store_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_store_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[151]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_upd(l2c_store_upd other) : this() {
    storeId_ = other.storeId_;
    remaintimes_ = other.remaintimes_;
    goods_ = other.goods_.Clone();
    packages_ = other.packages_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_upd Clone() {
    return new l2c_store_upd(this);
  }

  /// <summary>Field number for the "store_id" field.</summary>
  public const int StoreIdFieldNumber = 1;
  private int storeId_;
  /// <summary>
  /// 商店ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StoreId {
    get { return storeId_; }
    set {
      storeId_ = value;
    }
  }

  /// <summary>Field number for the "remaintimes" field.</summary>
  public const int RemaintimesFieldNumber = 2;
  private int remaintimes_;
  /// <summary>
  /// 剩余时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Remaintimes {
    get { return remaintimes_; }
    set {
      remaintimes_ = value;
    }
  }

  /// <summary>Field number for the "goods" field.</summary>
  public const int GoodsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::StoreGoods> _repeated_goods_codec
      = pb::FieldCodec.ForMessage(26, global::StoreGoods.Parser);
  private readonly pbc::RepeatedField<global::StoreGoods> goods_ = new pbc::RepeatedField<global::StoreGoods>();
  /// <summary>
  /// 商品信息（商店类型为商品时，用此字段）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StoreGoods> Goods {
    get { return goods_; }
  }

  /// <summary>Field number for the "packages" field.</summary>
  public const int PackagesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::StorePackages> _repeated_packages_codec
      = pb::FieldCodec.ForMessage(34, global::StorePackages.Parser);
  private readonly pbc::RepeatedField<global::StorePackages> packages_ = new pbc::RepeatedField<global::StorePackages>();
  /// <summary>
  /// 礼包信息（商店类型为礼包时，用此字段）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StorePackages> Packages {
    get { return packages_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_store_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_store_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StoreId != other.StoreId) return false;
    if (Remaintimes != other.Remaintimes) return false;
    if(!goods_.Equals(other.goods_)) return false;
    if(!packages_.Equals(other.packages_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StoreId != 0) hash ^= StoreId.GetHashCode();
    if (Remaintimes != 0) hash ^= Remaintimes.GetHashCode();
    hash ^= goods_.GetHashCode();
    hash ^= packages_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StoreId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StoreId);
    }
    if (Remaintimes != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Remaintimes);
    }
    goods_.WriteTo(output, _repeated_goods_codec);
    packages_.WriteTo(output, _repeated_packages_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StoreId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StoreId);
    }
    if (Remaintimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Remaintimes);
    }
    size += goods_.CalculateSize(_repeated_goods_codec);
    size += packages_.CalculateSize(_repeated_packages_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_store_upd other) {
    if (other == null) {
      return;
    }
    if (other.StoreId != 0) {
      StoreId = other.StoreId;
    }
    if (other.Remaintimes != 0) {
      Remaintimes = other.Remaintimes;
    }
    goods_.Add(other.goods_);
    packages_.Add(other.packages_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StoreId = input.ReadInt32();
          break;
        }
        case 16: {
          Remaintimes = input.ReadInt32();
          break;
        }
        case 26: {
          goods_.AddEntriesFrom(input, _repeated_goods_codec);
          break;
        }
        case 34: {
          packages_.AddEntriesFrom(input, _repeated_packages_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_store_init : pb::IMessage<l2c_store_init> {
  private static readonly pb::MessageParser<l2c_store_init> _parser = new pb::MessageParser<l2c_store_init>(() => new l2c_store_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_store_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[152]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_init(l2c_store_init other) : this() {
    infos_ = other.infos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_init Clone() {
    return new l2c_store_init(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_store_upd> _repeated_infos_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_store_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_store_upd> infos_ = new pbc::RepeatedField<global::l2c_store_upd>();
  /// <summary>
  /// 信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_store_upd> Infos {
    get { return infos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_store_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_store_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!infos_.Equals(other.infos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= infos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    infos_.WriteTo(output, _repeated_infos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += infos_.CalculateSize(_repeated_infos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_store_init other) {
    if (other == null) {
      return;
    }
    infos_.Add(other.infos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          infos_.AddEntriesFrom(input, _repeated_infos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_store_buy : pb::IMessage<c2l_store_buy> {
  private static readonly pb::MessageParser<c2l_store_buy> _parser = new pb::MessageParser<c2l_store_buy>(() => new c2l_store_buy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_store_buy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[153]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_store_buy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_store_buy(c2l_store_buy other) : this() {
    storeId_ = other.storeId_;
    contentId_ = other.contentId_;
    num_ = other.num_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_store_buy Clone() {
    return new c2l_store_buy(this);
  }

  /// <summary>Field number for the "store_id" field.</summary>
  public const int StoreIdFieldNumber = 1;
  private int storeId_;
  /// <summary>
  /// 商店ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StoreId {
    get { return storeId_; }
    set {
      storeId_ = value;
    }
  }

  /// <summary>Field number for the "content_id" field.</summary>
  public const int ContentIdFieldNumber = 2;
  private int contentId_;
  /// <summary>
  /// 商品ID或礼包ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ContentId {
    get { return contentId_; }
    set {
      contentId_ = value;
    }
  }

  /// <summary>Field number for the "num" field.</summary>
  public const int NumFieldNumber = 3;
  private int num_;
  /// <summary>
  /// 商品數量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Num {
    get { return num_; }
    set {
      num_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_store_buy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_store_buy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StoreId != other.StoreId) return false;
    if (ContentId != other.ContentId) return false;
    if (Num != other.Num) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StoreId != 0) hash ^= StoreId.GetHashCode();
    if (ContentId != 0) hash ^= ContentId.GetHashCode();
    if (Num != 0) hash ^= Num.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StoreId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StoreId);
    }
    if (ContentId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ContentId);
    }
    if (Num != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Num);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StoreId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StoreId);
    }
    if (ContentId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentId);
    }
    if (Num != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_store_buy other) {
    if (other == null) {
      return;
    }
    if (other.StoreId != 0) {
      StoreId = other.StoreId;
    }
    if (other.ContentId != 0) {
      ContentId = other.ContentId;
    }
    if (other.Num != 0) {
      Num = other.Num;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StoreId = input.ReadInt32();
          break;
        }
        case 16: {
          ContentId = input.ReadInt32();
          break;
        }
        case 24: {
          Num = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_store_buy : pb::IMessage<l2c_store_buy> {
  private static readonly pb::MessageParser<l2c_store_buy> _parser = new pb::MessageParser<l2c_store_buy>(() => new l2c_store_buy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_store_buy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[154]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_buy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_buy(l2c_store_buy other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_buy Clone() {
    return new l2c_store_buy(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 购买结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_store_buy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_store_buy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_store_buy other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_store_goods_upd : pb::IMessage<l2c_store_goods_upd> {
  private static readonly pb::MessageParser<l2c_store_goods_upd> _parser = new pb::MessageParser<l2c_store_goods_upd>(() => new l2c_store_goods_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_store_goods_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[155]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_goods_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_goods_upd(l2c_store_goods_upd other) : this() {
    storeId_ = other.storeId_;
    goods_ = other.goods_ != null ? other.goods_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_goods_upd Clone() {
    return new l2c_store_goods_upd(this);
  }

  /// <summary>Field number for the "store_id" field.</summary>
  public const int StoreIdFieldNumber = 1;
  private int storeId_;
  /// <summary>
  /// 商店ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StoreId {
    get { return storeId_; }
    set {
      storeId_ = value;
    }
  }

  /// <summary>Field number for the "goods" field.</summary>
  public const int GoodsFieldNumber = 2;
  private global::StoreGoods goods_;
  /// <summary>
  /// 商品信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StoreGoods Goods {
    get { return goods_; }
    set {
      goods_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_store_goods_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_store_goods_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StoreId != other.StoreId) return false;
    if (!object.Equals(Goods, other.Goods)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StoreId != 0) hash ^= StoreId.GetHashCode();
    if (goods_ != null) hash ^= Goods.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StoreId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StoreId);
    }
    if (goods_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Goods);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StoreId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StoreId);
    }
    if (goods_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Goods);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_store_goods_upd other) {
    if (other == null) {
      return;
    }
    if (other.StoreId != 0) {
      StoreId = other.StoreId;
    }
    if (other.goods_ != null) {
      if (goods_ == null) {
        goods_ = new global::StoreGoods();
      }
      Goods.MergeFrom(other.Goods);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StoreId = input.ReadInt32();
          break;
        }
        case 18: {
          if (goods_ == null) {
            goods_ = new global::StoreGoods();
          }
          input.ReadMessage(goods_);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_store_package_upd : pb::IMessage<l2c_store_package_upd> {
  private static readonly pb::MessageParser<l2c_store_package_upd> _parser = new pb::MessageParser<l2c_store_package_upd>(() => new l2c_store_package_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_store_package_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[156]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_package_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_package_upd(l2c_store_package_upd other) : this() {
    storeId_ = other.storeId_;
    package_ = other.package_ != null ? other.package_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_store_package_upd Clone() {
    return new l2c_store_package_upd(this);
  }

  /// <summary>Field number for the "store_id" field.</summary>
  public const int StoreIdFieldNumber = 1;
  private int storeId_;
  /// <summary>
  /// 商店ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StoreId {
    get { return storeId_; }
    set {
      storeId_ = value;
    }
  }

  /// <summary>Field number for the "package" field.</summary>
  public const int PackageFieldNumber = 2;
  private global::StorePackages package_;
  /// <summary>
  /// 礼包信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StorePackages Package {
    get { return package_; }
    set {
      package_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_store_package_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_store_package_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StoreId != other.StoreId) return false;
    if (!object.Equals(Package, other.Package)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StoreId != 0) hash ^= StoreId.GetHashCode();
    if (package_ != null) hash ^= Package.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StoreId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StoreId);
    }
    if (package_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Package);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StoreId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StoreId);
    }
    if (package_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_store_package_upd other) {
    if (other == null) {
      return;
    }
    if (other.StoreId != 0) {
      StoreId = other.StoreId;
    }
    if (other.package_ != null) {
      if (package_ == null) {
        package_ = new global::StorePackages();
      }
      Package.MergeFrom(other.Package);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StoreId = input.ReadInt32();
          break;
        }
        case 18: {
          if (package_ == null) {
            package_ = new global::StorePackages();
          }
          input.ReadMessage(package_);
          break;
        }
      }
    }
  }

}

/// <summary>
///新手引導-----------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class GuideInfo : pb::IMessage<GuideInfo> {
  private static readonly pb::MessageParser<GuideInfo> _parser = new pb::MessageParser<GuideInfo>(() => new GuideInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GuideInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[157]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuideInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuideInfo(GuideInfo other) : this() {
    sectionID_ = other.sectionID_;
    stepID_ = other.stepID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuideInfo Clone() {
    return new GuideInfo(this);
  }

  /// <summary>Field number for the "sectionID" field.</summary>
  public const int SectionIDFieldNumber = 1;
  private int sectionID_;
  /// <summary>
  /// 引導章節
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SectionID {
    get { return sectionID_; }
    set {
      sectionID_ = value;
    }
  }

  /// <summary>Field number for the "stepID" field.</summary>
  public const int StepIDFieldNumber = 2;
  private int stepID_;
  /// <summary>
  /// 引導步驟
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StepID {
    get { return stepID_; }
    set {
      stepID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GuideInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GuideInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SectionID != other.SectionID) return false;
    if (StepID != other.StepID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SectionID != 0) hash ^= SectionID.GetHashCode();
    if (StepID != 0) hash ^= StepID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SectionID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SectionID);
    }
    if (StepID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(StepID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SectionID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SectionID);
    }
    if (StepID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StepID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GuideInfo other) {
    if (other == null) {
      return;
    }
    if (other.SectionID != 0) {
      SectionID = other.SectionID;
    }
    if (other.StepID != 0) {
      StepID = other.StepID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SectionID = input.ReadInt32();
          break;
        }
        case 16: {
          StepID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_guide_init : pb::IMessage<c2l_guide_init> {
  private static readonly pb::MessageParser<c2l_guide_init> _parser = new pb::MessageParser<c2l_guide_init>(() => new c2l_guide_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_guide_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[158]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_guide_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_guide_init(c2l_guide_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_guide_init Clone() {
    return new c2l_guide_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_guide_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_guide_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_guide_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_guide_init : pb::IMessage<l2c_guide_init> {
  private static readonly pb::MessageParser<l2c_guide_init> _parser = new pb::MessageParser<l2c_guide_init>(() => new l2c_guide_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_guide_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[159]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_guide_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_guide_init(l2c_guide_init other) : this() {
    guide_ = other.guide_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_guide_init Clone() {
    return new l2c_guide_init(this);
  }

  /// <summary>Field number for the "guide" field.</summary>
  public const int GuideFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GuideInfo> _repeated_guide_codec
      = pb::FieldCodec.ForMessage(10, global::GuideInfo.Parser);
  private readonly pbc::RepeatedField<global::GuideInfo> guide_ = new pbc::RepeatedField<global::GuideInfo>();
  /// <summary>
  /// 引導所有章節信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GuideInfo> Guide {
    get { return guide_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_guide_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_guide_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!guide_.Equals(other.guide_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= guide_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    guide_.WriteTo(output, _repeated_guide_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += guide_.CalculateSize(_repeated_guide_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_guide_init other) {
    if (other == null) {
      return;
    }
    guide_.Add(other.guide_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          guide_.AddEntriesFrom(input, _repeated_guide_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_guide_section : pb::IMessage<c2l_guide_section> {
  private static readonly pb::MessageParser<c2l_guide_section> _parser = new pb::MessageParser<c2l_guide_section>(() => new c2l_guide_section());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_guide_section> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[160]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_guide_section() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_guide_section(c2l_guide_section other) : this() {
    guide_ = other.guide_ != null ? other.guide_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_guide_section Clone() {
    return new c2l_guide_section(this);
  }

  /// <summary>Field number for the "guide" field.</summary>
  public const int GuideFieldNumber = 1;
  private global::GuideInfo guide_;
  /// <summary>
  /// 引導章節信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GuideInfo Guide {
    get { return guide_; }
    set {
      guide_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_guide_section);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_guide_section other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Guide, other.Guide)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (guide_ != null) hash ^= Guide.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (guide_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Guide);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (guide_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Guide);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_guide_section other) {
    if (other == null) {
      return;
    }
    if (other.guide_ != null) {
      if (guide_ == null) {
        guide_ = new global::GuideInfo();
      }
      Guide.MergeFrom(other.Guide);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (guide_ == null) {
            guide_ = new global::GuideInfo();
          }
          input.ReadMessage(guide_);
          break;
        }
      }
    }
  }

}

/// <summary>
///邮箱--------------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class MailInfo : pb::IMessage<MailInfo> {
  private static readonly pb::MessageParser<MailInfo> _parser = new pb::MessageParser<MailInfo>(() => new MailInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MailInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[161]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailInfo(MailInfo other) : this() {
    id_ = other.id_;
    sender_ = other.sender_;
    title_ = other.title_;
    content_ = other.content_;
    createTime_ = other.createTime_;
    dueTime_ = other.dueTime_;
    isForever_ = other.isForever_;
    isRead_ = other.isRead_;
    isHold_ = other.isHold_;
    readDelete_ = other.readDelete_;
    attachment_ = other.attachment_.Clone();
    isCollect_ = other.isCollect_;
    counterTick_ = other.counterTick_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailInfo Clone() {
    return new MailInfo(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 邮件ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "sender" field.</summary>
  public const int SenderFieldNumber = 2;
  private string sender_ = "";
  /// <summary>
  /// 发件人
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Sender {
    get { return sender_; }
    set {
      sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 3;
  private string title_ = "";
  /// <summary>
  /// 邮件标题
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Title {
    get { return title_; }
    set {
      title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 4;
  private string content_ = "";
  /// <summary>
  /// 邮件正文
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "create_time" field.</summary>
  public const int CreateTimeFieldNumber = 5;
  private long createTime_;
  /// <summary>
  /// 创建时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CreateTime {
    get { return createTime_; }
    set {
      createTime_ = value;
    }
  }

  /// <summary>Field number for the "due_time" field.</summary>
  public const int DueTimeFieldNumber = 6;
  private long dueTime_;
  /// <summary>
  /// 到期时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long DueTime {
    get { return dueTime_; }
    set {
      dueTime_ = value;
    }
  }

  /// <summary>Field number for the "is_forever" field.</summary>
  public const int IsForeverFieldNumber = 7;
  private bool isForever_;
  /// <summary>
  /// 永久邮件（已废弃）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsForever {
    get { return isForever_; }
    set {
      isForever_ = value;
    }
  }

  /// <summary>Field number for the "is_read" field.</summary>
  public const int IsReadFieldNumber = 8;
  private bool isRead_;
  /// <summary>
  /// 邮件阅读状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsRead {
    get { return isRead_; }
    set {
      isRead_ = value;
    }
  }

  /// <summary>Field number for the "is_hold" field.</summary>
  public const int IsHoldFieldNumber = 9;
  private bool isHold_;
  /// <summary>
  /// 邮件领取状态（邮件可能阅读不领）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsHold {
    get { return isHold_; }
    set {
      isHold_ = value;
    }
  }

  /// <summary>Field number for the "read_delete" field.</summary>
  public const int ReadDeleteFieldNumber = 10;
  private bool readDelete_;
  /// <summary>
  /// 邮件阅读领取后是否自动删除
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ReadDelete {
    get { return readDelete_; }
    set {
      readDelete_ = value;
    }
  }

  /// <summary>Field number for the "attachment" field.</summary>
  public const int AttachmentFieldNumber = 11;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_attachment_codec
      = pb::FieldCodec.ForMessage(90, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> attachment_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 邮件附件
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Attachment {
    get { return attachment_; }
  }

  /// <summary>Field number for the "is_collect" field.</summary>
  public const int IsCollectFieldNumber = 12;
  private bool isCollect_;
  /// <summary>
  /// 邮件收藏状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsCollect {
    get { return isCollect_; }
    set {
      isCollect_ = value;
    }
  }

  /// <summary>Field number for the "counter_tick" field.</summary>
  public const int CounterTickFieldNumber = 13;
  private int counterTick_;
  /// <summary>
  /// 剩余时间倒计时
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CounterTick {
    get { return counterTick_; }
    set {
      counterTick_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MailInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MailInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Sender != other.Sender) return false;
    if (Title != other.Title) return false;
    if (Content != other.Content) return false;
    if (CreateTime != other.CreateTime) return false;
    if (DueTime != other.DueTime) return false;
    if (IsForever != other.IsForever) return false;
    if (IsRead != other.IsRead) return false;
    if (IsHold != other.IsHold) return false;
    if (ReadDelete != other.ReadDelete) return false;
    if(!attachment_.Equals(other.attachment_)) return false;
    if (IsCollect != other.IsCollect) return false;
    if (CounterTick != other.CounterTick) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Sender.Length != 0) hash ^= Sender.GetHashCode();
    if (Title.Length != 0) hash ^= Title.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
    if (DueTime != 0L) hash ^= DueTime.GetHashCode();
    if (IsForever != false) hash ^= IsForever.GetHashCode();
    if (IsRead != false) hash ^= IsRead.GetHashCode();
    if (IsHold != false) hash ^= IsHold.GetHashCode();
    if (ReadDelete != false) hash ^= ReadDelete.GetHashCode();
    hash ^= attachment_.GetHashCode();
    if (IsCollect != false) hash ^= IsCollect.GetHashCode();
    if (CounterTick != 0) hash ^= CounterTick.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Sender.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Sender);
    }
    if (Title.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Title);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Content);
    }
    if (CreateTime != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(CreateTime);
    }
    if (DueTime != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(DueTime);
    }
    if (IsForever != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsForever);
    }
    if (IsRead != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsRead);
    }
    if (IsHold != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsHold);
    }
    if (ReadDelete != false) {
      output.WriteRawTag(80);
      output.WriteBool(ReadDelete);
    }
    attachment_.WriteTo(output, _repeated_attachment_codec);
    if (IsCollect != false) {
      output.WriteRawTag(96);
      output.WriteBool(IsCollect);
    }
    if (CounterTick != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(CounterTick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Sender.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
    }
    if (Title.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
    }
    if (CreateTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
    }
    if (DueTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(DueTime);
    }
    if (IsForever != false) {
      size += 1 + 1;
    }
    if (IsRead != false) {
      size += 1 + 1;
    }
    if (IsHold != false) {
      size += 1 + 1;
    }
    if (ReadDelete != false) {
      size += 1 + 1;
    }
    size += attachment_.CalculateSize(_repeated_attachment_codec);
    if (IsCollect != false) {
      size += 1 + 1;
    }
    if (CounterTick != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CounterTick);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MailInfo other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Sender.Length != 0) {
      Sender = other.Sender;
    }
    if (other.Title.Length != 0) {
      Title = other.Title;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.CreateTime != 0L) {
      CreateTime = other.CreateTime;
    }
    if (other.DueTime != 0L) {
      DueTime = other.DueTime;
    }
    if (other.IsForever != false) {
      IsForever = other.IsForever;
    }
    if (other.IsRead != false) {
      IsRead = other.IsRead;
    }
    if (other.IsHold != false) {
      IsHold = other.IsHold;
    }
    if (other.ReadDelete != false) {
      ReadDelete = other.ReadDelete;
    }
    attachment_.Add(other.attachment_);
    if (other.IsCollect != false) {
      IsCollect = other.IsCollect;
    }
    if (other.CounterTick != 0) {
      CounterTick = other.CounterTick;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          Sender = input.ReadString();
          break;
        }
        case 26: {
          Title = input.ReadString();
          break;
        }
        case 34: {
          Content = input.ReadString();
          break;
        }
        case 40: {
          CreateTime = input.ReadInt64();
          break;
        }
        case 48: {
          DueTime = input.ReadInt64();
          break;
        }
        case 56: {
          IsForever = input.ReadBool();
          break;
        }
        case 64: {
          IsRead = input.ReadBool();
          break;
        }
        case 72: {
          IsHold = input.ReadBool();
          break;
        }
        case 80: {
          ReadDelete = input.ReadBool();
          break;
        }
        case 90: {
          attachment_.AddEntriesFrom(input, _repeated_attachment_codec);
          break;
        }
        case 96: {
          IsCollect = input.ReadBool();
          break;
        }
        case 104: {
          CounterTick = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_mail_init : pb::IMessage<c2l_mail_init> {
  private static readonly pb::MessageParser<c2l_mail_init> _parser = new pb::MessageParser<c2l_mail_init>(() => new c2l_mail_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_mail_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[162]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_mail_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_mail_init(c2l_mail_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_mail_init Clone() {
    return new c2l_mail_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_mail_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_mail_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_mail_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_mail_init : pb::IMessage<l2c_mail_init> {
  private static readonly pb::MessageParser<l2c_mail_init> _parser = new pb::MessageParser<l2c_mail_init>(() => new l2c_mail_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_mail_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[163]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_init(l2c_mail_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    mails_ = other.mails_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_init Clone() {
    return new l2c_mail_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(>=0)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 页号(从0开始第一页)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "mails" field.</summary>
  public const int MailsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::MailInfo> _repeated_mails_codec
      = pb::FieldCodec.ForMessage(26, global::MailInfo.Parser);
  private readonly pbc::RepeatedField<global::MailInfo> mails_ = new pbc::RepeatedField<global::MailInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MailInfo> Mails {
    get { return mails_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_mail_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_mail_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!mails_.Equals(other.mails_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= mails_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    mails_.WriteTo(output, _repeated_mails_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += mails_.CalculateSize(_repeated_mails_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_mail_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    mails_.Add(other.mails_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          mails_.AddEntriesFrom(input, _repeated_mails_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_mail_read : pb::IMessage<c2l_mail_read> {
  private static readonly pb::MessageParser<c2l_mail_read> _parser = new pb::MessageParser<c2l_mail_read>(() => new c2l_mail_read());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_mail_read> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[164]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_mail_read() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_mail_read(c2l_mail_read other) : this() {
    optType_ = other.optType_;
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_mail_read Clone() {
    return new c2l_mail_read(this);
  }

  /// <summary>Field number for the "opt_type" field.</summary>
  public const int OptTypeFieldNumber = 1;
  private global::MailOptType optType_ = 0;
  /// <summary>
  /// 邮箱操作类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MailOptType OptType {
    get { return optType_; }
    set {
      optType_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  /// <summary>
  /// 邮件ID（没有一键领取阅读使用）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_mail_read);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_mail_read other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OptType != other.OptType) return false;
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (OptType != 0) hash ^= OptType.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (OptType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) OptType);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (OptType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptType);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_mail_read other) {
    if (other == null) {
      return;
    }
    if (other.OptType != 0) {
      OptType = other.OptType;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          optType_ = (global::MailOptType) input.ReadEnum();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_mail_read : pb::IMessage<l2c_mail_read> {
  private static readonly pb::MessageParser<l2c_mail_read> _parser = new pb::MessageParser<l2c_mail_read>(() => new l2c_mail_read());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_mail_read> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[165]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_read() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_read(l2c_mail_read other) : this() {
    optType_ = other.optType_;
    id_ = other.id_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_read Clone() {
    return new l2c_mail_read(this);
  }

  /// <summary>Field number for the "opt_type" field.</summary>
  public const int OptTypeFieldNumber = 1;
  private global::MailOptType optType_ = 0;
  /// <summary>
  /// 邮箱操作类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MailOptType OptType {
    get { return optType_; }
    set {
      optType_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_id_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> id_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 操作成功的邮件ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Id {
    get { return id_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_mail_read);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_mail_read other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OptType != other.OptType) return false;
    if(!id_.Equals(other.id_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (OptType != 0) hash ^= OptType.GetHashCode();
    hash ^= id_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (OptType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) OptType);
    }
    id_.WriteTo(output, _repeated_id_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (OptType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptType);
    }
    size += id_.CalculateSize(_repeated_id_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_mail_read other) {
    if (other == null) {
      return;
    }
    if (other.OptType != 0) {
      OptType = other.OptType;
    }
    id_.Add(other.id_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          optType_ = (global::MailOptType) input.ReadEnum();
          break;
        }
        case 26:
        case 24: {
          id_.AddEntriesFrom(input, _repeated_id_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_mail_send : pb::IMessage<l2c_mail_send> {
  private static readonly pb::MessageParser<l2c_mail_send> _parser = new pb::MessageParser<l2c_mail_send>(() => new l2c_mail_send());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_mail_send> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[166]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_send() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_send(l2c_mail_send other) : this() {
    mail_ = other.mail_ != null ? other.mail_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_mail_send Clone() {
    return new l2c_mail_send(this);
  }

  /// <summary>Field number for the "mail" field.</summary>
  public const int MailFieldNumber = 1;
  private global::MailInfo mail_;
  /// <summary>
  /// 这些新邮件信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MailInfo Mail {
    get { return mail_; }
    set {
      mail_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_mail_send);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_mail_send other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Mail, other.Mail)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (mail_ != null) hash ^= Mail.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (mail_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Mail);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (mail_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mail);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_mail_send other) {
    if (other == null) {
      return;
    }
    if (other.mail_ != null) {
      if (mail_ == null) {
        mail_ = new global::MailInfo();
      }
      Mail.MergeFrom(other.Mail);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (mail_ == null) {
            mail_ = new global::MailInfo();
          }
          input.ReadMessage(mail_);
          break;
        }
      }
    }
  }

}

/// <summary>
///公告--------------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class NoticeInfo : pb::IMessage<NoticeInfo> {
  private static readonly pb::MessageParser<NoticeInfo> _parser = new pb::MessageParser<NoticeInfo>(() => new NoticeInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NoticeInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[167]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NoticeInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NoticeInfo(NoticeInfo other) : this() {
    id_ = other.id_;
    startTime_ = other.startTime_;
    endTime_ = other.endTime_;
    cycleTime_ = other.cycleTime_;
    title_ = other.title_;
    content_ = other.content_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NoticeInfo Clone() {
    return new NoticeInfo(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private uint id_;
  /// <summary>
  /// id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "start_time" field.</summary>
  public const int StartTimeFieldNumber = 3;
  private ulong startTime_;
  /// <summary>
  /// 开始时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong StartTime {
    get { return startTime_; }
    set {
      startTime_ = value;
    }
  }

  /// <summary>Field number for the "end_time" field.</summary>
  public const int EndTimeFieldNumber = 4;
  private ulong endTime_;
  /// <summary>
  /// 结束时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong EndTime {
    get { return endTime_; }
    set {
      endTime_ = value;
    }
  }

  /// <summary>Field number for the "cycle_time" field.</summary>
  public const int CycleTimeFieldNumber = 5;
  private uint cycleTime_;
  /// <summary>
  /// 循环分钟（废弃）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CycleTime {
    get { return cycleTime_; }
    set {
      cycleTime_ = value;
    }
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 6;
  private string title_ = "";
  /// <summary>
  /// 标题
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Title {
    get { return title_; }
    set {
      title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 7;
  private string content_ = "";
  /// <summary>
  /// 内容
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NoticeInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NoticeInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (StartTime != other.StartTime) return false;
    if (EndTime != other.EndTime) return false;
    if (CycleTime != other.CycleTime) return false;
    if (Title != other.Title) return false;
    if (Content != other.Content) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (StartTime != 0UL) hash ^= StartTime.GetHashCode();
    if (EndTime != 0UL) hash ^= EndTime.GetHashCode();
    if (CycleTime != 0) hash ^= CycleTime.GetHashCode();
    if (Title.Length != 0) hash ^= Title.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    if (StartTime != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(StartTime);
    }
    if (EndTime != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(EndTime);
    }
    if (CycleTime != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(CycleTime);
    }
    if (Title.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Title);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Content);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
    }
    if (StartTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartTime);
    }
    if (EndTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EndTime);
    }
    if (CycleTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CycleTime);
    }
    if (Title.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NoticeInfo other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.StartTime != 0UL) {
      StartTime = other.StartTime;
    }
    if (other.EndTime != 0UL) {
      EndTime = other.EndTime;
    }
    if (other.CycleTime != 0) {
      CycleTime = other.CycleTime;
    }
    if (other.Title.Length != 0) {
      Title = other.Title;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 24: {
          StartTime = input.ReadUInt64();
          break;
        }
        case 32: {
          EndTime = input.ReadUInt64();
          break;
        }
        case 40: {
          CycleTime = input.ReadUInt32();
          break;
        }
        case 50: {
          Title = input.ReadString();
          break;
        }
        case 58: {
          Content = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_notice_init : pb::IMessage<c2l_notice_init> {
  private static readonly pb::MessageParser<c2l_notice_init> _parser = new pb::MessageParser<c2l_notice_init>(() => new c2l_notice_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_notice_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[168]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_notice_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_notice_init(c2l_notice_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_notice_init Clone() {
    return new c2l_notice_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_notice_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_notice_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_notice_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_notice_init : pb::IMessage<l2c_notice_init> {
  private static readonly pb::MessageParser<l2c_notice_init> _parser = new pb::MessageParser<l2c_notice_init>(() => new l2c_notice_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_notice_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[169]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_notice_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_notice_init(l2c_notice_init other) : this() {
    notices_ = other.notices_ != null ? other.notices_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_notice_init Clone() {
    return new l2c_notice_init(this);
  }

  /// <summary>Field number for the "notices" field.</summary>
  public const int NoticesFieldNumber = 3;
  private global::NoticeInfo notices_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::NoticeInfo Notices {
    get { return notices_; }
    set {
      notices_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_notice_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_notice_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Notices, other.Notices)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (notices_ != null) hash ^= Notices.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (notices_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Notices);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (notices_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Notices);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_notice_init other) {
    if (other == null) {
      return;
    }
    if (other.notices_ != null) {
      if (notices_ == null) {
        notices_ = new global::NoticeInfo();
      }
      Notices.MergeFrom(other.Notices);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 26: {
          if (notices_ == null) {
            notices_ = new global::NoticeInfo();
          }
          input.ReadMessage(notices_);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_notice_send : pb::IMessage<l2c_notice_send> {
  private static readonly pb::MessageParser<l2c_notice_send> _parser = new pb::MessageParser<l2c_notice_send>(() => new l2c_notice_send());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_notice_send> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[170]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_notice_send() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_notice_send(l2c_notice_send other) : this() {
    notice_ = other.notice_ != null ? other.notice_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_notice_send Clone() {
    return new l2c_notice_send(this);
  }

  /// <summary>Field number for the "notice" field.</summary>
  public const int NoticeFieldNumber = 1;
  private global::NoticeInfo notice_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::NoticeInfo Notice {
    get { return notice_; }
    set {
      notice_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_notice_send);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_notice_send other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Notice, other.Notice)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (notice_ != null) hash ^= Notice.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (notice_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Notice);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (notice_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Notice);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_notice_send other) {
    if (other == null) {
      return;
    }
    if (other.notice_ != null) {
      if (notice_ == null) {
        notice_ = new global::NoticeInfo();
      }
      Notice.MergeFrom(other.Notice);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (notice_ == null) {
            notice_ = new global::NoticeInfo();
          }
          input.ReadMessage(notice_);
          break;
        }
      }
    }
  }

}

/// <summary>
///探索--------------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class ExplorationInfo : pb::IMessage<ExplorationInfo> {
  private static readonly pb::MessageParser<ExplorationInfo> _parser = new pb::MessageParser<ExplorationInfo>(() => new ExplorationInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ExplorationInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[171]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExplorationInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExplorationInfo(ExplorationInfo other) : this() {
    index_ = other.index_;
    missionId_ = other.missionId_;
    characterId_ = other.characterId_;
    status_ = other.status_;
    finshSecs_ = other.finshSecs_;
    refreshSecs_ = other.refreshSecs_;
    refreshTime_ = other.refreshTime_;
    children_ = other.children_.Clone();
    skillCards_ = other.skillCards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ExplorationInfo Clone() {
    return new ExplorationInfo(this);
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 1;
  private int index_;
  /// <summary>
  /// 探索栏号（从0开始，用于Client排序）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "mission_id" field.</summary>
  public const int MissionIdFieldNumber = 2;
  private int missionId_;
  /// <summary>
  /// 任务ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MissionId {
    get { return missionId_; }
    set {
      missionId_ = value;
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 3;
  private int characterId_;
  /// <summary>
  /// 任务执行男主ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CharacterId {
    get { return characterId_; }
    set {
      characterId_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 4;
  private int status_;
  /// <summary>
  /// 0:未探索  1:探索进行中  2:探索完成  3:探索放弃
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "finsh_secs" field.</summary>
  public const int FinshSecsFieldNumber = 5;
  private int finshSecs_;
  /// <summary>
  /// 探索剩余秒数（单位:s）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FinshSecs {
    get { return finshSecs_; }
    set {
      finshSecs_ = value;
    }
  }

  /// <summary>Field number for the "refresh_secs" field.</summary>
  public const int RefreshSecsFieldNumber = 6;
  private int refreshSecs_;
  /// <summary>
  /// 探索下次刷新剩余秒数（单位:s）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RefreshSecs {
    get { return refreshSecs_; }
    set {
      refreshSecs_ = value;
    }
  }

  /// <summary>Field number for the "refresh_time" field.</summary>
  public const int RefreshTimeFieldNumber = 7;
  private long refreshTime_;
  /// <summary>
  /// 探索刷新时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long RefreshTime {
    get { return refreshTime_; }
    set {
      refreshTime_ = value;
    }
  }

  /// <summary>Field number for the "children" field.</summary>
  public const int ChildrenFieldNumber = 8;
  private static readonly pb::FieldCodec<global::ExplorationInfo.Types.ChildInfo> _repeated_children_codec
      = pb::FieldCodec.ForMessage(66, global::ExplorationInfo.Types.ChildInfo.Parser);
  private readonly pbc::RepeatedField<global::ExplorationInfo.Types.ChildInfo> children_ = new pbc::RepeatedField<global::ExplorationInfo.Types.ChildInfo>();
  /// <summary>
  /// 子探索任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ExplorationInfo.Types.ChildInfo> Children {
    get { return children_; }
  }

  /// <summary>Field number for the "skill_cards" field.</summary>
  public const int SkillCardsFieldNumber = 9;
  private static readonly pb::FieldCodec<int> _repeated_skillCards_codec
      = pb::FieldCodec.ForInt32(74);
  private readonly pbc::RepeatedField<int> skillCards_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 放置的技能卡牌（最多6个）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> SkillCards {
    get { return skillCards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ExplorationInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ExplorationInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Index != other.Index) return false;
    if (MissionId != other.MissionId) return false;
    if (CharacterId != other.CharacterId) return false;
    if (Status != other.Status) return false;
    if (FinshSecs != other.FinshSecs) return false;
    if (RefreshSecs != other.RefreshSecs) return false;
    if (RefreshTime != other.RefreshTime) return false;
    if(!children_.Equals(other.children_)) return false;
    if(!skillCards_.Equals(other.skillCards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Index != 0) hash ^= Index.GetHashCode();
    if (MissionId != 0) hash ^= MissionId.GetHashCode();
    if (CharacterId != 0) hash ^= CharacterId.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    if (FinshSecs != 0) hash ^= FinshSecs.GetHashCode();
    if (RefreshSecs != 0) hash ^= RefreshSecs.GetHashCode();
    if (RefreshTime != 0L) hash ^= RefreshTime.GetHashCode();
    hash ^= children_.GetHashCode();
    hash ^= skillCards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (MissionId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(MissionId);
    }
    if (CharacterId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CharacterId);
    }
    if (Status != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Status);
    }
    if (FinshSecs != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(FinshSecs);
    }
    if (RefreshSecs != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(RefreshSecs);
    }
    if (RefreshTime != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(RefreshTime);
    }
    children_.WriteTo(output, _repeated_children_codec);
    skillCards_.WriteTo(output, _repeated_skillCards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (MissionId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissionId);
    }
    if (CharacterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterId);
    }
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
    }
    if (FinshSecs != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinshSecs);
    }
    if (RefreshSecs != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RefreshSecs);
    }
    if (RefreshTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTime);
    }
    size += children_.CalculateSize(_repeated_children_codec);
    size += skillCards_.CalculateSize(_repeated_skillCards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ExplorationInfo other) {
    if (other == null) {
      return;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.MissionId != 0) {
      MissionId = other.MissionId;
    }
    if (other.CharacterId != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    if (other.FinshSecs != 0) {
      FinshSecs = other.FinshSecs;
    }
    if (other.RefreshSecs != 0) {
      RefreshSecs = other.RefreshSecs;
    }
    if (other.RefreshTime != 0L) {
      RefreshTime = other.RefreshTime;
    }
    children_.Add(other.children_);
    skillCards_.Add(other.skillCards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 16: {
          MissionId = input.ReadInt32();
          break;
        }
        case 24: {
          CharacterId = input.ReadInt32();
          break;
        }
        case 32: {
          Status = input.ReadInt32();
          break;
        }
        case 40: {
          FinshSecs = input.ReadInt32();
          break;
        }
        case 48: {
          RefreshSecs = input.ReadInt32();
          break;
        }
        case 56: {
          RefreshTime = input.ReadInt64();
          break;
        }
        case 66: {
          children_.AddEntriesFrom(input, _repeated_children_codec);
          break;
        }
        case 74:
        case 72: {
          skillCards_.AddEntriesFrom(input, _repeated_skillCards_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ExplorationInfo message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class ExplorationElement : pb::IMessage<ExplorationElement> {
      private static readonly pb::MessageParser<ExplorationElement> _parser = new pb::MessageParser<ExplorationElement>(() => new ExplorationElement());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ExplorationElement> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ExplorationInfo.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ExplorationElement() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ExplorationElement(ExplorationElement other) : this() {
        eType_ = other.eType_;
        nID_ = other.nID_;
        nCount_ = other.nCount_;
        nExtraCount_ = other.nExtraCount_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ExplorationElement Clone() {
        return new ExplorationElement(this);
      }

      /// <summary>Field number for the "eType" field.</summary>
      public const int ETypeFieldNumber = 1;
      private global::GameElementType eType_ = 0;
      /// <summary>
      /// 类型
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::GameElementType EType {
        get { return eType_; }
        set {
          eType_ = value;
        }
      }

      /// <summary>Field number for the "nID" field.</summary>
      public const int NIDFieldNumber = 2;
      private int nID_;
      /// <summary>
      /// ID
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int NID {
        get { return nID_; }
        set {
          nID_ = value;
        }
      }

      /// <summary>Field number for the "nCount" field.</summary>
      public const int NCountFieldNumber = 3;
      private int nCount_;
      /// <summary>
      /// 原始数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int NCount {
        get { return nCount_; }
        set {
          nCount_ = value;
        }
      }

      /// <summary>Field number for the "nExtraCount" field.</summary>
      public const int NExtraCountFieldNumber = 4;
      private int nExtraCount_;
      /// <summary>
      /// 额外追加数量
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int NExtraCount {
        get { return nExtraCount_; }
        set {
          nExtraCount_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ExplorationElement);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ExplorationElement other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (EType != other.EType) return false;
        if (NID != other.NID) return false;
        if (NCount != other.NCount) return false;
        if (NExtraCount != other.NExtraCount) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (EType != 0) hash ^= EType.GetHashCode();
        if (NID != 0) hash ^= NID.GetHashCode();
        if (NCount != 0) hash ^= NCount.GetHashCode();
        if (NExtraCount != 0) hash ^= NExtraCount.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (EType != 0) {
          output.WriteRawTag(8);
          output.WriteEnum((int) EType);
        }
        if (NID != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(NID);
        }
        if (NCount != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(NCount);
        }
        if (NExtraCount != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(NExtraCount);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (EType != 0) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EType);
        }
        if (NID != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(NID);
        }
        if (NCount != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCount);
        }
        if (NExtraCount != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(NExtraCount);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ExplorationElement other) {
        if (other == null) {
          return;
        }
        if (other.EType != 0) {
          EType = other.EType;
        }
        if (other.NID != 0) {
          NID = other.NID;
        }
        if (other.NCount != 0) {
          NCount = other.NCount;
        }
        if (other.NExtraCount != 0) {
          NExtraCount = other.NExtraCount;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              eType_ = (global::GameElementType) input.ReadEnum();
              break;
            }
            case 16: {
              NID = input.ReadInt32();
              break;
            }
            case 24: {
              NCount = input.ReadInt32();
              break;
            }
            case 32: {
              NExtraCount = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

    public sealed partial class ChildInfo : pb::IMessage<ChildInfo> {
      private static readonly pb::MessageParser<ChildInfo> _parser = new pb::MessageParser<ChildInfo>(() => new ChildInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<ChildInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ExplorationInfo.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ChildInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ChildInfo(ChildInfo other) : this() {
        eventIdx_ = other.eventIdx_;
        missionId_ = other.missionId_;
        remainSecs_ = other.remainSecs_;
        endTime_ = other.endTime_;
        items_ = other.items_.Clone();
        speicals_ = other.speicals_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public ChildInfo Clone() {
        return new ChildInfo(this);
      }

      /// <summary>Field number for the "event_idx" field.</summary>
      public const int EventIdxFieldNumber = 1;
      private int eventIdx_;
      /// <summary>
      /// 子任务索引（从0开始）
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int EventIdx {
        get { return eventIdx_; }
        set {
          eventIdx_ = value;
        }
      }

      /// <summary>Field number for the "mission_id" field.</summary>
      public const int MissionIdFieldNumber = 2;
      private int missionId_;
      /// <summary>
      /// 子任务ID（子任务顺序以此升序）
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int MissionId {
        get { return missionId_; }
        set {
          missionId_ = value;
        }
      }

      /// <summary>Field number for the "remain_secs" field.</summary>
      public const int RemainSecsFieldNumber = 4;
      private int remainSecs_;
      /// <summary>
      /// 剩余秒数（单位:s）
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int RemainSecs {
        get { return remainSecs_; }
        set {
          remainSecs_ = value;
        }
      }

      /// <summary>Field number for the "end_time" field.</summary>
      public const int EndTimeFieldNumber = 5;
      private long endTime_;
      /// <summary>
      /// 结束时间戳
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public long EndTime {
        get { return endTime_; }
        set {
          endTime_ = value;
        }
      }

      /// <summary>Field number for the "items" field.</summary>
      public const int ItemsFieldNumber = 6;
      private static readonly pb::FieldCodec<global::ExplorationInfo.Types.ExplorationElement> _repeated_items_codec
          = pb::FieldCodec.ForMessage(50, global::ExplorationInfo.Types.ExplorationElement.Parser);
      private readonly pbc::RepeatedField<global::ExplorationInfo.Types.ExplorationElement> items_ = new pbc::RepeatedField<global::ExplorationInfo.Types.ExplorationElement>();
      /// <summary>
      /// 常规掉落物品
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::ExplorationInfo.Types.ExplorationElement> Items {
        get { return items_; }
      }

      /// <summary>Field number for the "speicals" field.</summary>
      public const int SpeicalsFieldNumber = 7;
      private static readonly pb::FieldCodec<global::ExplorationInfo.Types.ExplorationElement> _repeated_speicals_codec
          = pb::FieldCodec.ForMessage(58, global::ExplorationInfo.Types.ExplorationElement.Parser);
      private readonly pbc::RepeatedField<global::ExplorationInfo.Types.ExplorationElement> speicals_ = new pbc::RepeatedField<global::ExplorationInfo.Types.ExplorationElement>();
      /// <summary>
      /// 特殊掉落物品
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::ExplorationInfo.Types.ExplorationElement> Speicals {
        get { return speicals_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as ChildInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(ChildInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (EventIdx != other.EventIdx) return false;
        if (MissionId != other.MissionId) return false;
        if (RemainSecs != other.RemainSecs) return false;
        if (EndTime != other.EndTime) return false;
        if(!items_.Equals(other.items_)) return false;
        if(!speicals_.Equals(other.speicals_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (EventIdx != 0) hash ^= EventIdx.GetHashCode();
        if (MissionId != 0) hash ^= MissionId.GetHashCode();
        if (RemainSecs != 0) hash ^= RemainSecs.GetHashCode();
        if (EndTime != 0L) hash ^= EndTime.GetHashCode();
        hash ^= items_.GetHashCode();
        hash ^= speicals_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (EventIdx != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(EventIdx);
        }
        if (MissionId != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(MissionId);
        }
        if (RemainSecs != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(RemainSecs);
        }
        if (EndTime != 0L) {
          output.WriteRawTag(40);
          output.WriteInt64(EndTime);
        }
        items_.WriteTo(output, _repeated_items_codec);
        speicals_.WriteTo(output, _repeated_speicals_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (EventIdx != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventIdx);
        }
        if (MissionId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissionId);
        }
        if (RemainSecs != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSecs);
        }
        if (EndTime != 0L) {
          size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
        }
        size += items_.CalculateSize(_repeated_items_codec);
        size += speicals_.CalculateSize(_repeated_speicals_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(ChildInfo other) {
        if (other == null) {
          return;
        }
        if (other.EventIdx != 0) {
          EventIdx = other.EventIdx;
        }
        if (other.MissionId != 0) {
          MissionId = other.MissionId;
        }
        if (other.RemainSecs != 0) {
          RemainSecs = other.RemainSecs;
        }
        if (other.EndTime != 0L) {
          EndTime = other.EndTime;
        }
        items_.Add(other.items_);
        speicals_.Add(other.speicals_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              EventIdx = input.ReadInt32();
              break;
            }
            case 16: {
              MissionId = input.ReadInt32();
              break;
            }
            case 32: {
              RemainSecs = input.ReadInt32();
              break;
            }
            case 40: {
              EndTime = input.ReadInt64();
              break;
            }
            case 50: {
              items_.AddEntriesFrom(input, _repeated_items_codec);
              break;
            }
            case 58: {
              speicals_.AddEntriesFrom(input, _repeated_speicals_codec);
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class l2c_exploration_cards_upd : pb::IMessage<l2c_exploration_cards_upd> {
  private static readonly pb::MessageParser<l2c_exploration_cards_upd> _parser = new pb::MessageParser<l2c_exploration_cards_upd>(() => new l2c_exploration_cards_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_exploration_cards_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[172]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_cards_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_cards_upd(l2c_exploration_cards_upd other) : this() {
    ownSkillCards_ = other.ownSkillCards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_cards_upd Clone() {
    return new l2c_exploration_cards_upd(this);
  }

  /// <summary>Field number for the "own_skill_cards" field.</summary>
  public const int OwnSkillCardsFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_ownSkillCards_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> ownSkillCards_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 拥有的卡牌
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> OwnSkillCards {
    get { return ownSkillCards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_exploration_cards_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_exploration_cards_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ownSkillCards_.Equals(other.ownSkillCards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ownSkillCards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    ownSkillCards_.WriteTo(output, _repeated_ownSkillCards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ownSkillCards_.CalculateSize(_repeated_ownSkillCards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_exploration_cards_upd other) {
    if (other == null) {
      return;
    }
    ownSkillCards_.Add(other.ownSkillCards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          ownSkillCards_.AddEntriesFrom(input, _repeated_ownSkillCards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_exploration_init : pb::IMessage<c2l_exploration_init> {
  private static readonly pb::MessageParser<c2l_exploration_init> _parser = new pb::MessageParser<c2l_exploration_init>(() => new c2l_exploration_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_exploration_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[173]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_init(c2l_exploration_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_init Clone() {
    return new c2l_exploration_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_exploration_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_exploration_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_exploration_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_exploration_init : pb::IMessage<l2c_exploration_init> {
  private static readonly pb::MessageParser<l2c_exploration_init> _parser = new pb::MessageParser<l2c_exploration_init>(() => new l2c_exploration_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_exploration_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[174]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_init(l2c_exploration_init other) : this() {
    result_ = other.result_;
    missions_ = other.missions_.Clone();
    ownSkillCards_ = other.ownSkillCards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_init Clone() {
    return new l2c_exploration_init(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private int result_;
  /// <summary>
  /// 初始化结果 0：未解锁 1：成功
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "missions" field.</summary>
  public const int MissionsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::ExplorationInfo> _repeated_missions_codec
      = pb::FieldCodec.ForMessage(18, global::ExplorationInfo.Parser);
  private readonly pbc::RepeatedField<global::ExplorationInfo> missions_ = new pbc::RepeatedField<global::ExplorationInfo>();
  /// <summary>
  /// 探索任务（最多4个）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ExplorationInfo> Missions {
    get { return missions_; }
  }

  /// <summary>Field number for the "own_skill_cards" field.</summary>
  public const int OwnSkillCardsFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_ownSkillCards_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> ownSkillCards_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 拥有的卡牌（同ID只能有一张）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> OwnSkillCards {
    get { return ownSkillCards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_exploration_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_exploration_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if(!missions_.Equals(other.missions_)) return false;
    if(!ownSkillCards_.Equals(other.ownSkillCards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    hash ^= missions_.GetHashCode();
    hash ^= ownSkillCards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Result);
    }
    missions_.WriteTo(output, _repeated_missions_codec);
    ownSkillCards_.WriteTo(output, _repeated_ownSkillCards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
    }
    size += missions_.CalculateSize(_repeated_missions_codec);
    size += ownSkillCards_.CalculateSize(_repeated_ownSkillCards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_exploration_init other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    missions_.Add(other.missions_);
    ownSkillCards_.Add(other.ownSkillCards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadInt32();
          break;
        }
        case 18: {
          missions_.AddEntriesFrom(input, _repeated_missions_codec);
          break;
        }
        case 26:
        case 24: {
          ownSkillCards_.AddEntriesFrom(input, _repeated_ownSkillCards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_exploration_start : pb::IMessage<c2l_exploration_start> {
  private static readonly pb::MessageParser<c2l_exploration_start> _parser = new pb::MessageParser<c2l_exploration_start>(() => new c2l_exploration_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_exploration_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[175]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_start(c2l_exploration_start other) : this() {
    index_ = other.index_;
    characterId_ = other.characterId_;
    refreshTime_ = other.refreshTime_;
    skillCards_ = other.skillCards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_start Clone() {
    return new c2l_exploration_start(this);
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 1;
  private int index_;
  /// <summary>
  /// 探索栏号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 2;
  private int characterId_;
  /// <summary>
  /// 男主ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CharacterId {
    get { return characterId_; }
    set {
      characterId_ = value;
    }
  }

  /// <summary>Field number for the "refresh_time" field.</summary>
  public const int RefreshTimeFieldNumber = 3;
  private long refreshTime_;
  /// <summary>
  /// 任务刷新时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long RefreshTime {
    get { return refreshTime_; }
    set {
      refreshTime_ = value;
    }
  }

  /// <summary>Field number for the "skill_cards" field.</summary>
  public const int SkillCardsFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_skillCards_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> skillCards_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 技能卡牌
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> SkillCards {
    get { return skillCards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_exploration_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_exploration_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Index != other.Index) return false;
    if (CharacterId != other.CharacterId) return false;
    if (RefreshTime != other.RefreshTime) return false;
    if(!skillCards_.Equals(other.skillCards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Index != 0) hash ^= Index.GetHashCode();
    if (CharacterId != 0) hash ^= CharacterId.GetHashCode();
    if (RefreshTime != 0L) hash ^= RefreshTime.GetHashCode();
    hash ^= skillCards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (CharacterId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CharacterId);
    }
    if (RefreshTime != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(RefreshTime);
    }
    skillCards_.WriteTo(output, _repeated_skillCards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (CharacterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterId);
    }
    if (RefreshTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTime);
    }
    size += skillCards_.CalculateSize(_repeated_skillCards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_exploration_start other) {
    if (other == null) {
      return;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.CharacterId != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.RefreshTime != 0L) {
      RefreshTime = other.RefreshTime;
    }
    skillCards_.Add(other.skillCards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 16: {
          CharacterId = input.ReadInt32();
          break;
        }
        case 24: {
          RefreshTime = input.ReadInt64();
          break;
        }
        case 34:
        case 32: {
          skillCards_.AddEntriesFrom(input, _repeated_skillCards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_exploration_start : pb::IMessage<l2c_exploration_start> {
  private static readonly pb::MessageParser<l2c_exploration_start> _parser = new pb::MessageParser<l2c_exploration_start>(() => new l2c_exploration_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_exploration_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[176]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_start(l2c_exploration_start other) : this() {
    mission_ = other.mission_ != null ? other.mission_.Clone() : null;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_start Clone() {
    return new l2c_exploration_start(this);
  }

  /// <summary>Field number for the "mission" field.</summary>
  public const int MissionFieldNumber = 1;
  private global::ExplorationInfo mission_;
  /// <summary>
  /// 探索任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ExplorationInfo Mission {
    get { return mission_; }
    set {
      mission_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 2;
  private int result_;
  /// <summary>
  /// 0: 网络错误（已进行探索、掉线重连等） 1：成功  2：任务被刷新
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_exploration_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_exploration_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Mission, other.Mission)) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (mission_ != null) hash ^= Mission.GetHashCode();
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (mission_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Mission);
    }
    if (Result != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (mission_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mission);
    }
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_exploration_start other) {
    if (other == null) {
      return;
    }
    if (other.mission_ != null) {
      if (mission_ == null) {
        mission_ = new global::ExplorationInfo();
      }
      Mission.MergeFrom(other.Mission);
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (mission_ == null) {
            mission_ = new global::ExplorationInfo();
          }
          input.ReadMessage(mission_);
          break;
        }
        case 16: {
          Result = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_exploration_upd : pb::IMessage<l2c_exploration_upd> {
  private static readonly pb::MessageParser<l2c_exploration_upd> _parser = new pb::MessageParser<l2c_exploration_upd>(() => new l2c_exploration_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_exploration_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[177]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_upd(l2c_exploration_upd other) : this() {
    mission_ = other.mission_ != null ? other.mission_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_upd Clone() {
    return new l2c_exploration_upd(this);
  }

  /// <summary>Field number for the "mission" field.</summary>
  public const int MissionFieldNumber = 1;
  private global::ExplorationInfo mission_;
  /// <summary>
  /// 同步探索子任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ExplorationInfo Mission {
    get { return mission_; }
    set {
      mission_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_exploration_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_exploration_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Mission, other.Mission)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (mission_ != null) hash ^= Mission.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (mission_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Mission);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (mission_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mission);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_exploration_upd other) {
    if (other == null) {
      return;
    }
    if (other.mission_ != null) {
      if (mission_ == null) {
        mission_ = new global::ExplorationInfo();
      }
      Mission.MergeFrom(other.Mission);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (mission_ == null) {
            mission_ = new global::ExplorationInfo();
          }
          input.ReadMessage(mission_);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_exploration_award : pb::IMessage<c2l_exploration_award> {
  private static readonly pb::MessageParser<c2l_exploration_award> _parser = new pb::MessageParser<c2l_exploration_award>(() => new c2l_exploration_award());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_exploration_award> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[178]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_award() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_award(c2l_exploration_award other) : this() {
    index_ = other.index_;
    operType_ = other.operType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_exploration_award Clone() {
    return new c2l_exploration_award(this);
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 1;
  private int index_;
  /// <summary>
  /// 探索栏号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "oper_type" field.</summary>
  public const int OperTypeFieldNumber = 2;
  private int operType_;
  /// <summary>
  /// 操作类型 0:备用 1：放弃任务 2：领奖任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OperType {
    get { return operType_; }
    set {
      operType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_exploration_award);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_exploration_award other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Index != other.Index) return false;
    if (OperType != other.OperType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Index != 0) hash ^= Index.GetHashCode();
    if (OperType != 0) hash ^= OperType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (OperType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(OperType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (OperType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_exploration_award other) {
    if (other == null) {
      return;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.OperType != 0) {
      OperType = other.OperType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 16: {
          OperType = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_exploration_award : pb::IMessage<l2c_exploration_award> {
  private static readonly pb::MessageParser<l2c_exploration_award> _parser = new pb::MessageParser<l2c_exploration_award>(() => new l2c_exploration_award());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_exploration_award> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[179]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_award() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_award(l2c_exploration_award other) : this() {
    mission_ = other.mission_ != null ? other.mission_.Clone() : null;
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_exploration_award Clone() {
    return new l2c_exploration_award(this);
  }

  /// <summary>Field number for the "mission" field.</summary>
  public const int MissionFieldNumber = 1;
  private global::ExplorationInfo mission_;
  /// <summary>
  /// 同步探索任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ExplorationInfo Mission {
    get { return mission_; }
    set {
      mission_ = value;
    }
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_items_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> items_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 领取物品
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_exploration_award);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_exploration_award other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Mission, other.Mission)) return false;
    if(!items_.Equals(other.items_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (mission_ != null) hash ^= Mission.GetHashCode();
    hash ^= items_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (mission_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Mission);
    }
    items_.WriteTo(output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (mission_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mission);
    }
    size += items_.CalculateSize(_repeated_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_exploration_award other) {
    if (other == null) {
      return;
    }
    if (other.mission_ != null) {
      if (mission_ == null) {
        mission_ = new global::ExplorationInfo();
      }
      Mission.MergeFrom(other.Mission);
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (mission_ == null) {
            mission_ = new global::ExplorationInfo();
          }
          input.ReadMessage(mission_);
          break;
        }
        case 18: {
          items_.AddEntriesFrom(input, _repeated_items_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///七日累积登录------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class c2l_sevenlogin_init : pb::IMessage<c2l_sevenlogin_init> {
  private static readonly pb::MessageParser<c2l_sevenlogin_init> _parser = new pb::MessageParser<c2l_sevenlogin_init>(() => new c2l_sevenlogin_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_sevenlogin_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[180]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sevenlogin_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sevenlogin_init(c2l_sevenlogin_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sevenlogin_init Clone() {
    return new c2l_sevenlogin_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_sevenlogin_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_sevenlogin_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_sevenlogin_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_sevenlogin_reward : pb::IMessage<l2c_sevenlogin_reward> {
  private static readonly pb::MessageParser<l2c_sevenlogin_reward> _parser = new pb::MessageParser<l2c_sevenlogin_reward>(() => new l2c_sevenlogin_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_sevenlogin_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[181]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sevenlogin_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sevenlogin_reward(l2c_sevenlogin_reward other) : this() {
    dayid_ = other.dayid_;
    rewards_ = other.rewards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sevenlogin_reward Clone() {
    return new l2c_sevenlogin_reward(this);
  }

  /// <summary>Field number for the "dayid" field.</summary>
  public const int DayidFieldNumber = 1;
  private int dayid_;
  /// <summary>
  /// 天数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Dayid {
    get { return dayid_; }
    set {
      dayid_ = value;
    }
  }

  /// <summary>Field number for the "rewards" field.</summary>
  public const int RewardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> rewards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Rewards {
    get { return rewards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_sevenlogin_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_sevenlogin_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Dayid != other.Dayid) return false;
    if(!rewards_.Equals(other.rewards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Dayid != 0) hash ^= Dayid.GetHashCode();
    hash ^= rewards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Dayid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Dayid);
    }
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Dayid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dayid);
    }
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_sevenlogin_reward other) {
    if (other == null) {
      return;
    }
    if (other.Dayid != 0) {
      Dayid = other.Dayid;
    }
    rewards_.Add(other.rewards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Dayid = input.ReadInt32();
          break;
        }
        case 18: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///个性化设置------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class l2c_options_upd : pb::IMessage<l2c_options_upd> {
  private static readonly pb::MessageParser<l2c_options_upd> _parser = new pb::MessageParser<l2c_options_upd>(() => new l2c_options_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_options_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[182]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_upd(l2c_options_upd other) : this() {
    ownHeadFrame_ = other.ownHeadFrame_.Clone();
    ownBackground_ = other.ownBackground_.Clone();
    ownHeadImage_ = other.ownHeadImage_.Clone();
    isFirstRename_ = other.isFirstRename_;
    curHeadFrame_ = other.curHeadFrame_;
    curHeadImage_ = other.curHeadImage_;
    curBackground_ = other.curBackground_;
    phoneNum_ = other.phoneNum_;
    reward_ = other.reward_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_upd Clone() {
    return new l2c_options_upd(this);
  }

  /// <summary>Field number for the "own_head_frame" field.</summary>
  public const int OwnHeadFrameFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_ownHeadFrame_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> ownHeadFrame_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 拥有的所有头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> OwnHeadFrame {
    get { return ownHeadFrame_; }
  }

  /// <summary>Field number for the "own_background" field.</summary>
  public const int OwnBackgroundFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_ownBackground_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> ownBackground_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 拥有的所有背景
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> OwnBackground {
    get { return ownBackground_; }
  }

  /// <summary>Field number for the "own_head_image" field.</summary>
  public const int OwnHeadImageFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_ownHeadImage_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> ownHeadImage_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 拥有的所有头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> OwnHeadImage {
    get { return ownHeadImage_; }
  }

  /// <summary>Field number for the "is_first_rename" field.</summary>
  public const int IsFirstRenameFieldNumber = 4;
  private bool isFirstRename_;
  /// <summary>
  /// 是否使用第一次改名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsFirstRename {
    get { return isFirstRename_; }
    set {
      isFirstRename_ = value;
    }
  }

  /// <summary>Field number for the "cur_head_frame" field.</summary>
  public const int CurHeadFrameFieldNumber = 5;
  private int curHeadFrame_;
  /// <summary>
  /// 当前使用的头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurHeadFrame {
    get { return curHeadFrame_; }
    set {
      curHeadFrame_ = value;
    }
  }

  /// <summary>Field number for the "cur_head_image" field.</summary>
  public const int CurHeadImageFieldNumber = 6;
  private int curHeadImage_;
  /// <summary>
  /// 当前使用的头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurHeadImage {
    get { return curHeadImage_; }
    set {
      curHeadImage_ = value;
    }
  }

  /// <summary>Field number for the "cur_background" field.</summary>
  public const int CurBackgroundFieldNumber = 7;
  private int curBackground_;
  /// <summary>
  /// 当前使用的背景
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurBackground {
    get { return curBackground_; }
    set {
      curBackground_ = value;
    }
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 8;
  private string phoneNum_ = "";
  /// <summary>
  /// 当前绑定手机
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 9;
  private bool reward_;
  /// <summary>
  /// 是否已领奖
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Reward {
    get { return reward_; }
    set {
      reward_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_options_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_options_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ownHeadFrame_.Equals(other.ownHeadFrame_)) return false;
    if(!ownBackground_.Equals(other.ownBackground_)) return false;
    if(!ownHeadImage_.Equals(other.ownHeadImage_)) return false;
    if (IsFirstRename != other.IsFirstRename) return false;
    if (CurHeadFrame != other.CurHeadFrame) return false;
    if (CurHeadImage != other.CurHeadImage) return false;
    if (CurBackground != other.CurBackground) return false;
    if (PhoneNum != other.PhoneNum) return false;
    if (Reward != other.Reward) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ownHeadFrame_.GetHashCode();
    hash ^= ownBackground_.GetHashCode();
    hash ^= ownHeadImage_.GetHashCode();
    if (IsFirstRename != false) hash ^= IsFirstRename.GetHashCode();
    if (CurHeadFrame != 0) hash ^= CurHeadFrame.GetHashCode();
    if (CurHeadImage != 0) hash ^= CurHeadImage.GetHashCode();
    if (CurBackground != 0) hash ^= CurBackground.GetHashCode();
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (Reward != false) hash ^= Reward.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    ownHeadFrame_.WriteTo(output, _repeated_ownHeadFrame_codec);
    ownBackground_.WriteTo(output, _repeated_ownBackground_codec);
    ownHeadImage_.WriteTo(output, _repeated_ownHeadImage_codec);
    if (IsFirstRename != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsFirstRename);
    }
    if (CurHeadFrame != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(CurHeadFrame);
    }
    if (CurHeadImage != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(CurHeadImage);
    }
    if (CurBackground != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(CurBackground);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(PhoneNum);
    }
    if (Reward != false) {
      output.WriteRawTag(72);
      output.WriteBool(Reward);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ownHeadFrame_.CalculateSize(_repeated_ownHeadFrame_codec);
    size += ownBackground_.CalculateSize(_repeated_ownBackground_codec);
    size += ownHeadImage_.CalculateSize(_repeated_ownHeadImage_codec);
    if (IsFirstRename != false) {
      size += 1 + 1;
    }
    if (CurHeadFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurHeadFrame);
    }
    if (CurHeadImage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurHeadImage);
    }
    if (CurBackground != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurBackground);
    }
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (Reward != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_options_upd other) {
    if (other == null) {
      return;
    }
    ownHeadFrame_.Add(other.ownHeadFrame_);
    ownBackground_.Add(other.ownBackground_);
    ownHeadImage_.Add(other.ownHeadImage_);
    if (other.IsFirstRename != false) {
      IsFirstRename = other.IsFirstRename;
    }
    if (other.CurHeadFrame != 0) {
      CurHeadFrame = other.CurHeadFrame;
    }
    if (other.CurHeadImage != 0) {
      CurHeadImage = other.CurHeadImage;
    }
    if (other.CurBackground != 0) {
      CurBackground = other.CurBackground;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.Reward != false) {
      Reward = other.Reward;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          ownHeadFrame_.AddEntriesFrom(input, _repeated_ownHeadFrame_codec);
          break;
        }
        case 18:
        case 16: {
          ownBackground_.AddEntriesFrom(input, _repeated_ownBackground_codec);
          break;
        }
        case 26:
        case 24: {
          ownHeadImage_.AddEntriesFrom(input, _repeated_ownHeadImage_codec);
          break;
        }
        case 32: {
          IsFirstRename = input.ReadBool();
          break;
        }
        case 40: {
          CurHeadFrame = input.ReadInt32();
          break;
        }
        case 48: {
          CurHeadImage = input.ReadInt32();
          break;
        }
        case 56: {
          CurBackground = input.ReadInt32();
          break;
        }
        case 66: {
          PhoneNum = input.ReadString();
          break;
        }
        case 72: {
          Reward = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_options_init : pb::IMessage<c2l_options_init> {
  private static readonly pb::MessageParser<c2l_options_init> _parser = new pb::MessageParser<c2l_options_init>(() => new c2l_options_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_options_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[183]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_init(c2l_options_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_init Clone() {
    return new c2l_options_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_options_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_options_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_options_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_options_init : pb::IMessage<l2c_options_init> {
  private static readonly pb::MessageParser<l2c_options_init> _parser = new pb::MessageParser<l2c_options_init>(() => new l2c_options_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_options_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[184]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_init(l2c_options_init other) : this() {
    infos_ = other.infos_ != null ? other.infos_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_init Clone() {
    return new l2c_options_init(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 5;
  private global::l2c_options_upd infos_;
  /// <summary>
  /// 拥有的个性内容
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_options_upd Infos {
    get { return infos_; }
    set {
      infos_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_options_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_options_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Infos, other.Infos)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (infos_ != null) hash ^= Infos.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (infos_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Infos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (infos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Infos);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_options_init other) {
    if (other == null) {
      return;
    }
    if (other.infos_ != null) {
      if (infos_ == null) {
        infos_ = new global::l2c_options_upd();
      }
      Infos.MergeFrom(other.Infos);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 42: {
          if (infos_ == null) {
            infos_ = new global::l2c_options_upd();
          }
          input.ReadMessage(infos_);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_options_modify : pb::IMessage<c2l_options_modify> {
  private static readonly pb::MessageParser<c2l_options_modify> _parser = new pb::MessageParser<c2l_options_modify>(() => new c2l_options_modify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_options_modify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[185]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_modify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_modify(c2l_options_modify other) : this() {
    type_ = other.type_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_modify Clone() {
    return new c2l_options_modify(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::OptionsType type_ = 0;
  /// <summary>
  /// 修改的类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::OptionsType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private string value_ = "";
  /// <summary>
  /// 修改的值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_options_modify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_options_modify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_options_modify other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::OptionsType) input.ReadEnum();
          break;
        }
        case 18: {
          Value = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_options_modify : pb::IMessage<l2c_options_modify> {
  private static readonly pb::MessageParser<l2c_options_modify> _parser = new pb::MessageParser<l2c_options_modify>(() => new l2c_options_modify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_options_modify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[186]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_modify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_modify(l2c_options_modify other) : this() {
    isResult_ = other.isResult_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_modify Clone() {
    return new l2c_options_modify(this);
  }

  /// <summary>Field number for the "is_result" field.</summary>
  public const int IsResultFieldNumber = 1;
  private bool isResult_;
  /// <summary>
  /// 设置结果（由于屏蔽字原因，不走60000）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsResult {
    get { return isResult_; }
    set {
      isResult_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_options_modify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_options_modify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsResult != other.IsResult) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsResult != false) hash ^= IsResult.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IsResult != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsResult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsResult != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_options_modify other) {
    if (other == null) {
      return;
    }
    if (other.IsResult != false) {
      IsResult = other.IsResult;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsResult = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_options_buy : pb::IMessage<c2l_options_buy> {
  private static readonly pb::MessageParser<c2l_options_buy> _parser = new pb::MessageParser<c2l_options_buy>(() => new c2l_options_buy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_options_buy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[187]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_buy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_buy(c2l_options_buy other) : this() {
    type_ = other.type_;
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_buy Clone() {
    return new c2l_options_buy(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::OptionsType type_ = 0;
  /// <summary>
  /// 类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::OptionsType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  /// <summary>
  /// 购买的ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_options_buy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_options_buy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_options_buy other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::OptionsType) input.ReadEnum();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_options_buy : pb::IMessage<l2c_options_buy> {
  private static readonly pb::MessageParser<l2c_options_buy> _parser = new pb::MessageParser<l2c_options_buy>(() => new l2c_options_buy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_options_buy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[188]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_buy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_buy(l2c_options_buy other) : this() {
    isResult_ = other.isResult_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_options_buy Clone() {
    return new l2c_options_buy(this);
  }

  /// <summary>Field number for the "is_result" field.</summary>
  public const int IsResultFieldNumber = 1;
  private bool isResult_;
  /// <summary>
  /// 结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsResult {
    get { return isResult_; }
    set {
      isResult_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_options_buy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_options_buy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsResult != other.IsResult) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsResult != false) hash ^= IsResult.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IsResult != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsResult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsResult != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_options_buy other) {
    if (other == null) {
      return;
    }
    if (other.IsResult != false) {
      IsResult = other.IsResult;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsResult = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_options_diy_headimg_upd : pb::IMessage<c2l_options_diy_headimg_upd> {
  private static readonly pb::MessageParser<c2l_options_diy_headimg_upd> _parser = new pb::MessageParser<c2l_options_diy_headimg_upd>(() => new c2l_options_diy_headimg_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_options_diy_headimg_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[189]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_diy_headimg_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_diy_headimg_upd(c2l_options_diy_headimg_upd other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_options_diy_headimg_upd Clone() {
    return new c2l_options_diy_headimg_upd(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_options_diy_headimg_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_options_diy_headimg_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_options_diy_headimg_upd other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
///抽卡------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class c2l_lottery_cost : pb::IMessage<c2l_lottery_cost> {
  private static readonly pb::MessageParser<c2l_lottery_cost> _parser = new pb::MessageParser<c2l_lottery_cost>(() => new c2l_lottery_cost());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_lottery_cost> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[190]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_cost() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_cost(c2l_lottery_cost other) : this() {
    poolId_ = other.poolId_;
    costCnts_ = other.costCnts_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_cost Clone() {
    return new c2l_lottery_cost(this);
  }

  /// <summary>Field number for the "pool_id" field.</summary>
  public const int PoolIdFieldNumber = 1;
  private int poolId_;
  /// <summary>
  /// 抽卡卡池ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PoolId {
    get { return poolId_; }
    set {
      poolId_ = value;
    }
  }

  /// <summary>Field number for the "cost_cnts" field.</summary>
  public const int CostCntsFieldNumber = 2;
  private int costCnts_;
  /// <summary>
  /// 抽取次数，区间[1, 10]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CostCnts {
    get { return costCnts_; }
    set {
      costCnts_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_lottery_cost);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_lottery_cost other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PoolId != other.PoolId) return false;
    if (CostCnts != other.CostCnts) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PoolId != 0) hash ^= PoolId.GetHashCode();
    if (CostCnts != 0) hash ^= CostCnts.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PoolId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PoolId);
    }
    if (CostCnts != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CostCnts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PoolId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoolId);
    }
    if (CostCnts != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostCnts);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_lottery_cost other) {
    if (other == null) {
      return;
    }
    if (other.PoolId != 0) {
      PoolId = other.PoolId;
    }
    if (other.CostCnts != 0) {
      CostCnts = other.CostCnts;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PoolId = input.ReadInt32();
          break;
        }
        case 16: {
          CostCnts = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_lottery_cost : pb::IMessage<l2c_lottery_cost> {
  private static readonly pb::MessageParser<l2c_lottery_cost> _parser = new pb::MessageParser<l2c_lottery_cost>(() => new l2c_lottery_cost());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_lottery_cost> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[191]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_cost() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_cost(l2c_lottery_cost other) : this() {
    results_ = other.results_.Clone();
    isEnable_ = other.isEnable_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_cost Clone() {
    return new l2c_lottery_cost(this);
  }

  /// <summary>Field number for the "results" field.</summary>
  public const int ResultsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_lottery_cost.Types.GachaInfo> _repeated_results_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_lottery_cost.Types.GachaInfo.Parser);
  private readonly pbc::RepeatedField<global::l2c_lottery_cost.Types.GachaInfo> results_ = new pbc::RepeatedField<global::l2c_lottery_cost.Types.GachaInfo>();
  /// <summary>
  /// 抽奖结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_lottery_cost.Types.GachaInfo> Results {
    get { return results_; }
  }

  /// <summary>Field number for the "is_enable" field.</summary>
  public const int IsEnableFieldNumber = 2;
  private bool isEnable_;
  /// <summary>
  /// 卡池是否可抽（false时表示卡池结束，抽奖失败，其余情况为true）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsEnable {
    get { return isEnable_; }
    set {
      isEnable_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 3;
  private int result_;
  /// <summary>
  /// 抽奖结果（0:异常  1：成功  2：券不足）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_lottery_cost);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_lottery_cost other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!results_.Equals(other.results_)) return false;
    if (IsEnable != other.IsEnable) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= results_.GetHashCode();
    if (IsEnable != false) hash ^= IsEnable.GetHashCode();
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    results_.WriteTo(output, _repeated_results_codec);
    if (IsEnable != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsEnable);
    }
    if (Result != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += results_.CalculateSize(_repeated_results_codec);
    if (IsEnable != false) {
      size += 1 + 1;
    }
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_lottery_cost other) {
    if (other == null) {
      return;
    }
    results_.Add(other.results_);
    if (other.IsEnable != false) {
      IsEnable = other.IsEnable;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          results_.AddEntriesFrom(input, _repeated_results_codec);
          break;
        }
        case 16: {
          IsEnable = input.ReadBool();
          break;
        }
        case 24: {
          Result = input.ReadInt32();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_lottery_cost message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class GachaInfo : pb::IMessage<GachaInfo> {
      private static readonly pb::MessageParser<GachaInfo> _parser = new pb::MessageParser<GachaInfo>(() => new GachaInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<GachaInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_lottery_cost.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public GachaInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public GachaInfo(GachaInfo other) : this() {
        index_ = other.index_;
        items_ = other.items_ != null ? other.items_.Clone() : null;
        attach_ = other.attach_.Clone();
        isNew_ = other.isNew_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public GachaInfo Clone() {
        return new GachaInfo(this);
      }

      /// <summary>Field number for the "index" field.</summary>
      public const int IndexFieldNumber = 1;
      private int index_;
      /// <summary>
      /// 结果索引(从0开始)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Index {
        get { return index_; }
        set {
          index_ = value;
        }
      }

      /// <summary>Field number for the "items" field.</summary>
      public const int ItemsFieldNumber = 2;
      private global::PTGameElement items_;
      /// <summary>
      /// 抽奖获得的主要道具（用于展示）
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::PTGameElement Items {
        get { return items_; }
        set {
          items_ = value;
        }
      }

      /// <summary>Field number for the "attach" field.</summary>
      public const int AttachFieldNumber = 3;
      private static readonly pb::FieldCodec<global::PTGameElement> _repeated_attach_codec
          = pb::FieldCodec.ForMessage(26, global::PTGameElement.Parser);
      private readonly pbc::RepeatedField<global::PTGameElement> attach_ = new pbc::RepeatedField<global::PTGameElement>();
      /// <summary>
      /// 抽奖附带的其他道具
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<global::PTGameElement> Attach {
        get { return attach_; }
      }

      /// <summary>Field number for the "is_new" field.</summary>
      public const int IsNewFieldNumber = 4;
      private bool isNew_;
      /// <summary>
      /// 是否为新道具
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IsNew {
        get { return isNew_; }
        set {
          isNew_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as GachaInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(GachaInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Index != other.Index) return false;
        if (!object.Equals(Items, other.Items)) return false;
        if(!attach_.Equals(other.attach_)) return false;
        if (IsNew != other.IsNew) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Index != 0) hash ^= Index.GetHashCode();
        if (items_ != null) hash ^= Items.GetHashCode();
        hash ^= attach_.GetHashCode();
        if (IsNew != false) hash ^= IsNew.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Index != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Index);
        }
        if (items_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Items);
        }
        attach_.WriteTo(output, _repeated_attach_codec);
        if (IsNew != false) {
          output.WriteRawTag(32);
          output.WriteBool(IsNew);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Index != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
        }
        if (items_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Items);
        }
        size += attach_.CalculateSize(_repeated_attach_codec);
        if (IsNew != false) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(GachaInfo other) {
        if (other == null) {
          return;
        }
        if (other.Index != 0) {
          Index = other.Index;
        }
        if (other.items_ != null) {
          if (items_ == null) {
            items_ = new global::PTGameElement();
          }
          Items.MergeFrom(other.Items);
        }
        attach_.Add(other.attach_);
        if (other.IsNew != false) {
          IsNew = other.IsNew;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Index = input.ReadInt32();
              break;
            }
            case 18: {
              if (items_ == null) {
                items_ = new global::PTGameElement();
              }
              input.ReadMessage(items_);
              break;
            }
            case 26: {
              attach_.AddEntriesFrom(input, _repeated_attach_codec);
              break;
            }
            case 32: {
              IsNew = input.ReadBool();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_lottery_add : pb::IMessage<c2l_lottery_add> {
  private static readonly pb::MessageParser<c2l_lottery_add> _parser = new pb::MessageParser<c2l_lottery_add>(() => new c2l_lottery_add());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_lottery_add> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[192]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_add() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_add(c2l_lottery_add other) : this() {
    poolId_ = other.poolId_;
    addCnts_ = other.addCnts_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_add Clone() {
    return new c2l_lottery_add(this);
  }

  /// <summary>Field number for the "pool_id" field.</summary>
  public const int PoolIdFieldNumber = 1;
  private int poolId_;
  /// <summary>
  /// 抽卡卡池
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PoolId {
    get { return poolId_; }
    set {
      poolId_ = value;
    }
  }

  /// <summary>Field number for the "add_cnts" field.</summary>
  public const int AddCntsFieldNumber = 2;
  private int addCnts_;
  /// <summary>
  /// 补充的数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AddCnts {
    get { return addCnts_; }
    set {
      addCnts_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_lottery_add);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_lottery_add other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PoolId != other.PoolId) return false;
    if (AddCnts != other.AddCnts) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PoolId != 0) hash ^= PoolId.GetHashCode();
    if (AddCnts != 0) hash ^= AddCnts.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PoolId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PoolId);
    }
    if (AddCnts != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AddCnts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PoolId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoolId);
    }
    if (AddCnts != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddCnts);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_lottery_add other) {
    if (other == null) {
      return;
    }
    if (other.PoolId != 0) {
      PoolId = other.PoolId;
    }
    if (other.AddCnts != 0) {
      AddCnts = other.AddCnts;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PoolId = input.ReadInt32();
          break;
        }
        case 16: {
          AddCnts = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_lottery_add : pb::IMessage<l2c_lottery_add> {
  private static readonly pb::MessageParser<l2c_lottery_add> _parser = new pb::MessageParser<l2c_lottery_add>(() => new l2c_lottery_add());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_lottery_add> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[193]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_add() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_add(l2c_lottery_add other) : this() {
    tickets_ = other.tickets_.Clone();
    isEnable_ = other.isEnable_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_add Clone() {
    return new l2c_lottery_add(this);
  }

  /// <summary>Field number for the "tickets" field.</summary>
  public const int TicketsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_tickets_codec
      = pb::FieldCodec.ForMessage(10, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> tickets_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 购买对应卡池的抽奖券
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Tickets {
    get { return tickets_; }
  }

  /// <summary>Field number for the "is_enable" field.</summary>
  public const int IsEnableFieldNumber = 2;
  private bool isEnable_;
  /// <summary>
  /// 卡池是否可抽（false时表示卡池结束，购买抽奖券失败，其余情况为true）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsEnable {
    get { return isEnable_; }
    set {
      isEnable_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 3;
  private int result_;
  /// <summary>
  /// 抽奖结果（0:异常  1：成功  2：钻石不足）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_lottery_add);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_lottery_add other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!tickets_.Equals(other.tickets_)) return false;
    if (IsEnable != other.IsEnable) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= tickets_.GetHashCode();
    if (IsEnable != false) hash ^= IsEnable.GetHashCode();
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    tickets_.WriteTo(output, _repeated_tickets_codec);
    if (IsEnable != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsEnable);
    }
    if (Result != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += tickets_.CalculateSize(_repeated_tickets_codec);
    if (IsEnable != false) {
      size += 1 + 1;
    }
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_lottery_add other) {
    if (other == null) {
      return;
    }
    tickets_.Add(other.tickets_);
    if (other.IsEnable != false) {
      IsEnable = other.IsEnable;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          tickets_.AddEntriesFrom(input, _repeated_tickets_codec);
          break;
        }
        case 16: {
          IsEnable = input.ReadBool();
          break;
        }
        case 24: {
          Result = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_lottery_pool_upd : pb::IMessage<l2c_lottery_pool_upd> {
  private static readonly pb::MessageParser<l2c_lottery_pool_upd> _parser = new pb::MessageParser<l2c_lottery_pool_upd>(() => new l2c_lottery_pool_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_lottery_pool_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[194]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_pool_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_pool_upd(l2c_lottery_pool_upd other) : this() {
    poolId_ = other.poolId_;
    endSecs_ = other.endSecs_;
    endTime_ = other.endTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_pool_upd Clone() {
    return new l2c_lottery_pool_upd(this);
  }

  /// <summary>Field number for the "pool_id" field.</summary>
  public const int PoolIdFieldNumber = 1;
  private int poolId_;
  /// <summary>
  /// 卡池ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PoolId {
    get { return poolId_; }
    set {
      poolId_ = value;
    }
  }

  /// <summary>Field number for the "end_secs" field.</summary>
  public const int EndSecsFieldNumber = 2;
  private int endSecs_;
  /// <summary>
  /// 剩余秒数（常驻卡池没有此信息）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EndSecs {
    get { return endSecs_; }
    set {
      endSecs_ = value;
    }
  }

  /// <summary>Field number for the "end_time" field.</summary>
  public const int EndTimeFieldNumber = 3;
  private long endTime_;
  /// <summary>
  /// 截止时间戳（常驻卡池没有此信息）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long EndTime {
    get { return endTime_; }
    set {
      endTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_lottery_pool_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_lottery_pool_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PoolId != other.PoolId) return false;
    if (EndSecs != other.EndSecs) return false;
    if (EndTime != other.EndTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PoolId != 0) hash ^= PoolId.GetHashCode();
    if (EndSecs != 0) hash ^= EndSecs.GetHashCode();
    if (EndTime != 0L) hash ^= EndTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PoolId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PoolId);
    }
    if (EndSecs != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(EndSecs);
    }
    if (EndTime != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(EndTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PoolId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoolId);
    }
    if (EndSecs != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndSecs);
    }
    if (EndTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_lottery_pool_upd other) {
    if (other == null) {
      return;
    }
    if (other.PoolId != 0) {
      PoolId = other.PoolId;
    }
    if (other.EndSecs != 0) {
      EndSecs = other.EndSecs;
    }
    if (other.EndTime != 0L) {
      EndTime = other.EndTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PoolId = input.ReadInt32();
          break;
        }
        case 16: {
          EndSecs = input.ReadInt32();
          break;
        }
        case 24: {
          EndTime = input.ReadInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_lottery_pool_init : pb::IMessage<c2l_lottery_pool_init> {
  private static readonly pb::MessageParser<c2l_lottery_pool_init> _parser = new pb::MessageParser<c2l_lottery_pool_init>(() => new c2l_lottery_pool_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_lottery_pool_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[195]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_pool_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_pool_init(c2l_lottery_pool_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_lottery_pool_init Clone() {
    return new c2l_lottery_pool_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_lottery_pool_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_lottery_pool_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_lottery_pool_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_lottery_pool_init : pb::IMessage<l2c_lottery_pool_init> {
  private static readonly pb::MessageParser<l2c_lottery_pool_init> _parser = new pb::MessageParser<l2c_lottery_pool_init>(() => new l2c_lottery_pool_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_lottery_pool_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[196]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_pool_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_pool_init(l2c_lottery_pool_init other) : this() {
    infos_ = other.infos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_lottery_pool_init Clone() {
    return new l2c_lottery_pool_init(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_lottery_pool_upd> _repeated_infos_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_lottery_pool_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_lottery_pool_upd> infos_ = new pbc::RepeatedField<global::l2c_lottery_pool_upd>();
  /// <summary>
  /// 所有卡池信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_lottery_pool_upd> Infos {
    get { return infos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_lottery_pool_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_lottery_pool_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!infos_.Equals(other.infos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= infos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    infos_.WriteTo(output, _repeated_infos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += infos_.CalculateSize(_repeated_infos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_lottery_pool_init other) {
    if (other == null) {
      return;
    }
    infos_.Add(other.infos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          infos_.AddEntriesFrom(input, _repeated_infos_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///签到------------------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class l2c_sign_in_upd : pb::IMessage<l2c_sign_in_upd> {
  private static readonly pb::MessageParser<l2c_sign_in_upd> _parser = new pb::MessageParser<l2c_sign_in_upd>(() => new l2c_sign_in_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_sign_in_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[197]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sign_in_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sign_in_upd(l2c_sign_in_upd other) : this() {
    curMonth_ = other.curMonth_;
    curDay_ = other.curDay_;
    monthCards_ = other.monthCards_.Clone();
    eles_ = other.eles_.Clone();
    month_ = other.month_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sign_in_upd Clone() {
    return new l2c_sign_in_upd(this);
  }

  /// <summary>Field number for the "cur_month" field.</summary>
  public const int CurMonthFieldNumber = 1;
  private int curMonth_;
  /// <summary>
  /// 当前签到月
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurMonth {
    get { return curMonth_; }
    set {
      curMonth_ = value;
    }
  }

  /// <summary>Field number for the "cur_day" field.</summary>
  public const int CurDayFieldNumber = 2;
  private int curDay_;
  /// <summary>
  /// 当前签到日
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurDay {
    get { return curDay_; }
    set {
      curDay_ = value;
    }
  }

  /// <summary>Field number for the "month_cards" field.</summary>
  public const int MonthCardsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_sign_in_upd.Types.MonthCardInfo> _repeated_monthCards_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_sign_in_upd.Types.MonthCardInfo.Parser);
  private readonly pbc::RepeatedField<global::l2c_sign_in_upd.Types.MonthCardInfo> monthCards_ = new pbc::RepeatedField<global::l2c_sign_in_upd.Types.MonthCardInfo>();
  /// <summary>
  /// 月卡信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_sign_in_upd.Types.MonthCardInfo> MonthCards {
    get { return monthCards_; }
  }

  /// <summary>Field number for the "eles" field.</summary>
  public const int ElesFieldNumber = 5;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_eles_codec
      = pb::FieldCodec.ForMessage(42, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> eles_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 今日签到奖励元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Eles {
    get { return eles_; }
  }

  /// <summary>Field number for the "month" field.</summary>
  public const int MonthFieldNumber = 6;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_month_codec
      = pb::FieldCodec.ForMessage(50, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> month_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 今日月卡奖励元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Month {
    get { return month_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_sign_in_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_sign_in_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CurMonth != other.CurMonth) return false;
    if (CurDay != other.CurDay) return false;
    if(!monthCards_.Equals(other.monthCards_)) return false;
    if(!eles_.Equals(other.eles_)) return false;
    if(!month_.Equals(other.month_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CurMonth != 0) hash ^= CurMonth.GetHashCode();
    if (CurDay != 0) hash ^= CurDay.GetHashCode();
    hash ^= monthCards_.GetHashCode();
    hash ^= eles_.GetHashCode();
    hash ^= month_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CurMonth != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CurMonth);
    }
    if (CurDay != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CurDay);
    }
    monthCards_.WriteTo(output, _repeated_monthCards_codec);
    eles_.WriteTo(output, _repeated_eles_codec);
    month_.WriteTo(output, _repeated_month_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CurMonth != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurMonth);
    }
    if (CurDay != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurDay);
    }
    size += monthCards_.CalculateSize(_repeated_monthCards_codec);
    size += eles_.CalculateSize(_repeated_eles_codec);
    size += month_.CalculateSize(_repeated_month_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_sign_in_upd other) {
    if (other == null) {
      return;
    }
    if (other.CurMonth != 0) {
      CurMonth = other.CurMonth;
    }
    if (other.CurDay != 0) {
      CurDay = other.CurDay;
    }
    monthCards_.Add(other.monthCards_);
    eles_.Add(other.eles_);
    month_.Add(other.month_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CurMonth = input.ReadInt32();
          break;
        }
        case 16: {
          CurDay = input.ReadInt32();
          break;
        }
        case 26: {
          monthCards_.AddEntriesFrom(input, _repeated_monthCards_codec);
          break;
        }
        case 42: {
          eles_.AddEntriesFrom(input, _repeated_eles_codec);
          break;
        }
        case 50: {
          month_.AddEntriesFrom(input, _repeated_month_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_sign_in_upd message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class MonthCardInfo : pb::IMessage<MonthCardInfo> {
      private static readonly pb::MessageParser<MonthCardInfo> _parser = new pb::MessageParser<MonthCardInfo>(() => new MonthCardInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<MonthCardInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_sign_in_upd.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public MonthCardInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public MonthCardInfo(MonthCardInfo other) : this() {
        monthCardId_ = other.monthCardId_;
        monthCardEndTime_ = other.monthCardEndTime_;
        monthCardEndSecs_ = other.monthCardEndSecs_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public MonthCardInfo Clone() {
        return new MonthCardInfo(this);
      }

      /// <summary>Field number for the "month_card_id" field.</summary>
      public const int MonthCardIdFieldNumber = 1;
      private int monthCardId_;
      /// <summary>
      /// 月卡ID（Recharge里的ID）
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int MonthCardId {
        get { return monthCardId_; }
        set {
          monthCardId_ = value;
        }
      }

      /// <summary>Field number for the "month_card_end_time" field.</summary>
      public const int MonthCardEndTimeFieldNumber = 3;
      private long monthCardEndTime_;
      /// <summary>
      /// 月卡截止时间戳
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public long MonthCardEndTime {
        get { return monthCardEndTime_; }
        set {
          monthCardEndTime_ = value;
        }
      }

      /// <summary>Field number for the "month_card_end_secs" field.</summary>
      public const int MonthCardEndSecsFieldNumber = 4;
      private int monthCardEndSecs_;
      /// <summary>
      /// 月卡剩余秒数（0：过期or没有）
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int MonthCardEndSecs {
        get { return monthCardEndSecs_; }
        set {
          monthCardEndSecs_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as MonthCardInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(MonthCardInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (MonthCardId != other.MonthCardId) return false;
        if (MonthCardEndTime != other.MonthCardEndTime) return false;
        if (MonthCardEndSecs != other.MonthCardEndSecs) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (MonthCardId != 0) hash ^= MonthCardId.GetHashCode();
        if (MonthCardEndTime != 0L) hash ^= MonthCardEndTime.GetHashCode();
        if (MonthCardEndSecs != 0) hash ^= MonthCardEndSecs.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (MonthCardId != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(MonthCardId);
        }
        if (MonthCardEndTime != 0L) {
          output.WriteRawTag(24);
          output.WriteInt64(MonthCardEndTime);
        }
        if (MonthCardEndSecs != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(MonthCardEndSecs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (MonthCardId != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonthCardId);
        }
        if (MonthCardEndTime != 0L) {
          size += 1 + pb::CodedOutputStream.ComputeInt64Size(MonthCardEndTime);
        }
        if (MonthCardEndSecs != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonthCardEndSecs);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(MonthCardInfo other) {
        if (other == null) {
          return;
        }
        if (other.MonthCardId != 0) {
          MonthCardId = other.MonthCardId;
        }
        if (other.MonthCardEndTime != 0L) {
          MonthCardEndTime = other.MonthCardEndTime;
        }
        if (other.MonthCardEndSecs != 0) {
          MonthCardEndSecs = other.MonthCardEndSecs;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              MonthCardId = input.ReadInt32();
              break;
            }
            case 24: {
              MonthCardEndTime = input.ReadInt64();
              break;
            }
            case 32: {
              MonthCardEndSecs = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class c2l_sign_in_init : pb::IMessage<c2l_sign_in_init> {
  private static readonly pb::MessageParser<c2l_sign_in_init> _parser = new pb::MessageParser<c2l_sign_in_init>(() => new c2l_sign_in_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_sign_in_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[198]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sign_in_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sign_in_init(c2l_sign_in_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_sign_in_init Clone() {
    return new c2l_sign_in_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_sign_in_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_sign_in_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_sign_in_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_sign_in_init : pb::IMessage<l2c_sign_in_init> {
  private static readonly pb::MessageParser<l2c_sign_in_init> _parser = new pb::MessageParser<l2c_sign_in_init>(() => new l2c_sign_in_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_sign_in_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[199]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sign_in_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sign_in_init(l2c_sign_in_init other) : this() {
    punchDays_ = other.punchDays_.Clone();
    isPunch_ = other.isPunch_;
    info_ = other.info_ != null ? other.info_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_sign_in_init Clone() {
    return new l2c_sign_in_init(this);
  }

  /// <summary>Field number for the "punch_days" field.</summary>
  public const int PunchDaysFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_punchDays_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> punchDays_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 当月已签到日期
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> PunchDays {
    get { return punchDays_; }
  }

  /// <summary>Field number for the "is_punch" field.</summary>
  public const int IsPunchFieldNumber = 2;
  private bool isPunch_;
  /// <summary>
  /// 今日是否签到成功（true:签到成功  false:签到失败-已签到）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsPunch {
    get { return isPunch_; }
    set {
      isPunch_ = value;
    }
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 3;
  private global::l2c_sign_in_upd info_;
  /// <summary>
  /// 今日签到信息（今日已签到时，没有签到元素和月卡奖励元素）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::l2c_sign_in_upd Info {
    get { return info_; }
    set {
      info_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_sign_in_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_sign_in_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!punchDays_.Equals(other.punchDays_)) return false;
    if (IsPunch != other.IsPunch) return false;
    if (!object.Equals(Info, other.Info)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= punchDays_.GetHashCode();
    if (IsPunch != false) hash ^= IsPunch.GetHashCode();
    if (info_ != null) hash ^= Info.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    punchDays_.WriteTo(output, _repeated_punchDays_codec);
    if (IsPunch != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsPunch);
    }
    if (info_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Info);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += punchDays_.CalculateSize(_repeated_punchDays_codec);
    if (IsPunch != false) {
      size += 1 + 1;
    }
    if (info_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_sign_in_init other) {
    if (other == null) {
      return;
    }
    punchDays_.Add(other.punchDays_);
    if (other.IsPunch != false) {
      IsPunch = other.IsPunch;
    }
    if (other.info_ != null) {
      if (info_ == null) {
        info_ = new global::l2c_sign_in_upd();
      }
      Info.MergeFrom(other.Info);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          punchDays_.AddEntriesFrom(input, _repeated_punchDays_codec);
          break;
        }
        case 16: {
          IsPunch = input.ReadBool();
          break;
        }
        case 26: {
          if (info_ == null) {
            info_ = new global::l2c_sign_in_upd();
          }
          input.ReadMessage(info_);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_achievement_init : pb::IMessage<c2l_achievement_init> {
  private static readonly pb::MessageParser<c2l_achievement_init> _parser = new pb::MessageParser<c2l_achievement_init>(() => new c2l_achievement_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_achievement_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[200]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_init(c2l_achievement_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_init Clone() {
    return new c2l_achievement_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_achievement_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_achievement_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_achievement_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_achievement_stage_init : pb::IMessage<l2c_achievement_stage_init> {
  private static readonly pb::MessageParser<l2c_achievement_stage_init> _parser = new pb::MessageParser<l2c_achievement_stage_init>(() => new l2c_achievement_stage_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_achievement_stage_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[201]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_stage_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_stage_init(l2c_achievement_stage_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    stage_ = other.stage_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_stage_init Clone() {
    return new l2c_achievement_stage_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(每页最多10个数据)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 当前页数[0,n]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "stage" field.</summary>
  public const int StageFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_achievement_stage_upd> _repeated_stage_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_achievement_stage_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_achievement_stage_upd> stage_ = new pbc::RepeatedField<global::l2c_achievement_stage_upd>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_achievement_stage_upd> Stage {
    get { return stage_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_achievement_stage_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_achievement_stage_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!stage_.Equals(other.stage_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= stage_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    stage_.WriteTo(output, _repeated_stage_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += stage_.CalculateSize(_repeated_stage_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_achievement_stage_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    stage_.Add(other.stage_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          stage_.AddEntriesFrom(input, _repeated_stage_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_achievement_get_reward : pb::IMessage<c2l_achievement_get_reward> {
  private static readonly pb::MessageParser<c2l_achievement_get_reward> _parser = new pb::MessageParser<c2l_achievement_get_reward>(() => new c2l_achievement_get_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_achievement_get_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[202]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_get_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_get_reward(c2l_achievement_get_reward other) : this() {
    stageId_ = other.stageId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_get_reward Clone() {
    return new c2l_achievement_get_reward(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 成就任务ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_achievement_get_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_achievement_get_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_achievement_get_reward other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_achievement_get_reward : pb::IMessage<l2c_achievement_get_reward> {
  private static readonly pb::MessageParser<l2c_achievement_get_reward> _parser = new pb::MessageParser<l2c_achievement_get_reward>(() => new l2c_achievement_get_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_achievement_get_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[203]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_get_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_get_reward(l2c_achievement_get_reward other) : this() {
    stageId_ = other.stageId_;
    rewards_ = other.rewards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_get_reward Clone() {
    return new l2c_achievement_get_reward(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 成就任务ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "rewards" field.</summary>
  public const int RewardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> rewards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Rewards {
    get { return rewards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_achievement_get_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_achievement_get_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if(!rewards_.Equals(other.rewards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    hash ^= rewards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_achievement_get_reward other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    rewards_.Add(other.rewards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 18: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_achievement_level_up : pb::IMessage<c2l_achievement_level_up> {
  private static readonly pb::MessageParser<c2l_achievement_level_up> _parser = new pb::MessageParser<c2l_achievement_level_up>(() => new c2l_achievement_level_up());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_achievement_level_up> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[204]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_level_up() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_level_up(c2l_achievement_level_up other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_achievement_level_up Clone() {
    return new c2l_achievement_level_up(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_achievement_level_up);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_achievement_level_up other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_achievement_level_up other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_achievement_level_up : pb::IMessage<l2c_achievement_level_up> {
  private static readonly pb::MessageParser<l2c_achievement_level_up> _parser = new pb::MessageParser<l2c_achievement_level_up>(() => new l2c_achievement_level_up());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_achievement_level_up> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[205]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_level_up() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_level_up(l2c_achievement_level_up other) : this() {
    newLevel_ = other.newLevel_;
    rewards_ = other.rewards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_level_up Clone() {
    return new l2c_achievement_level_up(this);
  }

  /// <summary>Field number for the "new_level" field.</summary>
  public const int NewLevelFieldNumber = 1;
  private int newLevel_;
  /// <summary>
  /// 升级后等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NewLevel {
    get { return newLevel_; }
    set {
      newLevel_ = value;
    }
  }

  /// <summary>Field number for the "rewards" field.</summary>
  public const int RewardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> rewards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Rewards {
    get { return rewards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_achievement_level_up);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_achievement_level_up other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NewLevel != other.NewLevel) return false;
    if(!rewards_.Equals(other.rewards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NewLevel != 0) hash ^= NewLevel.GetHashCode();
    hash ^= rewards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NewLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(NewLevel);
    }
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NewLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewLevel);
    }
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_achievement_level_up other) {
    if (other == null) {
      return;
    }
    if (other.NewLevel != 0) {
      NewLevel = other.NewLevel;
    }
    rewards_.Add(other.rewards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          NewLevel = input.ReadInt32();
          break;
        }
        case 18: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_achievement_upd : pb::IMessage<l2c_achievement_upd> {
  private static readonly pb::MessageParser<l2c_achievement_upd> _parser = new pb::MessageParser<l2c_achievement_upd>(() => new l2c_achievement_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_achievement_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[206]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_upd(l2c_achievement_upd other) : this() {
    nowLevel_ = other.nowLevel_;
    exp_ = other.exp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_upd Clone() {
    return new l2c_achievement_upd(this);
  }

  /// <summary>Field number for the "now_level" field.</summary>
  public const int NowLevelFieldNumber = 1;
  private int nowLevel_;
  /// <summary>
  /// 等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NowLevel {
    get { return nowLevel_; }
    set {
      nowLevel_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 2;
  private int exp_;
  /// <summary>
  /// 经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_achievement_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_achievement_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NowLevel != other.NowLevel) return false;
    if (Exp != other.Exp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NowLevel != 0) hash ^= NowLevel.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NowLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(NowLevel);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Exp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NowLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NowLevel);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_achievement_upd other) {
    if (other == null) {
      return;
    }
    if (other.NowLevel != 0) {
      NowLevel = other.NowLevel;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          NowLevel = input.ReadInt32();
          break;
        }
        case 16: {
          Exp = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_achievement_stage_upd : pb::IMessage<l2c_achievement_stage_upd> {
  private static readonly pb::MessageParser<l2c_achievement_stage_upd> _parser = new pb::MessageParser<l2c_achievement_stage_upd>(() => new l2c_achievement_stage_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_achievement_stage_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[207]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_stage_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_stage_upd(l2c_achievement_stage_upd other) : this() {
    stageId_ = other.stageId_;
    completeCount_ = other.completeCount_;
    status_ = other.status_;
    completeTime_ = other.completeTime_;
    completeProportion_ = other.completeProportion_;
    progressTarget_ = other.progressTarget_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_achievement_stage_upd Clone() {
    return new l2c_achievement_stage_upd(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 成就任务ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "complete_count" field.</summary>
  public const int CompleteCountFieldNumber = 2;
  private int completeCount_;
  /// <summary>
  /// 完成进度(目前表示数量)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CompleteCount {
    get { return completeCount_; }
    set {
      completeCount_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 3;
  private global::AchievementStatus status_ = 0;
  /// <summary>
  /// 状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AchievementStatus Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "complete_time" field.</summary>
  public const int CompleteTimeFieldNumber = 4;
  private long completeTime_;
  /// <summary>
  /// 完成时间(完成状态有效)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CompleteTime {
    get { return completeTime_; }
    set {
      completeTime_ = value;
    }
  }

  /// <summary>Field number for the "complete_proportion" field.</summary>
  public const int CompleteProportionFieldNumber = 5;
  private int completeProportion_;
  /// <summary>
  /// 完成比例(放大10000倍)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CompleteProportion {
    get { return completeProportion_; }
    set {
      completeProportion_ = value;
    }
  }

  /// <summary>Field number for the "progress_target" field.</summary>
  public const int ProgressTargetFieldNumber = 6;
  private int progressTarget_;
  /// <summary>
  /// 完成目标		
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ProgressTarget {
    get { return progressTarget_; }
    set {
      progressTarget_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_achievement_stage_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_achievement_stage_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (CompleteCount != other.CompleteCount) return false;
    if (Status != other.Status) return false;
    if (CompleteTime != other.CompleteTime) return false;
    if (CompleteProportion != other.CompleteProportion) return false;
    if (ProgressTarget != other.ProgressTarget) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (CompleteCount != 0) hash ^= CompleteCount.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    if (CompleteTime != 0L) hash ^= CompleteTime.GetHashCode();
    if (CompleteProportion != 0) hash ^= CompleteProportion.GetHashCode();
    if (ProgressTarget != 0) hash ^= ProgressTarget.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (CompleteCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CompleteCount);
    }
    if (Status != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Status);
    }
    if (CompleteTime != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(CompleteTime);
    }
    if (CompleteProportion != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(CompleteProportion);
    }
    if (ProgressTarget != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(ProgressTarget);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (CompleteCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompleteCount);
    }
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (CompleteTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompleteTime);
    }
    if (CompleteProportion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompleteProportion);
    }
    if (ProgressTarget != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProgressTarget);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_achievement_stage_upd other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.CompleteCount != 0) {
      CompleteCount = other.CompleteCount;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    if (other.CompleteTime != 0L) {
      CompleteTime = other.CompleteTime;
    }
    if (other.CompleteProportion != 0) {
      CompleteProportion = other.CompleteProportion;
    }
    if (other.ProgressTarget != 0) {
      ProgressTarget = other.ProgressTarget;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          CompleteCount = input.ReadInt32();
          break;
        }
        case 24: {
          status_ = (global::AchievementStatus) input.ReadEnum();
          break;
        }
        case 32: {
          CompleteTime = input.ReadInt64();
          break;
        }
        case 40: {
          CompleteProportion = input.ReadInt32();
          break;
        }
        case 48: {
          ProgressTarget = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_daily_task_init : pb::IMessage<c2l_daily_task_init> {
  private static readonly pb::MessageParser<c2l_daily_task_init> _parser = new pb::MessageParser<c2l_daily_task_init>(() => new c2l_daily_task_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_daily_task_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[208]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_task_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_task_init(c2l_daily_task_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_task_init Clone() {
    return new c2l_daily_task_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_daily_task_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_daily_task_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_daily_task_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_daily_task_init : pb::IMessage<l2c_daily_task_init> {
  private static readonly pb::MessageParser<l2c_daily_task_init> _parser = new pb::MessageParser<l2c_daily_task_init>(() => new l2c_daily_task_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_task_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[209]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_init(l2c_daily_task_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    task_ = other.task_.Clone();
    activeNum_ = other.activeNum_;
    triggerActiveNum_ = other.triggerActiveNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_init Clone() {
    return new l2c_daily_task_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(每页最多10个数据)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 当前页数[0,n]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "task" field.</summary>
  public const int TaskFieldNumber = 3;
  private static readonly pb::FieldCodec<global::l2c_daily_task_upd> _repeated_task_codec
      = pb::FieldCodec.ForMessage(26, global::l2c_daily_task_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_daily_task_upd> task_ = new pbc::RepeatedField<global::l2c_daily_task_upd>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_daily_task_upd> Task {
    get { return task_; }
  }

  /// <summary>Field number for the "active_num" field.</summary>
  public const int ActiveNumFieldNumber = 4;
  private int activeNum_;
  /// <summary>
  /// 当前活跃值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActiveNum {
    get { return activeNum_; }
    set {
      activeNum_ = value;
    }
  }

  /// <summary>Field number for the "trigger_active_num" field.</summary>
  public const int TriggerActiveNumFieldNumber = 5;
  private int triggerActiveNum_;
  /// <summary>
  /// 多少活跃值会触发活跃 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TriggerActiveNum {
    get { return triggerActiveNum_; }
    set {
      triggerActiveNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_task_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_task_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!task_.Equals(other.task_)) return false;
    if (ActiveNum != other.ActiveNum) return false;
    if (TriggerActiveNum != other.TriggerActiveNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= task_.GetHashCode();
    if (ActiveNum != 0) hash ^= ActiveNum.GetHashCode();
    if (TriggerActiveNum != 0) hash ^= TriggerActiveNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    task_.WriteTo(output, _repeated_task_codec);
    if (ActiveNum != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ActiveNum);
    }
    if (TriggerActiveNum != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(TriggerActiveNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += task_.CalculateSize(_repeated_task_codec);
    if (ActiveNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveNum);
    }
    if (TriggerActiveNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TriggerActiveNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_task_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    task_.Add(other.task_);
    if (other.ActiveNum != 0) {
      ActiveNum = other.ActiveNum;
    }
    if (other.TriggerActiveNum != 0) {
      TriggerActiveNum = other.TriggerActiveNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          task_.AddEntriesFrom(input, _repeated_task_codec);
          break;
        }
        case 32: {
          ActiveNum = input.ReadInt32();
          break;
        }
        case 40: {
          TriggerActiveNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_daily_task_get_reward : pb::IMessage<c2l_daily_task_get_reward> {
  private static readonly pb::MessageParser<c2l_daily_task_get_reward> _parser = new pb::MessageParser<c2l_daily_task_get_reward>(() => new c2l_daily_task_get_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_daily_task_get_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[210]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_task_get_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_task_get_reward(c2l_daily_task_get_reward other) : this() {
    taskId_ = other.taskId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_daily_task_get_reward Clone() {
    return new c2l_daily_task_get_reward(this);
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 1;
  private int taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_daily_task_get_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_daily_task_get_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TaskId != other.TaskId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TaskId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TaskId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_daily_task_get_reward other) {
    if (other == null) {
      return;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TaskId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_daily_task_get_reward : pb::IMessage<l2c_daily_task_get_reward> {
  private static readonly pb::MessageParser<l2c_daily_task_get_reward> _parser = new pb::MessageParser<l2c_daily_task_get_reward>(() => new l2c_daily_task_get_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_task_get_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[211]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_get_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_get_reward(l2c_daily_task_get_reward other) : this() {
    taskId_ = other.taskId_;
    rewards_ = other.rewards_.Clone();
    activeNum_ = other.activeNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_get_reward Clone() {
    return new l2c_daily_task_get_reward(this);
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 1;
  private int taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "rewards" field.</summary>
  public const int RewardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> rewards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Rewards {
    get { return rewards_; }
  }

  /// <summary>Field number for the "active_num" field.</summary>
  public const int ActiveNumFieldNumber = 3;
  private int activeNum_;
  /// <summary>
  /// 当前活跃值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActiveNum {
    get { return activeNum_; }
    set {
      activeNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_task_get_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_task_get_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TaskId != other.TaskId) return false;
    if(!rewards_.Equals(other.rewards_)) return false;
    if (ActiveNum != other.ActiveNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    hash ^= rewards_.GetHashCode();
    if (ActiveNum != 0) hash ^= ActiveNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TaskId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TaskId);
    }
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (ActiveNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ActiveNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
    }
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (ActiveNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_task_get_reward other) {
    if (other == null) {
      return;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    rewards_.Add(other.rewards_);
    if (other.ActiveNum != 0) {
      ActiveNum = other.ActiveNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TaskId = input.ReadInt32();
          break;
        }
        case 18: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
        case 24: {
          ActiveNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_daily_task_upd : pb::IMessage<l2c_daily_task_upd> {
  private static readonly pb::MessageParser<l2c_daily_task_upd> _parser = new pb::MessageParser<l2c_daily_task_upd>(() => new l2c_daily_task_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_daily_task_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[212]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_upd(l2c_daily_task_upd other) : this() {
    taskId_ = other.taskId_;
    completeCount_ = other.completeCount_;
    status_ = other.status_;
    remainTime_ = other.remainTime_;
    target_ = other.target_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_daily_task_upd Clone() {
    return new l2c_daily_task_upd(this);
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 1;
  private int taskId_;
  /// <summary>
  ///任务ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "complete_count" field.</summary>
  public const int CompleteCountFieldNumber = 2;
  private int completeCount_;
  /// <summary>
  ///完成进度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CompleteCount {
    get { return completeCount_; }
    set {
      completeCount_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 3;
  private global::DailyTaskStatus status_ = 0;
  /// <summary>
  ///状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DailyTaskStatus Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "remain_time" field.</summary>
  public const int RemainTimeFieldNumber = 4;
  private int remainTime_;
  /// <summary>
  ///剩余时间(秒数)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RemainTime {
    get { return remainTime_; }
    set {
      remainTime_ = value;
    }
  }

  /// <summary>Field number for the "target" field.</summary>
  public const int TargetFieldNumber = 5;
  private int target_;
  /// <summary>
  ///目标
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Target {
    get { return target_; }
    set {
      target_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_daily_task_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_daily_task_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TaskId != other.TaskId) return false;
    if (CompleteCount != other.CompleteCount) return false;
    if (Status != other.Status) return false;
    if (RemainTime != other.RemainTime) return false;
    if (Target != other.Target) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (CompleteCount != 0) hash ^= CompleteCount.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    if (RemainTime != 0) hash ^= RemainTime.GetHashCode();
    if (Target != 0) hash ^= Target.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TaskId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TaskId);
    }
    if (CompleteCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CompleteCount);
    }
    if (Status != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Status);
    }
    if (RemainTime != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(RemainTime);
    }
    if (Target != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Target);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
    }
    if (CompleteCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompleteCount);
    }
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (RemainTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainTime);
    }
    if (Target != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Target);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_daily_task_upd other) {
    if (other == null) {
      return;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.CompleteCount != 0) {
      CompleteCount = other.CompleteCount;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    if (other.RemainTime != 0) {
      RemainTime = other.RemainTime;
    }
    if (other.Target != 0) {
      Target = other.Target;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TaskId = input.ReadInt32();
          break;
        }
        case 16: {
          CompleteCount = input.ReadInt32();
          break;
        }
        case 24: {
          status_ = (global::DailyTaskStatus) input.ReadEnum();
          break;
        }
        case 32: {
          RemainTime = input.ReadInt32();
          break;
        }
        case 40: {
          Target = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_RESOURCE_PURCHASE_INIT
/// </summary>
public sealed partial class c2l_resource_purchase_init : pb::IMessage<c2l_resource_purchase_init> {
  private static readonly pb::MessageParser<c2l_resource_purchase_init> _parser = new pb::MessageParser<c2l_resource_purchase_init>(() => new c2l_resource_purchase_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_resource_purchase_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[213]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_resource_purchase_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_resource_purchase_init(c2l_resource_purchase_init other) : this() {
    typeId_ = other.typeId_;
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_resource_purchase_init Clone() {
    return new c2l_resource_purchase_init(this);
  }

  /// <summary>Field number for the "type_id" field.</summary>
  public const int TypeIdFieldNumber = 1;
  private global::GameElementType typeId_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameElementType TypeId {
    get { return typeId_; }
    set {
      typeId_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_resource_purchase_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_resource_purchase_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TypeId != other.TypeId) return false;
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TypeId != 0) hash ^= TypeId.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TypeId != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) TypeId);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TypeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeId);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_resource_purchase_init other) {
    if (other == null) {
      return;
    }
    if (other.TypeId != 0) {
      TypeId = other.TypeId;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          typeId_ = (global::GameElementType) input.ReadEnum();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_resource_purchase_init : pb::IMessage<l2c_resource_purchase_init> {
  private static readonly pb::MessageParser<l2c_resource_purchase_init> _parser = new pb::MessageParser<l2c_resource_purchase_init>(() => new l2c_resource_purchase_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_resource_purchase_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[214]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_resource_purchase_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_resource_purchase_init(l2c_resource_purchase_init other) : this() {
    resourceNum_ = other.resourceNum_;
    cost_ = other.cost_;
    typeId_ = other.typeId_;
    id_ = other.id_;
    resNum_ = other.resNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_resource_purchase_init Clone() {
    return new l2c_resource_purchase_init(this);
  }

  /// <summary>Field number for the "resource_num" field.</summary>
  public const int ResourceNumFieldNumber = 1;
  private int resourceNum_;
  /// <summary>
  /// 资源可购买数目
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResourceNum {
    get { return resourceNum_; }
    set {
      resourceNum_ = value;
    }
  }

  /// <summary>Field number for the "cost" field.</summary>
  public const int CostFieldNumber = 2;
  private int cost_;
  /// <summary>
  /// 花费
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cost {
    get { return cost_; }
    set {
      cost_ = value;
    }
  }

  /// <summary>Field number for the "type_id" field.</summary>
  public const int TypeIdFieldNumber = 3;
  private global::GameElementType typeId_ = 0;
  /// <summary>
  /// 要购买的资源类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameElementType TypeId {
    get { return typeId_; }
    set {
      typeId_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 4;
  private int id_;
  /// <summary>
  /// 要购买的资源ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "res_num" field.</summary>
  public const int ResNumFieldNumber = 5;
  private int resNum_;
  /// <summary>
  /// 剩余可购买次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResNum {
    get { return resNum_; }
    set {
      resNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_resource_purchase_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_resource_purchase_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ResourceNum != other.ResourceNum) return false;
    if (Cost != other.Cost) return false;
    if (TypeId != other.TypeId) return false;
    if (Id != other.Id) return false;
    if (ResNum != other.ResNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ResourceNum != 0) hash ^= ResourceNum.GetHashCode();
    if (Cost != 0) hash ^= Cost.GetHashCode();
    if (TypeId != 0) hash ^= TypeId.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (ResNum != 0) hash ^= ResNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ResourceNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResourceNum);
    }
    if (Cost != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Cost);
    }
    if (TypeId != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) TypeId);
    }
    if (Id != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Id);
    }
    if (ResNum != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(ResNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ResourceNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResourceNum);
    }
    if (Cost != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
    }
    if (TypeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeId);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (ResNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_resource_purchase_init other) {
    if (other == null) {
      return;
    }
    if (other.ResourceNum != 0) {
      ResourceNum = other.ResourceNum;
    }
    if (other.Cost != 0) {
      Cost = other.Cost;
    }
    if (other.TypeId != 0) {
      TypeId = other.TypeId;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.ResNum != 0) {
      ResNum = other.ResNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ResourceNum = input.ReadInt32();
          break;
        }
        case 16: {
          Cost = input.ReadInt32();
          break;
        }
        case 24: {
          typeId_ = (global::GameElementType) input.ReadEnum();
          break;
        }
        case 32: {
          Id = input.ReadInt32();
          break;
        }
        case 40: {
          ResNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_resource_purchase_buy : pb::IMessage<c2l_resource_purchase_buy> {
  private static readonly pb::MessageParser<c2l_resource_purchase_buy> _parser = new pb::MessageParser<c2l_resource_purchase_buy>(() => new c2l_resource_purchase_buy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_resource_purchase_buy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[215]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_resource_purchase_buy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_resource_purchase_buy(c2l_resource_purchase_buy other) : this() {
    typeId_ = other.typeId_;
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_resource_purchase_buy Clone() {
    return new c2l_resource_purchase_buy(this);
  }

  /// <summary>Field number for the "type_id" field.</summary>
  public const int TypeIdFieldNumber = 1;
  private global::GameElementType typeId_ = 0;
  /// <summary>
  /// 想购买的资源类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameElementType TypeId {
    get { return typeId_; }
    set {
      typeId_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  /// <summary>
  /// 想购买的资源id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_resource_purchase_buy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_resource_purchase_buy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TypeId != other.TypeId) return false;
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TypeId != 0) hash ^= TypeId.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TypeId != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) TypeId);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TypeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeId);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_resource_purchase_buy other) {
    if (other == null) {
      return;
    }
    if (other.TypeId != 0) {
      TypeId = other.TypeId;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          typeId_ = (global::GameElementType) input.ReadEnum();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_resource_purchase_buy : pb::IMessage<l2c_resource_purchase_buy> {
  private static readonly pb::MessageParser<l2c_resource_purchase_buy> _parser = new pb::MessageParser<l2c_resource_purchase_buy>(() => new l2c_resource_purchase_buy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_resource_purchase_buy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[216]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_resource_purchase_buy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_resource_purchase_buy(l2c_resource_purchase_buy other) : this() {
    successFlag_ = other.successFlag_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_resource_purchase_buy Clone() {
    return new l2c_resource_purchase_buy(this);
  }

  /// <summary>Field number for the "success_flag" field.</summary>
  public const int SuccessFlagFieldNumber = 1;
  private int successFlag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SuccessFlag {
    get { return successFlag_; }
    set {
      successFlag_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_resource_purchase_buy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_resource_purchase_buy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SuccessFlag != other.SuccessFlag) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SuccessFlag != 0) hash ^= SuccessFlag.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SuccessFlag != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SuccessFlag);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SuccessFlag != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuccessFlag);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_resource_purchase_buy other) {
    if (other == null) {
      return;
    }
    if (other.SuccessFlag != 0) {
      SuccessFlag = other.SuccessFlag;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SuccessFlag = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_ontime_vit_init : pb::IMessage<c2l_ontime_vit_init> {
  private static readonly pb::MessageParser<c2l_ontime_vit_init> _parser = new pb::MessageParser<c2l_ontime_vit_init>(() => new c2l_ontime_vit_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_ontime_vit_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[217]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ontime_vit_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ontime_vit_init(c2l_ontime_vit_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ontime_vit_init Clone() {
    return new c2l_ontime_vit_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_ontime_vit_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_ontime_vit_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_ontime_vit_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_ontime_vit_init : pb::IMessage<l2c_ontime_vit_init> {
  private static readonly pb::MessageParser<l2c_ontime_vit_init> _parser = new pb::MessageParser<l2c_ontime_vit_init>(() => new l2c_ontime_vit_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_ontime_vit_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[218]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_init(l2c_ontime_vit_init other) : this() {
    type_ = other.type_;
    vitNum_ = other.vitNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_init Clone() {
    return new l2c_ontime_vit_init(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::OntimeVitUpdateType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::OntimeVitUpdateType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "vit_num" field.</summary>
  public const int VitNumFieldNumber = 2;
  private int vitNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VitNum {
    get { return vitNum_; }
    set {
      vitNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_ontime_vit_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_ontime_vit_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (VitNum != other.VitNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (VitNum != 0) hash ^= VitNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (VitNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(VitNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (VitNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VitNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_ontime_vit_init other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.VitNum != 0) {
      VitNum = other.VitNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::OntimeVitUpdateType) input.ReadEnum();
          break;
        }
        case 16: {
          VitNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_ontime_vit_recv : pb::IMessage<c2l_ontime_vit_recv> {
  private static readonly pb::MessageParser<c2l_ontime_vit_recv> _parser = new pb::MessageParser<c2l_ontime_vit_recv>(() => new c2l_ontime_vit_recv());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_ontime_vit_recv> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[219]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ontime_vit_recv() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ontime_vit_recv(c2l_ontime_vit_recv other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_ontime_vit_recv Clone() {
    return new c2l_ontime_vit_recv(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_ontime_vit_recv);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_ontime_vit_recv other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_ontime_vit_recv other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_ontime_vit_recv : pb::IMessage<l2c_ontime_vit_recv> {
  private static readonly pb::MessageParser<l2c_ontime_vit_recv> _parser = new pb::MessageParser<l2c_ontime_vit_recv>(() => new l2c_ontime_vit_recv());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_ontime_vit_recv> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[220]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_recv() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_recv(l2c_ontime_vit_recv other) : this() {
    successFlag_ = other.successFlag_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_recv Clone() {
    return new l2c_ontime_vit_recv(this);
  }

  /// <summary>Field number for the "success_flag" field.</summary>
  public const int SuccessFlagFieldNumber = 1;
  private int successFlag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SuccessFlag {
    get { return successFlag_; }
    set {
      successFlag_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_ontime_vit_recv);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_ontime_vit_recv other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SuccessFlag != other.SuccessFlag) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SuccessFlag != 0) hash ^= SuccessFlag.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SuccessFlag != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SuccessFlag);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SuccessFlag != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuccessFlag);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_ontime_vit_recv other) {
    if (other == null) {
      return;
    }
    if (other.SuccessFlag != 0) {
      SuccessFlag = other.SuccessFlag;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SuccessFlag = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_ontime_vit_upd : pb::IMessage<l2c_ontime_vit_upd> {
  private static readonly pb::MessageParser<l2c_ontime_vit_upd> _parser = new pb::MessageParser<l2c_ontime_vit_upd>(() => new l2c_ontime_vit_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_ontime_vit_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[221]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_upd(l2c_ontime_vit_upd other) : this() {
    type_ = other.type_;
    vitNum_ = other.vitNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_ontime_vit_upd Clone() {
    return new l2c_ontime_vit_upd(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::OntimeVitUpdateType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::OntimeVitUpdateType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "vit_num" field.</summary>
  public const int VitNumFieldNumber = 2;
  private int vitNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VitNum {
    get { return vitNum_; }
    set {
      vitNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_ontime_vit_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_ontime_vit_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (VitNum != other.VitNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (VitNum != 0) hash ^= VitNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (VitNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(VitNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (VitNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VitNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_ontime_vit_upd other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.VitNum != 0) {
      VitNum = other.VitNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::OntimeVitUpdateType) input.ReadEnum();
          break;
        }
        case 16: {
          VitNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_USE_VIT_PROP
/// </summary>
public sealed partial class c2l_use_vit_prop : pb::IMessage<c2l_use_vit_prop> {
  private static readonly pb::MessageParser<c2l_use_vit_prop> _parser = new pb::MessageParser<c2l_use_vit_prop>(() => new c2l_use_vit_prop());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_use_vit_prop> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[222]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_use_vit_prop() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_use_vit_prop(c2l_use_vit_prop other) : this() {
    costType_ = other.costType_;
    costId_ = other.costId_;
    costNum_ = other.costNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_use_vit_prop Clone() {
    return new c2l_use_vit_prop(this);
  }

  /// <summary>Field number for the "cost_type" field.</summary>
  public const int CostTypeFieldNumber = 1;
  private global::GameElementType costType_ = 0;
  /// <summary>
  /// 消耗类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameElementType CostType {
    get { return costType_; }
    set {
      costType_ = value;
    }
  }

  /// <summary>Field number for the "cost_id" field.</summary>
  public const int CostIdFieldNumber = 2;
  private int costId_;
  /// <summary>
  /// 消耗道具id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CostId {
    get { return costId_; }
    set {
      costId_ = value;
    }
  }

  /// <summary>Field number for the "cost_num" field.</summary>
  public const int CostNumFieldNumber = 3;
  private int costNum_;
  /// <summary>
  /// 消耗数目
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CostNum {
    get { return costNum_; }
    set {
      costNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_use_vit_prop);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_use_vit_prop other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CostType != other.CostType) return false;
    if (CostId != other.CostId) return false;
    if (CostNum != other.CostNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CostType != 0) hash ^= CostType.GetHashCode();
    if (CostId != 0) hash ^= CostId.GetHashCode();
    if (CostNum != 0) hash ^= CostNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CostType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) CostType);
    }
    if (CostId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CostId);
    }
    if (CostNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CostNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CostType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CostType);
    }
    if (CostId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostId);
    }
    if (CostNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_use_vit_prop other) {
    if (other == null) {
      return;
    }
    if (other.CostType != 0) {
      CostType = other.CostType;
    }
    if (other.CostId != 0) {
      CostId = other.CostId;
    }
    if (other.CostNum != 0) {
      CostNum = other.CostNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          costType_ = (global::GameElementType) input.ReadEnum();
          break;
        }
        case 16: {
          CostId = input.ReadInt32();
          break;
        }
        case 24: {
          CostNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_use_vit_prop : pb::IMessage<l2c_use_vit_prop> {
  private static readonly pb::MessageParser<l2c_use_vit_prop> _parser = new pb::MessageParser<l2c_use_vit_prop>(() => new l2c_use_vit_prop());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_use_vit_prop> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[223]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_use_vit_prop() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_use_vit_prop(l2c_use_vit_prop other) : this() {
    successFlag_ = other.successFlag_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_use_vit_prop Clone() {
    return new l2c_use_vit_prop(this);
  }

  /// <summary>Field number for the "success_flag" field.</summary>
  public const int SuccessFlagFieldNumber = 1;
  private int successFlag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SuccessFlag {
    get { return successFlag_; }
    set {
      successFlag_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_use_vit_prop);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_use_vit_prop other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SuccessFlag != other.SuccessFlag) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SuccessFlag != 0) hash ^= SuccessFlag.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SuccessFlag != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SuccessFlag);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SuccessFlag != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuccessFlag);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_use_vit_prop other) {
    if (other == null) {
      return;
    }
    if (other.SuccessFlag != 0) {
      SuccessFlag = other.SuccessFlag;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SuccessFlag = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///LOGIC_MSG_C2L_TIME_LIMIT_PACKAGE_INIT		= 55700;	// 初始化 当前的限时礼包
/// </summary>
public sealed partial class c2l_time_limit_package_init : pb::IMessage<c2l_time_limit_package_init> {
  private static readonly pb::MessageParser<c2l_time_limit_package_init> _parser = new pb::MessageParser<c2l_time_limit_package_init>(() => new c2l_time_limit_package_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_time_limit_package_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[224]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_time_limit_package_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_time_limit_package_init(c2l_time_limit_package_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_time_limit_package_init Clone() {
    return new c2l_time_limit_package_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_time_limit_package_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_time_limit_package_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_time_limit_package_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
///LOGIC_MSG_L2C_TIME_LIMIT_PACKAGE_INIT		= 55701;
/// </summary>
public sealed partial class l2c_time_limit_package_init : pb::IMessage<l2c_time_limit_package_init> {
  private static readonly pb::MessageParser<l2c_time_limit_package_init> _parser = new pb::MessageParser<l2c_time_limit_package_init>(() => new l2c_time_limit_package_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_time_limit_package_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[225]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_time_limit_package_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_time_limit_package_init(l2c_time_limit_package_init other) : this() {
    remainTime_ = other.remainTime_;
    packageId_ = other.packageId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_time_limit_package_init Clone() {
    return new l2c_time_limit_package_init(this);
  }

  /// <summary>Field number for the "remain_time" field.</summary>
  public const int RemainTimeFieldNumber = 1;
  private int remainTime_;
  /// <summary>
  /// 限时礼包剩余时间 若为0 则限时礼包在未开启状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RemainTime {
    get { return remainTime_; }
    set {
      remainTime_ = value;
    }
  }

  /// <summary>Field number for the "package_id" field.</summary>
  public const int PackageIdFieldNumber = 2;
  private int packageId_;
  /// <summary>
  /// 礼包ID，
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PackageId {
    get { return packageId_; }
    set {
      packageId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_time_limit_package_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_time_limit_package_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemainTime != other.RemainTime) return false;
    if (PackageId != other.PackageId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemainTime != 0) hash ^= RemainTime.GetHashCode();
    if (PackageId != 0) hash ^= PackageId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemainTime != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RemainTime);
    }
    if (PackageId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PackageId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemainTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainTime);
    }
    if (PackageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_time_limit_package_init other) {
    if (other == null) {
      return;
    }
    if (other.RemainTime != 0) {
      RemainTime = other.RemainTime;
    }
    if (other.PackageId != 0) {
      PackageId = other.PackageId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RemainTime = input.ReadInt32();
          break;
        }
        case 16: {
          PackageId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///LOGIC_MSG_L2C_TIME_LIMIT_PACKAGE_UPD		= 55702;
/// </summary>
public sealed partial class l2c_time_limit_package_upd : pb::IMessage<l2c_time_limit_package_upd> {
  private static readonly pb::MessageParser<l2c_time_limit_package_upd> _parser = new pb::MessageParser<l2c_time_limit_package_upd>(() => new l2c_time_limit_package_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_time_limit_package_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[226]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_time_limit_package_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_time_limit_package_upd(l2c_time_limit_package_upd other) : this() {
    type_ = other.type_;
    remainTime_ = other.remainTime_;
    packageId_ = other.packageId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_time_limit_package_upd Clone() {
    return new l2c_time_limit_package_upd(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::TimeLimitPackageUpdType type_ = 0;
  /// <summary>
  /// 更新类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TimeLimitPackageUpdType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "remain_time" field.</summary>
  public const int RemainTimeFieldNumber = 2;
  private int remainTime_;
  /// <summary>
  /// 剩余时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RemainTime {
    get { return remainTime_; }
    set {
      remainTime_ = value;
    }
  }

  /// <summary>Field number for the "package_id" field.</summary>
  public const int PackageIdFieldNumber = 3;
  private int packageId_;
  /// <summary>
  ///礼包ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PackageId {
    get { return packageId_; }
    set {
      packageId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_time_limit_package_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_time_limit_package_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (RemainTime != other.RemainTime) return false;
    if (PackageId != other.PackageId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (RemainTime != 0) hash ^= RemainTime.GetHashCode();
    if (PackageId != 0) hash ^= PackageId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (RemainTime != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RemainTime);
    }
    if (PackageId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(PackageId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (RemainTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainTime);
    }
    if (PackageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_time_limit_package_upd other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.RemainTime != 0) {
      RemainTime = other.RemainTime;
    }
    if (other.PackageId != 0) {
      PackageId = other.PackageId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::TimeLimitPackageUpdType) input.ReadEnum();
          break;
        }
        case 16: {
          RemainTime = input.ReadInt32();
          break;
        }
        case 24: {
          PackageId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_chapter_package_init : pb::IMessage<c2l_chapter_package_init> {
  private static readonly pb::MessageParser<c2l_chapter_package_init> _parser = new pb::MessageParser<c2l_chapter_package_init>(() => new c2l_chapter_package_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_chapter_package_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[227]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_chapter_package_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_chapter_package_init(c2l_chapter_package_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_chapter_package_init Clone() {
    return new c2l_chapter_package_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_chapter_package_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_chapter_package_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_chapter_package_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_chapter_package_init : pb::IMessage<l2c_chapter_package_init> {
  private static readonly pb::MessageParser<l2c_chapter_package_init> _parser = new pb::MessageParser<l2c_chapter_package_init>(() => new l2c_chapter_package_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_chapter_package_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[228]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_package_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_package_init(l2c_chapter_package_init other) : this() {
    infos_ = other.infos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_chapter_package_init Clone() {
    return new l2c_chapter_package_init(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_time_limit_package_init> _repeated_infos_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_time_limit_package_init.Parser);
  private readonly pbc::RepeatedField<global::l2c_time_limit_package_init> infos_ = new pbc::RepeatedField<global::l2c_time_limit_package_init>();
  /// <summary>
  /// 章节礼包
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_time_limit_package_init> Infos {
    get { return infos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_chapter_package_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_chapter_package_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!infos_.Equals(other.infos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= infos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    infos_.WriteTo(output, _repeated_infos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += infos_.CalculateSize(_repeated_infos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_chapter_package_init other) {
    if (other == null) {
      return;
    }
    infos_.Add(other.infos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          infos_.AddEntriesFrom(input, _repeated_infos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_value_package_buy : pb::IMessage<c2l_value_package_buy> {
  private static readonly pb::MessageParser<c2l_value_package_buy> _parser = new pb::MessageParser<c2l_value_package_buy>(() => new c2l_value_package_buy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_value_package_buy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[229]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_value_package_buy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_value_package_buy(c2l_value_package_buy other) : this() {
    id_ = other.id_;
    packageType_ = other.packageType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_value_package_buy Clone() {
    return new c2l_value_package_buy(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 购买的ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "package_type" field.</summary>
  public const int PackageTypeFieldNumber = 2;
  private int packageType_;
  /// <summary>
  /// 礼包类型（1限时礼包  2章节礼包）			
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PackageType {
    get { return packageType_; }
    set {
      packageType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_value_package_buy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_value_package_buy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (PackageType != other.PackageType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (PackageType != 0) hash ^= PackageType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (PackageType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PackageType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (PackageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_value_package_buy other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.PackageType != 0) {
      PackageType = other.PackageType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          PackageType = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_value_package_buy : pb::IMessage<l2c_value_package_buy> {
  private static readonly pb::MessageParser<l2c_value_package_buy> _parser = new pb::MessageParser<l2c_value_package_buy>(() => new l2c_value_package_buy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_value_package_buy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[230]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_value_package_buy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_value_package_buy(l2c_value_package_buy other) : this() {
    result_ = other.result_;
    reweards_ = other.reweards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_value_package_buy Clone() {
    return new l2c_value_package_buy(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 购买结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "reweards" field.</summary>
  public const int ReweardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_reweards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> reweards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 礼包内容
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Reweards {
    get { return reweards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_value_package_buy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_value_package_buy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if(!reweards_.Equals(other.reweards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    hash ^= reweards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    reweards_.WriteTo(output, _repeated_reweards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    size += reweards_.CalculateSize(_repeated_reweards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_value_package_buy other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    reweards_.Add(other.reweards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
        case 18: {
          reweards_.AddEntriesFrom(input, _repeated_reweards_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 绑定手机 --------------------------------------------------------------------------------------------------
/// LOGIC_MSG_C2L_BIND_PHONE_SEND_MSG
/// </summary>
public sealed partial class c2l_bind_phone_send_msg : pb::IMessage<c2l_bind_phone_send_msg> {
  private static readonly pb::MessageParser<c2l_bind_phone_send_msg> _parser = new pb::MessageParser<c2l_bind_phone_send_msg>(() => new c2l_bind_phone_send_msg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_bind_phone_send_msg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[231]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_bind_phone_send_msg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_bind_phone_send_msg(c2l_bind_phone_send_msg other) : this() {
    phoneNum_ = other.phoneNum_;
    uid_ = other.uid_;
    pappId_ = other.pappId_;
    appId_ = other.appId_;
    cchId_ = other.cchId_;
    source_ = other.source_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_bind_phone_send_msg Clone() {
    return new c2l_bind_phone_send_msg(this);
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 1;
  private string phoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int UidFieldNumber = 2;
  private string uid_ = "";
  /// <summary>
  /// 星辉sdk渠道uid
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uid {
    get { return uid_; }
    set {
      uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "papp_id" field.</summary>
  public const int PappIdFieldNumber = 3;
  private string pappId_ = "";
  /// <summary>
  /// 星辉sdk的主游戏papp_id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PappId {
    get { return pappId_; }
    set {
      pappId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 4;
  private string appId_ = "";
  /// <summary>
  /// 星辉sdk的子游戏app_id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AppId {
    get { return appId_; }
    set {
      appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cch_id" field.</summary>
  public const int CchIdFieldNumber = 5;
  private string cchId_ = "";
  /// <summary>
  /// 星辉sdk的渠道cch_id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CchId {
    get { return cchId_; }
    set {
      cchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "source" field.</summary>
  public const int SourceFieldNumber = 6;
  private string source_ = "";
  /// <summary>
  /// 来源，比如活动的名称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Source {
    get { return source_; }
    set {
      source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_bind_phone_send_msg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_bind_phone_send_msg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PhoneNum != other.PhoneNum) return false;
    if (Uid != other.Uid) return false;
    if (PappId != other.PappId) return false;
    if (AppId != other.AppId) return false;
    if (CchId != other.CchId) return false;
    if (Source != other.Source) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (Uid.Length != 0) hash ^= Uid.GetHashCode();
    if (PappId.Length != 0) hash ^= PappId.GetHashCode();
    if (AppId.Length != 0) hash ^= AppId.GetHashCode();
    if (CchId.Length != 0) hash ^= CchId.GetHashCode();
    if (Source.Length != 0) hash ^= Source.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PhoneNum);
    }
    if (Uid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Uid);
    }
    if (PappId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(PappId);
    }
    if (AppId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(AppId);
    }
    if (CchId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(CchId);
    }
    if (Source.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Source);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (Uid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
    }
    if (PappId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PappId);
    }
    if (AppId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
    }
    if (CchId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CchId);
    }
    if (Source.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_bind_phone_send_msg other) {
    if (other == null) {
      return;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.Uid.Length != 0) {
      Uid = other.Uid;
    }
    if (other.PappId.Length != 0) {
      PappId = other.PappId;
    }
    if (other.AppId.Length != 0) {
      AppId = other.AppId;
    }
    if (other.CchId.Length != 0) {
      CchId = other.CchId;
    }
    if (other.Source.Length != 0) {
      Source = other.Source;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PhoneNum = input.ReadString();
          break;
        }
        case 18: {
          Uid = input.ReadString();
          break;
        }
        case 26: {
          PappId = input.ReadString();
          break;
        }
        case 34: {
          AppId = input.ReadString();
          break;
        }
        case 42: {
          CchId = input.ReadString();
          break;
        }
        case 50: {
          Source = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_bind_phone_send_msg : pb::IMessage<l2c_bind_phone_send_msg> {
  private static readonly pb::MessageParser<l2c_bind_phone_send_msg> _parser = new pb::MessageParser<l2c_bind_phone_send_msg>(() => new l2c_bind_phone_send_msg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_bind_phone_send_msg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[232]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_bind_phone_send_msg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_bind_phone_send_msg(l2c_bind_phone_send_msg other) : this() {
    successFlag_ = other.successFlag_;
    errCode_ = other.errCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_bind_phone_send_msg Clone() {
    return new l2c_bind_phone_send_msg(this);
  }

  /// <summary>Field number for the "success_flag" field.</summary>
  public const int SuccessFlagFieldNumber = 1;
  private bool successFlag_;
  /// <summary>
  /// 成功 -1 失败 -0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool SuccessFlag {
    get { return successFlag_; }
    set {
      successFlag_ = value;
    }
  }

  /// <summary>Field number for the "err_code" field.</summary>
  public const int ErrCodeFieldNumber = 2;
  private int errCode_;
  /// <summary>
  /// 失败返回码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ErrCode {
    get { return errCode_; }
    set {
      errCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_bind_phone_send_msg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_bind_phone_send_msg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SuccessFlag != other.SuccessFlag) return false;
    if (ErrCode != other.ErrCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SuccessFlag != false) hash ^= SuccessFlag.GetHashCode();
    if (ErrCode != 0) hash ^= ErrCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SuccessFlag != false) {
      output.WriteRawTag(8);
      output.WriteBool(SuccessFlag);
    }
    if (ErrCode != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ErrCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SuccessFlag != false) {
      size += 1 + 1;
    }
    if (ErrCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_bind_phone_send_msg other) {
    if (other == null) {
      return;
    }
    if (other.SuccessFlag != false) {
      SuccessFlag = other.SuccessFlag;
    }
    if (other.ErrCode != 0) {
      ErrCode = other.ErrCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SuccessFlag = input.ReadBool();
          break;
        }
        case 16: {
          ErrCode = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_BIND_PHONE_VERIFY
/// </summary>
public sealed partial class c2l_bind_phone_verify : pb::IMessage<c2l_bind_phone_verify> {
  private static readonly pb::MessageParser<c2l_bind_phone_verify> _parser = new pb::MessageParser<c2l_bind_phone_verify>(() => new c2l_bind_phone_verify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_bind_phone_verify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[233]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_bind_phone_verify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_bind_phone_verify(c2l_bind_phone_verify other) : this() {
    phoneNum_ = other.phoneNum_;
    uid_ = other.uid_;
    pappId_ = other.pappId_;
    appId_ = other.appId_;
    cchId_ = other.cchId_;
    source_ = other.source_;
    code_ = other.code_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_bind_phone_verify Clone() {
    return new c2l_bind_phone_verify(this);
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 1;
  private string phoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int UidFieldNumber = 2;
  private string uid_ = "";
  /// <summary>
  /// 星辉sdk渠道uid
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uid {
    get { return uid_; }
    set {
      uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "papp_id" field.</summary>
  public const int PappIdFieldNumber = 3;
  private string pappId_ = "";
  /// <summary>
  /// 星辉sdk的主游戏papp_id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PappId {
    get { return pappId_; }
    set {
      pappId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 4;
  private string appId_ = "";
  /// <summary>
  /// 星辉sdk的子游戏app_id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AppId {
    get { return appId_; }
    set {
      appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cch_id" field.</summary>
  public const int CchIdFieldNumber = 5;
  private string cchId_ = "";
  /// <summary>
  /// 星辉sdk的渠道cch_id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CchId {
    get { return cchId_; }
    set {
      cchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "source" field.</summary>
  public const int SourceFieldNumber = 6;
  private string source_ = "";
  /// <summary>
  /// 来源，比如活动的名称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Source {
    get { return source_; }
    set {
      source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 7;
  private string code_ = "";
  /// <summary>
  /// 验证码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Code {
    get { return code_; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_bind_phone_verify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_bind_phone_verify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PhoneNum != other.PhoneNum) return false;
    if (Uid != other.Uid) return false;
    if (PappId != other.PappId) return false;
    if (AppId != other.AppId) return false;
    if (CchId != other.CchId) return false;
    if (Source != other.Source) return false;
    if (Code != other.Code) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (Uid.Length != 0) hash ^= Uid.GetHashCode();
    if (PappId.Length != 0) hash ^= PappId.GetHashCode();
    if (AppId.Length != 0) hash ^= AppId.GetHashCode();
    if (CchId.Length != 0) hash ^= CchId.GetHashCode();
    if (Source.Length != 0) hash ^= Source.GetHashCode();
    if (Code.Length != 0) hash ^= Code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PhoneNum);
    }
    if (Uid.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Uid);
    }
    if (PappId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(PappId);
    }
    if (AppId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(AppId);
    }
    if (CchId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(CchId);
    }
    if (Source.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Source);
    }
    if (Code.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (Uid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
    }
    if (PappId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PappId);
    }
    if (AppId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
    }
    if (CchId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CchId);
    }
    if (Source.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
    }
    if (Code.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_bind_phone_verify other) {
    if (other == null) {
      return;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.Uid.Length != 0) {
      Uid = other.Uid;
    }
    if (other.PappId.Length != 0) {
      PappId = other.PappId;
    }
    if (other.AppId.Length != 0) {
      AppId = other.AppId;
    }
    if (other.CchId.Length != 0) {
      CchId = other.CchId;
    }
    if (other.Source.Length != 0) {
      Source = other.Source;
    }
    if (other.Code.Length != 0) {
      Code = other.Code;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PhoneNum = input.ReadString();
          break;
        }
        case 18: {
          Uid = input.ReadString();
          break;
        }
        case 26: {
          PappId = input.ReadString();
          break;
        }
        case 34: {
          AppId = input.ReadString();
          break;
        }
        case 42: {
          CchId = input.ReadString();
          break;
        }
        case 50: {
          Source = input.ReadString();
          break;
        }
        case 58: {
          Code = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_bind_phone_verify : pb::IMessage<l2c_bind_phone_verify> {
  private static readonly pb::MessageParser<l2c_bind_phone_verify> _parser = new pb::MessageParser<l2c_bind_phone_verify>(() => new l2c_bind_phone_verify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_bind_phone_verify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[234]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_bind_phone_verify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_bind_phone_verify(l2c_bind_phone_verify other) : this() {
    successFlag_ = other.successFlag_;
    errCode_ = other.errCode_;
    awards_ = other.awards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_bind_phone_verify Clone() {
    return new l2c_bind_phone_verify(this);
  }

  /// <summary>Field number for the "success_flag" field.</summary>
  public const int SuccessFlagFieldNumber = 1;
  private bool successFlag_;
  /// <summary>
  /// 成功 -1 失败 -0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool SuccessFlag {
    get { return successFlag_; }
    set {
      successFlag_ = value;
    }
  }

  /// <summary>Field number for the "err_code" field.</summary>
  public const int ErrCodeFieldNumber = 2;
  private int errCode_;
  /// <summary>
  /// 失败返回码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ErrCode {
    get { return errCode_; }
    set {
      errCode_ = value;
    }
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(26, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_bind_phone_verify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_bind_phone_verify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SuccessFlag != other.SuccessFlag) return false;
    if (ErrCode != other.ErrCode) return false;
    if(!awards_.Equals(other.awards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SuccessFlag != false) hash ^= SuccessFlag.GetHashCode();
    if (ErrCode != 0) hash ^= ErrCode.GetHashCode();
    hash ^= awards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SuccessFlag != false) {
      output.WriteRawTag(8);
      output.WriteBool(SuccessFlag);
    }
    if (ErrCode != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ErrCode);
    }
    awards_.WriteTo(output, _repeated_awards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SuccessFlag != false) {
      size += 1 + 1;
    }
    if (ErrCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrCode);
    }
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_bind_phone_verify other) {
    if (other == null) {
      return;
    }
    if (other.SuccessFlag != false) {
      SuccessFlag = other.SuccessFlag;
    }
    if (other.ErrCode != 0) {
      ErrCode = other.ErrCode;
    }
    awards_.Add(other.awards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SuccessFlag = input.ReadBool();
          break;
        }
        case 16: {
          ErrCode = input.ReadInt32();
          break;
        }
        case 26: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_voice_review_init : pb::IMessage<c2l_voice_review_init> {
  private static readonly pb::MessageParser<c2l_voice_review_init> _parser = new pb::MessageParser<c2l_voice_review_init>(() => new c2l_voice_review_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_voice_review_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[235]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_voice_review_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_voice_review_init(c2l_voice_review_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_voice_review_init Clone() {
    return new c2l_voice_review_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_voice_review_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_voice_review_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_voice_review_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_voice_review_init : pb::IMessage<l2c_voice_review_init> {
  private static readonly pb::MessageParser<l2c_voice_review_init> _parser = new pb::MessageParser<l2c_voice_review_init>(() => new l2c_voice_review_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_voice_review_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[236]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_voice_review_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_voice_review_init(l2c_voice_review_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    values_ = other.values_.Clone();
    readValues_ = other.readValues_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_voice_review_init Clone() {
    return new l2c_voice_review_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 当前页号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "values" field.</summary>
  public const int ValuesFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_values_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 节点ID(每页最多100条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Values {
    get { return values_; }
  }

  /// <summary>Field number for the "read_values" field.</summary>
  public const int ReadValuesFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_readValues_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> readValues_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 已读节点ID(每页最多100条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ReadValues {
    get { return readValues_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_voice_review_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_voice_review_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!values_.Equals(other.values_)) return false;
    if(!readValues_.Equals(other.readValues_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= values_.GetHashCode();
    hash ^= readValues_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    values_.WriteTo(output, _repeated_values_codec);
    readValues_.WriteTo(output, _repeated_readValues_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += values_.CalculateSize(_repeated_values_codec);
    size += readValues_.CalculateSize(_repeated_readValues_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_voice_review_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    values_.Add(other.values_);
    readValues_.Add(other.readValues_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          values_.AddEntriesFrom(input, _repeated_values_codec);
          break;
        }
        case 34:
        case 32: {
          readValues_.AddEntriesFrom(input, _repeated_readValues_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_voice_review_upd : pb::IMessage<l2c_voice_review_upd> {
  private static readonly pb::MessageParser<l2c_voice_review_upd> _parser = new pb::MessageParser<l2c_voice_review_upd>(() => new l2c_voice_review_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_voice_review_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[237]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_voice_review_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_voice_review_upd(l2c_voice_review_upd other) : this() {
    newNode_ = other.newNode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_voice_review_upd Clone() {
    return new l2c_voice_review_upd(this);
  }

  /// <summary>Field number for the "new_node" field.</summary>
  public const int NewNodeFieldNumber = 1;
  private int newNode_;
  /// <summary>
  /// 新节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NewNode {
    get { return newNode_; }
    set {
      newNode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_voice_review_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_voice_review_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NewNode != other.NewNode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NewNode != 0) hash ^= NewNode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NewNode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(NewNode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NewNode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewNode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_voice_review_upd other) {
    if (other == null) {
      return;
    }
    if (other.NewNode != 0) {
      NewNode = other.NewNode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          NewNode = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_voice_review_read : pb::IMessage<c2l_voice_review_read> {
  private static readonly pb::MessageParser<c2l_voice_review_read> _parser = new pb::MessageParser<c2l_voice_review_read>(() => new c2l_voice_review_read());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_voice_review_read> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[238]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_voice_review_read() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_voice_review_read(c2l_voice_review_read other) : this() {
    readNode_ = other.readNode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_voice_review_read Clone() {
    return new c2l_voice_review_read(this);
  }

  /// <summary>Field number for the "read_node" field.</summary>
  public const int ReadNodeFieldNumber = 1;
  private int readNode_;
  /// <summary>
  /// 新节点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ReadNode {
    get { return readNode_; }
    set {
      readNode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_voice_review_read);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_voice_review_read other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReadNode != other.ReadNode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReadNode != 0) hash ^= ReadNode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReadNode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ReadNode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReadNode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReadNode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_voice_review_read other) {
    if (other == null) {
      return;
    }
    if (other.ReadNode != 0) {
      ReadNode = other.ReadNode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ReadNode = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_SPEECH_INIT
/// </summary>
public sealed partial class c2l_speech_init : pb::IMessage<c2l_speech_init> {
  private static readonly pb::MessageParser<c2l_speech_init> _parser = new pb::MessageParser<c2l_speech_init>(() => new c2l_speech_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_speech_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[239]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_speech_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_speech_init(c2l_speech_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_speech_init Clone() {
    return new c2l_speech_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_speech_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_speech_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_speech_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_speech_init : pb::IMessage<l2c_speech_init> {
  private static readonly pb::MessageParser<l2c_speech_init> _parser = new pb::MessageParser<l2c_speech_init>(() => new l2c_speech_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_speech_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[240]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_speech_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_speech_init(l2c_speech_init other) : this() {
    speechCount_ = other.speechCount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_speech_init Clone() {
    return new l2c_speech_init(this);
  }

  /// <summary>Field number for the "speech_count" field.</summary>
  public const int SpeechCountFieldNumber = 1;
  private int speechCount_;
  /// <summary>
  /// 历史参与演讲小游戏次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SpeechCount {
    get { return speechCount_; }
    set {
      speechCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_speech_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_speech_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SpeechCount != other.SpeechCount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SpeechCount != 0) hash ^= SpeechCount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SpeechCount != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SpeechCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SpeechCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeechCount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_speech_init other) {
    if (other == null) {
      return;
    }
    if (other.SpeechCount != 0) {
      SpeechCount = other.SpeechCount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SpeechCount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_SPEECH_RESULT	
/// </summary>
public sealed partial class c2l_speech_result : pb::IMessage<c2l_speech_result> {
  private static readonly pb::MessageParser<c2l_speech_result> _parser = new pb::MessageParser<c2l_speech_result>(() => new c2l_speech_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_speech_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[241]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_speech_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_speech_result(c2l_speech_result other) : this() {
    speechId_ = other.speechId_;
    clothIds_ = other.clothIds_.Clone();
    options_ = other.options_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_speech_result Clone() {
    return new c2l_speech_result(this);
  }

  /// <summary>Field number for the "speech_id" field.</summary>
  public const int SpeechIdFieldNumber = 1;
  private int speechId_;
  /// <summary>
  /// 演讲小游戏ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SpeechId {
    get { return speechId_; }
    set {
      speechId_ = value;
    }
  }

  /// <summary>Field number for the "cloth_ids" field.</summary>
  public const int ClothIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_clothIds_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> clothIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 关联换装小游戏所穿的衣服
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ClothIds {
    get { return clothIds_; }
  }

  /// <summary>Field number for the "options" field.</summary>
  public const int OptionsFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_options_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> options_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 选项(如果是QTE的话, 则为得分)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Options {
    get { return options_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_speech_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_speech_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SpeechId != other.SpeechId) return false;
    if(!clothIds_.Equals(other.clothIds_)) return false;
    if(!options_.Equals(other.options_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SpeechId != 0) hash ^= SpeechId.GetHashCode();
    hash ^= clothIds_.GetHashCode();
    hash ^= options_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SpeechId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SpeechId);
    }
    clothIds_.WriteTo(output, _repeated_clothIds_codec);
    options_.WriteTo(output, _repeated_options_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SpeechId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeechId);
    }
    size += clothIds_.CalculateSize(_repeated_clothIds_codec);
    size += options_.CalculateSize(_repeated_options_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_speech_result other) {
    if (other == null) {
      return;
    }
    if (other.SpeechId != 0) {
      SpeechId = other.SpeechId;
    }
    clothIds_.Add(other.clothIds_);
    options_.Add(other.options_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SpeechId = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          clothIds_.AddEntriesFrom(input, _repeated_clothIds_codec);
          break;
        }
        case 26:
        case 24: {
          options_.AddEntriesFrom(input, _repeated_options_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_speech_result : pb::IMessage<l2c_speech_result> {
  private static readonly pb::MessageParser<l2c_speech_result> _parser = new pb::MessageParser<l2c_speech_result>(() => new l2c_speech_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_speech_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[242]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_speech_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_speech_result(l2c_speech_result other) : this() {
    score_ = other.score_;
    awards_ = other.awards_.Clone();
    allBestTag_ = other.allBestTag_;
    haveWorstTag_ = other.haveWorstTag_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_speech_result Clone() {
    return new l2c_speech_result(this);
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 1;
  private int score_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  /// <summary>Field number for the "all_best_tag" field.</summary>
  public const int AllBestTagFieldNumber = 3;
  private bool allBestTag_;
  /// <summary>
  /// 有全部正向标签 - true
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool AllBestTag {
    get { return allBestTag_; }
    set {
      allBestTag_ = value;
    }
  }

  /// <summary>Field number for the "have_worst_tag" field.</summary>
  public const int HaveWorstTagFieldNumber = 4;
  private bool haveWorstTag_;
  /// <summary>
  /// 有一个负向标签 - true
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HaveWorstTag {
    get { return haveWorstTag_; }
    set {
      haveWorstTag_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_speech_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_speech_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Score != other.Score) return false;
    if(!awards_.Equals(other.awards_)) return false;
    if (AllBestTag != other.AllBestTag) return false;
    if (HaveWorstTag != other.HaveWorstTag) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Score != 0) hash ^= Score.GetHashCode();
    hash ^= awards_.GetHashCode();
    if (AllBestTag != false) hash ^= AllBestTag.GetHashCode();
    if (HaveWorstTag != false) hash ^= HaveWorstTag.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Score != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Score);
    }
    awards_.WriteTo(output, _repeated_awards_codec);
    if (AllBestTag != false) {
      output.WriteRawTag(24);
      output.WriteBool(AllBestTag);
    }
    if (HaveWorstTag != false) {
      output.WriteRawTag(32);
      output.WriteBool(HaveWorstTag);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Score != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
    }
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (AllBestTag != false) {
      size += 1 + 1;
    }
    if (HaveWorstTag != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_speech_result other) {
    if (other == null) {
      return;
    }
    if (other.Score != 0) {
      Score = other.Score;
    }
    awards_.Add(other.awards_);
    if (other.AllBestTag != false) {
      AllBestTag = other.AllBestTag;
    }
    if (other.HaveWorstTag != false) {
      HaveWorstTag = other.HaveWorstTag;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Score = input.ReadInt32();
          break;
        }
        case 18: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
        case 24: {
          AllBestTag = input.ReadBool();
          break;
        }
        case 32: {
          HaveWorstTag = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 抓娃娃小游戏 -----------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class Doll : pb::IMessage<Doll> {
  private static readonly pb::MessageParser<Doll> _parser = new pb::MessageParser<Doll>(() => new Doll());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Doll> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[243]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Doll() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Doll(Doll other) : this() {
    type_ = other.type_;
    id_ = other.id_;
    count_ = other.count_;
    index_ = other.index_;
    dollId_ = other.dollId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Doll Clone() {
    return new Doll(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::GameElementType type_ = 0;
  /// <summary>
  /// 资源类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameElementType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  /// <summary>
  /// 资源的物品id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 3;
  private int count_;
  /// <summary>
  /// 数目
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 4;
  private int index_;
  /// <summary>
  /// 服务器用, 球的编号 对应表中的id 可能重复
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "doll_id" field.</summary>
  public const int DollIdFieldNumber = 5;
  private int dollId_;
  /// <summary>
  /// 客户端用 球的编号 唯一数字
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DollId {
    get { return dollId_; }
    set {
      dollId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Doll);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Doll other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Id != other.Id) return false;
    if (Count != other.Count) return false;
    if (Index != other.Index) return false;
    if (DollId != other.DollId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Count != 0) hash ^= Count.GetHashCode();
    if (Index != 0) hash ^= Index.GetHashCode();
    if (DollId != 0) hash ^= DollId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (Count != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Count);
    }
    if (Index != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Index);
    }
    if (DollId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(DollId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
    }
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (DollId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DollId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Doll other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.DollId != 0) {
      DollId = other.DollId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::GameElementType) input.ReadEnum();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          Count = input.ReadInt32();
          break;
        }
        case 32: {
          Index = input.ReadInt32();
          break;
        }
        case 40: {
          DollId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_GRAB_DOLL_START
/// </summary>
public sealed partial class c2l_grab_doll_start : pb::IMessage<c2l_grab_doll_start> {
  private static readonly pb::MessageParser<c2l_grab_doll_start> _parser = new pb::MessageParser<c2l_grab_doll_start>(() => new c2l_grab_doll_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_grab_doll_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[244]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_grab_doll_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_grab_doll_start(c2l_grab_doll_start other) : this() {
    machineId_ = other.machineId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_grab_doll_start Clone() {
    return new c2l_grab_doll_start(this);
  }

  /// <summary>Field number for the "machine_id" field.</summary>
  public const int MachineIdFieldNumber = 1;
  private int machineId_;
  /// <summary>
  /// 娃娃机id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MachineId {
    get { return machineId_; }
    set {
      machineId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_grab_doll_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_grab_doll_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MachineId != other.MachineId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MachineId != 0) hash ^= MachineId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MachineId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MachineId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MachineId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MachineId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_grab_doll_start other) {
    if (other == null) {
      return;
    }
    if (other.MachineId != 0) {
      MachineId = other.MachineId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MachineId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_GRAB_DOLL_START
/// </summary>
public sealed partial class l2c_grab_doll_start : pb::IMessage<l2c_grab_doll_start> {
  private static readonly pb::MessageParser<l2c_grab_doll_start> _parser = new pb::MessageParser<l2c_grab_doll_start>(() => new l2c_grab_doll_start());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_grab_doll_start> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[245]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_grab_doll_start() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_grab_doll_start(l2c_grab_doll_start other) : this() {
    remainTime_ = other.remainTime_;
    successDollId_ = other.successDollId_.Clone();
    showDollId_ = other.showDollId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_grab_doll_start Clone() {
    return new l2c_grab_doll_start(this);
  }

  /// <summary>Field number for the "remain_time" field.</summary>
  public const int RemainTimeFieldNumber = 1;
  private int remainTime_;
  /// <summary>
  /// 剩余时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RemainTime {
    get { return remainTime_; }
    set {
      remainTime_ = value;
    }
  }

  /// <summary>Field number for the "success_doll_id" field.</summary>
  public const int SuccessDollIdFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Doll> _repeated_successDollId_codec
      = pb::FieldCodec.ForMessage(18, global::Doll.Parser);
  private readonly pbc::RepeatedField<global::Doll> successDollId_ = new pbc::RepeatedField<global::Doll>();
  /// <summary>
  /// 能成功抓取的娃娃id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Doll> SuccessDollId {
    get { return successDollId_; }
  }

  /// <summary>Field number for the "show_doll_id" field.</summary>
  public const int ShowDollIdFieldNumber = 3;
  private static readonly pb::FieldCodec<global::Doll> _repeated_showDollId_codec
      = pb::FieldCodec.ForMessage(26, global::Doll.Parser);
  private readonly pbc::RepeatedField<global::Doll> showDollId_ = new pbc::RepeatedField<global::Doll>();
  /// <summary>
  /// 演示的娃娃id（不会被抓取到）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Doll> ShowDollId {
    get { return showDollId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_grab_doll_start);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_grab_doll_start other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemainTime != other.RemainTime) return false;
    if(!successDollId_.Equals(other.successDollId_)) return false;
    if(!showDollId_.Equals(other.showDollId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemainTime != 0) hash ^= RemainTime.GetHashCode();
    hash ^= successDollId_.GetHashCode();
    hash ^= showDollId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemainTime != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RemainTime);
    }
    successDollId_.WriteTo(output, _repeated_successDollId_codec);
    showDollId_.WriteTo(output, _repeated_showDollId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemainTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainTime);
    }
    size += successDollId_.CalculateSize(_repeated_successDollId_codec);
    size += showDollId_.CalculateSize(_repeated_showDollId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_grab_doll_start other) {
    if (other == null) {
      return;
    }
    if (other.RemainTime != 0) {
      RemainTime = other.RemainTime;
    }
    successDollId_.Add(other.successDollId_);
    showDollId_.Add(other.showDollId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RemainTime = input.ReadInt32();
          break;
        }
        case 18: {
          successDollId_.AddEntriesFrom(input, _repeated_successDollId_codec);
          break;
        }
        case 26: {
          showDollId_.AddEntriesFrom(input, _repeated_showDollId_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_GRAB_DOLL_RESULT
/// </summary>
public sealed partial class c2l_grab_doll_result : pb::IMessage<c2l_grab_doll_result> {
  private static readonly pb::MessageParser<c2l_grab_doll_result> _parser = new pb::MessageParser<c2l_grab_doll_result>(() => new c2l_grab_doll_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_grab_doll_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[246]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_grab_doll_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_grab_doll_result(c2l_grab_doll_result other) : this() {
    grabbedDollId_ = other.grabbedDollId_.Clone();
    machineId_ = other.machineId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_grab_doll_result Clone() {
    return new c2l_grab_doll_result(this);
  }

  /// <summary>Field number for the "grabbed_doll_id" field.</summary>
  public const int GrabbedDollIdFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Doll> _repeated_grabbedDollId_codec
      = pb::FieldCodec.ForMessage(10, global::Doll.Parser);
  private readonly pbc::RepeatedField<global::Doll> grabbedDollId_ = new pbc::RepeatedField<global::Doll>();
  /// <summary>
  /// 被成功抓取的娃娃id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Doll> GrabbedDollId {
    get { return grabbedDollId_; }
  }

  /// <summary>Field number for the "machine_id" field.</summary>
  public const int MachineIdFieldNumber = 2;
  private int machineId_;
  /// <summary>
  /// 娃娃机id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MachineId {
    get { return machineId_; }
    set {
      machineId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_grab_doll_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_grab_doll_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!grabbedDollId_.Equals(other.grabbedDollId_)) return false;
    if (MachineId != other.MachineId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= grabbedDollId_.GetHashCode();
    if (MachineId != 0) hash ^= MachineId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    grabbedDollId_.WriteTo(output, _repeated_grabbedDollId_codec);
    if (MachineId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(MachineId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += grabbedDollId_.CalculateSize(_repeated_grabbedDollId_codec);
    if (MachineId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MachineId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_grab_doll_result other) {
    if (other == null) {
      return;
    }
    grabbedDollId_.Add(other.grabbedDollId_);
    if (other.MachineId != 0) {
      MachineId = other.MachineId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          grabbedDollId_.AddEntriesFrom(input, _repeated_grabbedDollId_codec);
          break;
        }
        case 16: {
          MachineId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_GRAB_DOLL_RESULT
/// </summary>
public sealed partial class l2c_grab_doll_result : pb::IMessage<l2c_grab_doll_result> {
  private static readonly pb::MessageParser<l2c_grab_doll_result> _parser = new pb::MessageParser<l2c_grab_doll_result>(() => new l2c_grab_doll_result());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_grab_doll_result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[247]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_grab_doll_result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_grab_doll_result(l2c_grab_doll_result other) : this() {
    awards_ = other.awards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_grab_doll_result Clone() {
    return new l2c_grab_doll_result(this);
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(10, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_grab_doll_result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_grab_doll_result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!awards_.Equals(other.awards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= awards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    awards_.WriteTo(output, _repeated_awards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_grab_doll_result other) {
    if (other == null) {
      return;
    }
    awards_.Add(other.awards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_BUY_GRAB_DOLL_TICKET 购买抓娃娃门票
/// </summary>
public sealed partial class c2l_buy_grab_doll_ticket : pb::IMessage<c2l_buy_grab_doll_ticket> {
  private static readonly pb::MessageParser<c2l_buy_grab_doll_ticket> _parser = new pb::MessageParser<c2l_buy_grab_doll_ticket>(() => new c2l_buy_grab_doll_ticket());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_buy_grab_doll_ticket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[248]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_buy_grab_doll_ticket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_buy_grab_doll_ticket(c2l_buy_grab_doll_ticket other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_buy_grab_doll_ticket Clone() {
    return new c2l_buy_grab_doll_ticket(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_buy_grab_doll_ticket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_buy_grab_doll_ticket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_buy_grab_doll_ticket other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_BUY_GRAB_DOLL_TICKET
/// </summary>
public sealed partial class l2c_buy_grab_doll_ticket : pb::IMessage<l2c_buy_grab_doll_ticket> {
  private static readonly pb::MessageParser<l2c_buy_grab_doll_ticket> _parser = new pb::MessageParser<l2c_buy_grab_doll_ticket>(() => new l2c_buy_grab_doll_ticket());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_buy_grab_doll_ticket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[249]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_buy_grab_doll_ticket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_buy_grab_doll_ticket(l2c_buy_grab_doll_ticket other) : this() {
    awards_ = other.awards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_buy_grab_doll_ticket Clone() {
    return new l2c_buy_grab_doll_ticket(this);
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(10, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_buy_grab_doll_ticket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_buy_grab_doll_ticket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!awards_.Equals(other.awards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= awards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    awards_.WriteTo(output, _repeated_awards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_buy_grab_doll_ticket other) {
    if (other == null) {
      return;
    }
    awards_.Add(other.awards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ProfileMsgData : pb::IMessage<ProfileMsgData> {
  private static readonly pb::MessageParser<ProfileMsgData> _parser = new pb::MessageParser<ProfileMsgData>(() => new ProfileMsgData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ProfileMsgData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[250]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProfileMsgData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProfileMsgData(ProfileMsgData other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProfileMsgData Clone() {
    return new ProfileMsgData(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ProfileMsgData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ProfileMsgData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ProfileMsgData other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class BadgeMsgData : pb::IMessage<BadgeMsgData> {
  private static readonly pb::MessageParser<BadgeMsgData> _parser = new pb::MessageParser<BadgeMsgData>(() => new BadgeMsgData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BadgeMsgData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[251]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BadgeMsgData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BadgeMsgData(BadgeMsgData other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BadgeMsgData Clone() {
    return new BadgeMsgData(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BadgeMsgData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BadgeMsgData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BadgeMsgData other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class FriendRelationMsgData : pb::IMessage<FriendRelationMsgData> {
  private static readonly pb::MessageParser<FriendRelationMsgData> _parser = new pb::MessageParser<FriendRelationMsgData>(() => new FriendRelationMsgData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FriendRelationMsgData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[252]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendRelationMsgData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendRelationMsgData(FriendRelationMsgData other) : this() {
    addRelationTime_ = other.addRelationTime_;
    todayThumb_ = other.todayThumb_;
    recvActivePackage_ = other.recvActivePackage_;
    data_ = other.data_ != null ? other.data_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendRelationMsgData Clone() {
    return new FriendRelationMsgData(this);
  }

  /// <summary>Field number for the "add_relation_time" field.</summary>
  public const int AddRelationTimeFieldNumber = 1;
  private long addRelationTime_;
  /// <summary>
  /// 建立关系时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long AddRelationTime {
    get { return addRelationTime_; }
    set {
      addRelationTime_ = value;
    }
  }

  /// <summary>Field number for the "today_thumb" field.</summary>
  public const int TodayThumbFieldNumber = 2;
  private bool todayThumb_;
  /// <summary>
  /// 当天是否已点赞
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool TodayThumb {
    get { return todayThumb_; }
    set {
      todayThumb_ = value;
    }
  }

  /// <summary>Field number for the "recv_active_package" field.</summary>
  public const int RecvActivePackageFieldNumber = 3;
  private bool recvActivePackage_;
  /// <summary>
  /// true-当天已领取过该好友的活跃礼包 false-当前未领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool RecvActivePackage {
    get { return recvActivePackage_; }
    set {
      recvActivePackage_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 4;
  private global::FriendMsgData data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendMsgData Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FriendRelationMsgData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FriendRelationMsgData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AddRelationTime != other.AddRelationTime) return false;
    if (TodayThumb != other.TodayThumb) return false;
    if (RecvActivePackage != other.RecvActivePackage) return false;
    if (!object.Equals(Data, other.Data)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AddRelationTime != 0L) hash ^= AddRelationTime.GetHashCode();
    if (TodayThumb != false) hash ^= TodayThumb.GetHashCode();
    if (RecvActivePackage != false) hash ^= RecvActivePackage.GetHashCode();
    if (data_ != null) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AddRelationTime != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(AddRelationTime);
    }
    if (TodayThumb != false) {
      output.WriteRawTag(16);
      output.WriteBool(TodayThumb);
    }
    if (RecvActivePackage != false) {
      output.WriteRawTag(24);
      output.WriteBool(RecvActivePackage);
    }
    if (data_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AddRelationTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(AddRelationTime);
    }
    if (TodayThumb != false) {
      size += 1 + 1;
    }
    if (RecvActivePackage != false) {
      size += 1 + 1;
    }
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FriendRelationMsgData other) {
    if (other == null) {
      return;
    }
    if (other.AddRelationTime != 0L) {
      AddRelationTime = other.AddRelationTime;
    }
    if (other.TodayThumb != false) {
      TodayThumb = other.TodayThumb;
    }
    if (other.RecvActivePackage != false) {
      RecvActivePackage = other.RecvActivePackage;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        data_ = new global::FriendMsgData();
      }
      Data.MergeFrom(other.Data);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AddRelationTime = input.ReadInt64();
          break;
        }
        case 16: {
          TodayThumb = input.ReadBool();
          break;
        }
        case 24: {
          RecvActivePackage = input.ReadBool();
          break;
        }
        case 34: {
          if (data_ == null) {
            data_ = new global::FriendMsgData();
          }
          input.ReadMessage(data_);
          break;
        }
      }
    }
  }

}

public sealed partial class FriendMsgData : pb::IMessage<FriendMsgData> {
  private static readonly pb::MessageParser<FriendMsgData> _parser = new pb::MessageParser<FriendMsgData>(() => new FriendMsgData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FriendMsgData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[253]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendMsgData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendMsgData(FriendMsgData other) : this() {
    accountId_ = other.accountId_;
    name_ = other.name_;
    level_ = other.level_;
    signature_ = other.signature_;
    profile_ = other.profile_;
    ownBadge_ = other.ownBadge_.Clone();
    showBadge_ = other.showBadge_.Clone();
    achievementLevel_ = other.achievementLevel_;
    fishLevel_ = other.fishLevel_;
    lastOnlineTime_ = other.lastOnlineTime_;
    todayActive_ = other.todayActive_;
    background_ = other.background_;
    thumbNum_ = other.thumbNum_;
    profileCircle_ = other.profileCircle_;
    isOnline_ = other.isOnline_;
    titlePrefix_ = other.titlePrefix_;
    titleMidfix_ = other.titleMidfix_;
    titlePostfix_ = other.titlePostfix_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendMsgData Clone() {
    return new FriendMsgData(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  /// <summary>
  /// ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  /// <summary>
  /// 名字冲突
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 3;
  private int level_;
  /// <summary>
  /// 等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 5;
  private string signature_ = "";
  /// <summary>
  /// 个性签名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signature {
    get { return signature_; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "profile" field.</summary>
  public const int ProfileFieldNumber = 6;
  private int profile_;
  /// <summary>
  /// 头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Profile {
    get { return profile_; }
    set {
      profile_ = value;
    }
  }

  /// <summary>Field number for the "own_badge" field.</summary>
  public const int OwnBadgeFieldNumber = 7;
  private static readonly pb::FieldCodec<int> _repeated_ownBadge_codec
      = pb::FieldCodec.ForInt32(58);
  private readonly pbc::RepeatedField<int> ownBadge_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 拥有的徽章
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> OwnBadge {
    get { return ownBadge_; }
  }

  /// <summary>Field number for the "show_badge" field.</summary>
  public const int ShowBadgeFieldNumber = 8;
  private static readonly pb::FieldCodec<int> _repeated_showBadge_codec
      = pb::FieldCodec.ForInt32(66);
  private readonly pbc::RepeatedField<int> showBadge_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 展示的徽章
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ShowBadge {
    get { return showBadge_; }
  }

  /// <summary>Field number for the "achievement_level" field.</summary>
  public const int AchievementLevelFieldNumber = 9;
  private int achievementLevel_;
  /// <summary>
  /// 成就等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AchievementLevel {
    get { return achievementLevel_; }
    set {
      achievementLevel_ = value;
    }
  }

  /// <summary>Field number for the "fish_level" field.</summary>
  public const int FishLevelFieldNumber = 10;
  private int fishLevel_;
  /// <summary>
  /// 钓鱼等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishLevel {
    get { return fishLevel_; }
    set {
      fishLevel_ = value;
    }
  }

  /// <summary>Field number for the "last_online_time" field.</summary>
  public const int LastOnlineTimeFieldNumber = 11;
  private long lastOnlineTime_;
  /// <summary>
  /// 离线时 上次在线时间 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long LastOnlineTime {
    get { return lastOnlineTime_; }
    set {
      lastOnlineTime_ = value;
    }
  }

  /// <summary>Field number for the "today_active" field.</summary>
  public const int TodayActiveFieldNumber = 12;
  private bool todayActive_;
  /// <summary>
  /// 当天是否活跃 true-活跃 false-不活跃
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool TodayActive {
    get { return todayActive_; }
    set {
      todayActive_ = value;
    }
  }

  /// <summary>Field number for the "background" field.</summary>
  public const int BackgroundFieldNumber = 14;
  private string background_ = "";
  /// <summary>
  /// 背景图
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Background {
    get { return background_; }
    set {
      background_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "thumb_num" field.</summary>
  public const int ThumbNumFieldNumber = 15;
  private int thumbNum_;
  /// <summary>
  /// 好友点赞数目
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThumbNum {
    get { return thumbNum_; }
    set {
      thumbNum_ = value;
    }
  }

  /// <summary>Field number for the "profile_circle" field.</summary>
  public const int ProfileCircleFieldNumber = 17;
  private int profileCircle_;
  /// <summary>
  /// 头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ProfileCircle {
    get { return profileCircle_; }
    set {
      profileCircle_ = value;
    }
  }

  /// <summary>Field number for the "is_online" field.</summary>
  public const int IsOnlineFieldNumber = 19;
  private bool isOnline_;
  /// <summary>
  /// 当前是否在线
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsOnline {
    get { return isOnline_; }
    set {
      isOnline_ = value;
    }
  }

  /// <summary>Field number for the "title_prefix" field.</summary>
  public const int TitlePrefixFieldNumber = 20;
  private int titlePrefix_;
  /// <summary>
  /// 称号前缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TitlePrefix {
    get { return titlePrefix_; }
    set {
      titlePrefix_ = value;
    }
  }

  /// <summary>Field number for the "title_midfix" field.</summary>
  public const int TitleMidfixFieldNumber = 21;
  private int titleMidfix_;
  /// <summary>
  /// 称号中缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TitleMidfix {
    get { return titleMidfix_; }
    set {
      titleMidfix_ = value;
    }
  }

  /// <summary>Field number for the "title_postfix" field.</summary>
  public const int TitlePostfixFieldNumber = 22;
  private int titlePostfix_;
  /// <summary>
  /// 称号后缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TitlePostfix {
    get { return titlePostfix_; }
    set {
      titlePostfix_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FriendMsgData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FriendMsgData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (Name != other.Name) return false;
    if (Level != other.Level) return false;
    if (Signature != other.Signature) return false;
    if (Profile != other.Profile) return false;
    if(!ownBadge_.Equals(other.ownBadge_)) return false;
    if(!showBadge_.Equals(other.showBadge_)) return false;
    if (AchievementLevel != other.AchievementLevel) return false;
    if (FishLevel != other.FishLevel) return false;
    if (LastOnlineTime != other.LastOnlineTime) return false;
    if (TodayActive != other.TodayActive) return false;
    if (Background != other.Background) return false;
    if (ThumbNum != other.ThumbNum) return false;
    if (ProfileCircle != other.ProfileCircle) return false;
    if (IsOnline != other.IsOnline) return false;
    if (TitlePrefix != other.TitlePrefix) return false;
    if (TitleMidfix != other.TitleMidfix) return false;
    if (TitlePostfix != other.TitlePostfix) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Signature.Length != 0) hash ^= Signature.GetHashCode();
    if (Profile != 0) hash ^= Profile.GetHashCode();
    hash ^= ownBadge_.GetHashCode();
    hash ^= showBadge_.GetHashCode();
    if (AchievementLevel != 0) hash ^= AchievementLevel.GetHashCode();
    if (FishLevel != 0) hash ^= FishLevel.GetHashCode();
    if (LastOnlineTime != 0L) hash ^= LastOnlineTime.GetHashCode();
    if (TodayActive != false) hash ^= TodayActive.GetHashCode();
    if (Background.Length != 0) hash ^= Background.GetHashCode();
    if (ThumbNum != 0) hash ^= ThumbNum.GetHashCode();
    if (ProfileCircle != 0) hash ^= ProfileCircle.GetHashCode();
    if (IsOnline != false) hash ^= IsOnline.GetHashCode();
    if (TitlePrefix != 0) hash ^= TitlePrefix.GetHashCode();
    if (TitleMidfix != 0) hash ^= TitleMidfix.GetHashCode();
    if (TitlePostfix != 0) hash ^= TitlePostfix.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Level);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Signature);
    }
    if (Profile != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Profile);
    }
    ownBadge_.WriteTo(output, _repeated_ownBadge_codec);
    showBadge_.WriteTo(output, _repeated_showBadge_codec);
    if (AchievementLevel != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(AchievementLevel);
    }
    if (FishLevel != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(FishLevel);
    }
    if (LastOnlineTime != 0L) {
      output.WriteRawTag(88);
      output.WriteInt64(LastOnlineTime);
    }
    if (TodayActive != false) {
      output.WriteRawTag(96);
      output.WriteBool(TodayActive);
    }
    if (Background.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(Background);
    }
    if (ThumbNum != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(ThumbNum);
    }
    if (ProfileCircle != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(ProfileCircle);
    }
    if (IsOnline != false) {
      output.WriteRawTag(152, 1);
      output.WriteBool(IsOnline);
    }
    if (TitlePrefix != 0) {
      output.WriteRawTag(160, 1);
      output.WriteInt32(TitlePrefix);
    }
    if (TitleMidfix != 0) {
      output.WriteRawTag(168, 1);
      output.WriteInt32(TitleMidfix);
    }
    if (TitlePostfix != 0) {
      output.WriteRawTag(176, 1);
      output.WriteInt32(TitlePostfix);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Signature.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
    }
    if (Profile != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Profile);
    }
    size += ownBadge_.CalculateSize(_repeated_ownBadge_codec);
    size += showBadge_.CalculateSize(_repeated_showBadge_codec);
    if (AchievementLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AchievementLevel);
    }
    if (FishLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishLevel);
    }
    if (LastOnlineTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastOnlineTime);
    }
    if (TodayActive != false) {
      size += 1 + 1;
    }
    if (Background.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Background);
    }
    if (ThumbNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThumbNum);
    }
    if (ProfileCircle != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(ProfileCircle);
    }
    if (IsOnline != false) {
      size += 2 + 1;
    }
    if (TitlePrefix != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(TitlePrefix);
    }
    if (TitleMidfix != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(TitleMidfix);
    }
    if (TitlePostfix != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(TitlePostfix);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FriendMsgData other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Signature.Length != 0) {
      Signature = other.Signature;
    }
    if (other.Profile != 0) {
      Profile = other.Profile;
    }
    ownBadge_.Add(other.ownBadge_);
    showBadge_.Add(other.showBadge_);
    if (other.AchievementLevel != 0) {
      AchievementLevel = other.AchievementLevel;
    }
    if (other.FishLevel != 0) {
      FishLevel = other.FishLevel;
    }
    if (other.LastOnlineTime != 0L) {
      LastOnlineTime = other.LastOnlineTime;
    }
    if (other.TodayActive != false) {
      TodayActive = other.TodayActive;
    }
    if (other.Background.Length != 0) {
      Background = other.Background;
    }
    if (other.ThumbNum != 0) {
      ThumbNum = other.ThumbNum;
    }
    if (other.ProfileCircle != 0) {
      ProfileCircle = other.ProfileCircle;
    }
    if (other.IsOnline != false) {
      IsOnline = other.IsOnline;
    }
    if (other.TitlePrefix != 0) {
      TitlePrefix = other.TitlePrefix;
    }
    if (other.TitleMidfix != 0) {
      TitleMidfix = other.TitleMidfix;
    }
    if (other.TitlePostfix != 0) {
      TitlePostfix = other.TitlePostfix;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          Level = input.ReadInt32();
          break;
        }
        case 42: {
          Signature = input.ReadString();
          break;
        }
        case 48: {
          Profile = input.ReadInt32();
          break;
        }
        case 58:
        case 56: {
          ownBadge_.AddEntriesFrom(input, _repeated_ownBadge_codec);
          break;
        }
        case 66:
        case 64: {
          showBadge_.AddEntriesFrom(input, _repeated_showBadge_codec);
          break;
        }
        case 72: {
          AchievementLevel = input.ReadInt32();
          break;
        }
        case 80: {
          FishLevel = input.ReadInt32();
          break;
        }
        case 88: {
          LastOnlineTime = input.ReadInt64();
          break;
        }
        case 96: {
          TodayActive = input.ReadBool();
          break;
        }
        case 114: {
          Background = input.ReadString();
          break;
        }
        case 120: {
          ThumbNum = input.ReadInt32();
          break;
        }
        case 136: {
          ProfileCircle = input.ReadInt32();
          break;
        }
        case 152: {
          IsOnline = input.ReadBool();
          break;
        }
        case 160: {
          TitlePrefix = input.ReadInt32();
          break;
        }
        case 168: {
          TitleMidfix = input.ReadInt32();
          break;
        }
        case 176: {
          TitlePostfix = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_INIT				= 55200; // 拉取好友信息
/// </summary>
public sealed partial class c2l_friend_init : pb::IMessage<c2l_friend_init> {
  private static readonly pb::MessageParser<c2l_friend_init> _parser = new pb::MessageParser<c2l_friend_init>(() => new c2l_friend_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[254]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_init(c2l_friend_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_init Clone() {
    return new c2l_friend_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_INIT				= 55201; 
/// </summary>
public sealed partial class l2c_friend_init : pb::IMessage<l2c_friend_init> {
  private static readonly pb::MessageParser<l2c_friend_init> _parser = new pb::MessageParser<l2c_friend_init>(() => new l2c_friend_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[255]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_init(l2c_friend_init other) : this() {
    totalPage_ = other.totalPage_;
    pageNum_ = other.pageNum_;
    friendData_ = other.friendData_.Clone();
    applyData_ = other.applyData_.Clone();
    recvGiftNum_ = other.recvGiftNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_init Clone() {
    return new l2c_friend_init(this);
  }

  /// <summary>Field number for the "total_page" field.</summary>
  public const int TotalPageFieldNumber = 1;
  private int totalPage_;
  /// <summary>
  /// 总页数(每页最多10个数据)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "page_num" field.</summary>
  public const int PageNumFieldNumber = 2;
  private int pageNum_;
  /// <summary>
  /// 当前页数[0,n]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageNum {
    get { return pageNum_; }
    set {
      pageNum_ = value;
    }
  }

  /// <summary>Field number for the "friend_data" field.</summary>
  public const int FriendDataFieldNumber = 3;
  private static readonly pb::FieldCodec<global::FriendRelationMsgData> _repeated_friendData_codec
      = pb::FieldCodec.ForMessage(26, global::FriendRelationMsgData.Parser);
  private readonly pbc::RepeatedField<global::FriendRelationMsgData> friendData_ = new pbc::RepeatedField<global::FriendRelationMsgData>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::FriendRelationMsgData> FriendData {
    get { return friendData_; }
  }

  /// <summary>Field number for the "apply_data" field.</summary>
  public const int ApplyDataFieldNumber = 4;
  private static readonly pb::FieldCodec<global::FriendRelationMsgData> _repeated_applyData_codec
      = pb::FieldCodec.ForMessage(34, global::FriendRelationMsgData.Parser);
  private readonly pbc::RepeatedField<global::FriendRelationMsgData> applyData_ = new pbc::RepeatedField<global::FriendRelationMsgData>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::FriendRelationMsgData> ApplyData {
    get { return applyData_; }
  }

  /// <summary>Field number for the "recv_gift_num" field.</summary>
  public const int RecvGiftNumFieldNumber = 5;
  private int recvGiftNum_;
  /// <summary>
  /// 今日已领取活跃礼包数目
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RecvGiftNum {
    get { return recvGiftNum_; }
    set {
      recvGiftNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalPage != other.TotalPage) return false;
    if (PageNum != other.PageNum) return false;
    if(!friendData_.Equals(other.friendData_)) return false;
    if(!applyData_.Equals(other.applyData_)) return false;
    if (RecvGiftNum != other.RecvGiftNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageNum != 0) hash ^= PageNum.GetHashCode();
    hash ^= friendData_.GetHashCode();
    hash ^= applyData_.GetHashCode();
    if (RecvGiftNum != 0) hash ^= RecvGiftNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TotalPage != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalPage);
    }
    if (PageNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageNum);
    }
    friendData_.WriteTo(output, _repeated_friendData_codec);
    applyData_.WriteTo(output, _repeated_applyData_codec);
    if (RecvGiftNum != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(RecvGiftNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPage);
    }
    if (PageNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNum);
    }
    size += friendData_.CalculateSize(_repeated_friendData_codec);
    size += applyData_.CalculateSize(_repeated_applyData_codec);
    if (RecvGiftNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecvGiftNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_init other) {
    if (other == null) {
      return;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageNum != 0) {
      PageNum = other.PageNum;
    }
    friendData_.Add(other.friendData_);
    applyData_.Add(other.applyData_);
    if (other.RecvGiftNum != 0) {
      RecvGiftNum = other.RecvGiftNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalPage = input.ReadInt32();
          break;
        }
        case 16: {
          PageNum = input.ReadInt32();
          break;
        }
        case 26: {
          friendData_.AddEntriesFrom(input, _repeated_friendData_codec);
          break;
        }
        case 34: {
          applyData_.AddEntriesFrom(input, _repeated_applyData_codec);
          break;
        }
        case 40: {
          RecvGiftNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_FIND				= 55202; // 查找好友
/// </summary>
public sealed partial class c2l_friend_find : pb::IMessage<c2l_friend_find> {
  private static readonly pb::MessageParser<c2l_friend_find> _parser = new pb::MessageParser<c2l_friend_find>(() => new c2l_friend_find());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_find> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[256]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_find() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_find(c2l_friend_find other) : this() {
    accountId_ = other.accountId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_find Clone() {
    return new c2l_friend_find(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_find);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_find other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_find other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_FIND				= 55203;
/// </summary>
public sealed partial class l2c_friend_find : pb::IMessage<l2c_friend_find> {
  private static readonly pb::MessageParser<l2c_friend_find> _parser = new pb::MessageParser<l2c_friend_find>(() => new l2c_friend_find());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_find> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[257]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_find() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_find(l2c_friend_find other) : this() {
    friendData_ = other.friendData_ != null ? other.friendData_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_find Clone() {
    return new l2c_friend_find(this);
  }

  /// <summary>Field number for the "friend_data" field.</summary>
  public const int FriendDataFieldNumber = 1;
  private global::FriendMsgData friendData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendMsgData FriendData {
    get { return friendData_; }
    set {
      friendData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_find);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_find other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(FriendData, other.FriendData)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (friendData_ != null) hash ^= FriendData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (friendData_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FriendData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (friendData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_find other) {
    if (other == null) {
      return;
    }
    if (other.friendData_ != null) {
      if (friendData_ == null) {
        friendData_ = new global::FriendMsgData();
      }
      FriendData.MergeFrom(other.FriendData);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (friendData_ == null) {
            friendData_ = new global::FriendMsgData();
          }
          input.ReadMessage(friendData_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_ADD				= 55204; // 申请添加好友
/// </summary>
public sealed partial class c2l_friend_add : pb::IMessage<c2l_friend_add> {
  private static readonly pb::MessageParser<c2l_friend_add> _parser = new pb::MessageParser<c2l_friend_add>(() => new c2l_friend_add());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_add> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[258]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_add() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_add(c2l_friend_add other) : this() {
    accountId_ = other.accountId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_add Clone() {
    return new c2l_friend_add(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_add);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_add other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_add other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_ADD				= 55205;
/// </summary>
public sealed partial class l2c_friend_add : pb::IMessage<l2c_friend_add> {
  private static readonly pb::MessageParser<l2c_friend_add> _parser = new pb::MessageParser<l2c_friend_add>(() => new l2c_friend_add());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_add> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[259]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_add() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_add(l2c_friend_add other) : this() {
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_add Clone() {
    return new l2c_friend_add(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendRetType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRetType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_add);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_add other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_add other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendRetType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_DELETE				= 55206; // 申请删除好友
/// </summary>
public sealed partial class c2l_friend_delete : pb::IMessage<c2l_friend_delete> {
  private static readonly pb::MessageParser<c2l_friend_delete> _parser = new pb::MessageParser<c2l_friend_delete>(() => new c2l_friend_delete());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_delete> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[260]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_delete() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_delete(c2l_friend_delete other) : this() {
    accountId_ = other.accountId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_delete Clone() {
    return new c2l_friend_delete(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_delete);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_delete other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_delete other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_DELETE				= 55207;
/// </summary>
public sealed partial class l2c_friend_delete : pb::IMessage<l2c_friend_delete> {
  private static readonly pb::MessageParser<l2c_friend_delete> _parser = new pb::MessageParser<l2c_friend_delete>(() => new l2c_friend_delete());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_delete> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[261]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_delete() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_delete(l2c_friend_delete other) : this() {
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_delete Clone() {
    return new l2c_friend_delete(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendRetType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRetType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_delete);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_delete other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_delete other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendRetType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_THUMB				= 55208; // 点赞好友个人信息
/// </summary>
public sealed partial class c2l_friend_thumb : pb::IMessage<c2l_friend_thumb> {
  private static readonly pb::MessageParser<c2l_friend_thumb> _parser = new pb::MessageParser<c2l_friend_thumb>(() => new c2l_friend_thumb());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_thumb> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[262]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_thumb() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_thumb(c2l_friend_thumb other) : this() {
    accountId_ = other.accountId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_thumb Clone() {
    return new c2l_friend_thumb(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_thumb);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_thumb other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_thumb other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_THUMB				= 55209;
/// </summary>
public sealed partial class l2c_friend_thumb : pb::IMessage<l2c_friend_thumb> {
  private static readonly pb::MessageParser<l2c_friend_thumb> _parser = new pb::MessageParser<l2c_friend_thumb>(() => new l2c_friend_thumb());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_thumb> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[263]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb(l2c_friend_thumb other) : this() {
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb Clone() {
    return new l2c_friend_thumb(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendRetType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRetType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_thumb);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_thumb other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_thumb other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendRetType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_REQ_PACKAGE		= 55210; // 申请领取好友活跃礼包
/// </summary>
public sealed partial class c2l_friend_req_package : pb::IMessage<c2l_friend_req_package> {
  private static readonly pb::MessageParser<c2l_friend_req_package> _parser = new pb::MessageParser<c2l_friend_req_package>(() => new c2l_friend_req_package());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_req_package> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[264]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_req_package() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_req_package(c2l_friend_req_package other) : this() {
    type_ = other.type_;
    accountId_ = other.accountId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_req_package Clone() {
    return new c2l_friend_req_package(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendReqType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendReqType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 2;
  private uint accountId_;
  /// <summary>
  /// 若FriendReqType为ENM_FRIEND_REQ_TYPE_SINGLE, 需要填充此字段
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_req_package);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_req_package other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (AccountId != other.AccountId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (AccountId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_req_package other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendReqType) input.ReadEnum();
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_REQ_PACKAGE		= 55211;
/// </summary>
public sealed partial class l2c_friend_req_package : pb::IMessage<l2c_friend_req_package> {
  private static readonly pb::MessageParser<l2c_friend_req_package> _parser = new pb::MessageParser<l2c_friend_req_package>(() => new l2c_friend_req_package());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_req_package> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[265]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_req_package() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_req_package(l2c_friend_req_package other) : this() {
    type_ = other.type_;
    awards_ = other.awards_.Clone();
    recvedActiveNum_ = other.recvedActiveNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_req_package Clone() {
    return new l2c_friend_req_package(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendRetType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRetType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  /// <summary>Field number for the "recved_active_num" field.</summary>
  public const int RecvedActiveNumFieldNumber = 3;
  private int recvedActiveNum_;
  /// <summary>
  /// 以领取的活跃奖励数目
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RecvedActiveNum {
    get { return recvedActiveNum_; }
    set {
      recvedActiveNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_req_package);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_req_package other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if(!awards_.Equals(other.awards_)) return false;
    if (RecvedActiveNum != other.RecvedActiveNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    hash ^= awards_.GetHashCode();
    if (RecvedActiveNum != 0) hash ^= RecvedActiveNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    awards_.WriteTo(output, _repeated_awards_codec);
    if (RecvedActiveNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RecvedActiveNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (RecvedActiveNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecvedActiveNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_req_package other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    awards_.Add(other.awards_);
    if (other.RecvedActiveNum != 0) {
      RecvedActiveNum = other.RecvedActiveNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendRetType) input.ReadEnum();
          break;
        }
        case 18: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
        case 24: {
          RecvedActiveNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_DATA_UPD			= 55212; // 好友数据更新
/// </summary>
public sealed partial class l2c_friend_data_upd : pb::IMessage<l2c_friend_data_upd> {
  private static readonly pb::MessageParser<l2c_friend_data_upd> _parser = new pb::MessageParser<l2c_friend_data_upd>(() => new l2c_friend_data_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_data_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[266]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_data_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_data_upd(l2c_friend_data_upd other) : this() {
    friendData_ = other.friendData_ != null ? other.friendData_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_data_upd Clone() {
    return new l2c_friend_data_upd(this);
  }

  /// <summary>Field number for the "friend_data" field.</summary>
  public const int FriendDataFieldNumber = 1;
  private global::FriendMsgData friendData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendMsgData FriendData {
    get { return friendData_; }
    set {
      friendData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_data_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_data_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(FriendData, other.FriendData)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (friendData_ != null) hash ^= FriendData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (friendData_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FriendData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (friendData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_data_upd other) {
    if (other == null) {
      return;
    }
    if (other.friendData_ != null) {
      if (friendData_ == null) {
        friendData_ = new global::FriendMsgData();
      }
      FriendData.MergeFrom(other.FriendData);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (friendData_ == null) {
            friendData_ = new global::FriendMsgData();
          }
          input.ReadMessage(friendData_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_PERSONAL_DATA_INIT = 55213; // 查看个人资料
/// </summary>
public sealed partial class c2l_friend_personal_data_init : pb::IMessage<c2l_friend_personal_data_init> {
  private static readonly pb::MessageParser<c2l_friend_personal_data_init> _parser = new pb::MessageParser<c2l_friend_personal_data_init>(() => new c2l_friend_personal_data_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_personal_data_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[267]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_personal_data_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_personal_data_init(c2l_friend_personal_data_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_personal_data_init Clone() {
    return new c2l_friend_personal_data_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_personal_data_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_personal_data_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_personal_data_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_PERSONAL_DATA_INIT = 55214;
/// </summary>
public sealed partial class l2c_friend_personal_data_init : pb::IMessage<l2c_friend_personal_data_init> {
  private static readonly pb::MessageParser<l2c_friend_personal_data_init> _parser = new pb::MessageParser<l2c_friend_personal_data_init>(() => new l2c_friend_personal_data_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_personal_data_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[268]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_init(l2c_friend_personal_data_init other) : this() {
    data_ = other.data_ != null ? other.data_.Clone() : null;
    recvedThumbNum_ = other.recvedThumbNum_;
    nextThumbNum_ = other.nextThumbNum_;
    recvedActiveNum_ = other.recvedActiveNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_init Clone() {
    return new l2c_friend_personal_data_init(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private global::FriendMsgData data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendMsgData Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  /// <summary>Field number for the "recved_thumb_num" field.</summary>
  public const int RecvedThumbNumFieldNumber = 2;
  private int recvedThumbNum_;
  /// <summary>
  /// 已领取的赞数奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RecvedThumbNum {
    get { return recvedThumbNum_; }
    set {
      recvedThumbNum_ = value;
    }
  }

  /// <summary>Field number for the "next_thumb_num" field.</summary>
  public const int NextThumbNumFieldNumber = 3;
  private int nextThumbNum_;
  /// <summary>
  /// 下一个赞数奖励(如果没有下一个, 返回最后一个赞数奖励)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NextThumbNum {
    get { return nextThumbNum_; }
    set {
      nextThumbNum_ = value;
    }
  }

  /// <summary>Field number for the "recved_active_num" field.</summary>
  public const int RecvedActiveNumFieldNumber = 4;
  private int recvedActiveNum_;
  /// <summary>
  /// 以领取的活跃奖励数目
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RecvedActiveNum {
    get { return recvedActiveNum_; }
    set {
      recvedActiveNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_personal_data_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_personal_data_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Data, other.Data)) return false;
    if (RecvedThumbNum != other.RecvedThumbNum) return false;
    if (NextThumbNum != other.NextThumbNum) return false;
    if (RecvedActiveNum != other.RecvedActiveNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (data_ != null) hash ^= Data.GetHashCode();
    if (RecvedThumbNum != 0) hash ^= RecvedThumbNum.GetHashCode();
    if (NextThumbNum != 0) hash ^= NextThumbNum.GetHashCode();
    if (RecvedActiveNum != 0) hash ^= RecvedActiveNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (data_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Data);
    }
    if (RecvedThumbNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RecvedThumbNum);
    }
    if (NextThumbNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NextThumbNum);
    }
    if (RecvedActiveNum != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(RecvedActiveNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (RecvedThumbNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecvedThumbNum);
    }
    if (NextThumbNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextThumbNum);
    }
    if (RecvedActiveNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecvedActiveNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_personal_data_init other) {
    if (other == null) {
      return;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        data_ = new global::FriendMsgData();
      }
      Data.MergeFrom(other.Data);
    }
    if (other.RecvedThumbNum != 0) {
      RecvedThumbNum = other.RecvedThumbNum;
    }
    if (other.NextThumbNum != 0) {
      NextThumbNum = other.NextThumbNum;
    }
    if (other.RecvedActiveNum != 0) {
      RecvedActiveNum = other.RecvedActiveNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (data_ == null) {
            data_ = new global::FriendMsgData();
          }
          input.ReadMessage(data_);
          break;
        }
        case 16: {
          RecvedThumbNum = input.ReadInt32();
          break;
        }
        case 24: {
          NextThumbNum = input.ReadInt32();
          break;
        }
        case 32: {
          RecvedActiveNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_PERSONAL_DATA_MODIFY = 55215; // 修改个人资料
/// </summary>
public sealed partial class c2l_friend_personal_data_modify : pb::IMessage<c2l_friend_personal_data_modify> {
  private static readonly pb::MessageParser<c2l_friend_personal_data_modify> _parser = new pb::MessageParser<c2l_friend_personal_data_modify>(() => new c2l_friend_personal_data_modify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_personal_data_modify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[269]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_personal_data_modify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_personal_data_modify(c2l_friend_personal_data_modify other) : this() {
    signature_ = other.signature_;
    showBadge_ = other.showBadge_.Clone();
    background_ = other.background_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_personal_data_modify Clone() {
    return new c2l_friend_personal_data_modify(this);
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 1;
  private string signature_ = "";
  /// <summary>
  /// 个性签名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signature {
    get { return signature_; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "show_badge" field.</summary>
  public const int ShowBadgeFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_showBadge_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> showBadge_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 展示的徽章
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ShowBadge {
    get { return showBadge_; }
  }

  /// <summary>Field number for the "background" field.</summary>
  public const int BackgroundFieldNumber = 3;
  private string background_ = "";
  /// <summary>
  /// 背景图
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Background {
    get { return background_; }
    set {
      background_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_personal_data_modify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_personal_data_modify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Signature != other.Signature) return false;
    if(!showBadge_.Equals(other.showBadge_)) return false;
    if (Background != other.Background) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Signature.Length != 0) hash ^= Signature.GetHashCode();
    hash ^= showBadge_.GetHashCode();
    if (Background.Length != 0) hash ^= Background.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Signature.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Signature);
    }
    showBadge_.WriteTo(output, _repeated_showBadge_codec);
    if (Background.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Background);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Signature.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
    }
    size += showBadge_.CalculateSize(_repeated_showBadge_codec);
    if (Background.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Background);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_personal_data_modify other) {
    if (other == null) {
      return;
    }
    if (other.Signature.Length != 0) {
      Signature = other.Signature;
    }
    showBadge_.Add(other.showBadge_);
    if (other.Background.Length != 0) {
      Background = other.Background;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Signature = input.ReadString();
          break;
        }
        case 18:
        case 16: {
          showBadge_.AddEntriesFrom(input, _repeated_showBadge_codec);
          break;
        }
        case 26: {
          Background = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_PERSONAL_DATA_MODIFY = 55216;
/// </summary>
public sealed partial class l2c_friend_personal_data_modify : pb::IMessage<l2c_friend_personal_data_modify> {
  private static readonly pb::MessageParser<l2c_friend_personal_data_modify> _parser = new pb::MessageParser<l2c_friend_personal_data_modify>(() => new l2c_friend_personal_data_modify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_personal_data_modify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[270]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_modify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_modify(l2c_friend_personal_data_modify other) : this() {
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_modify Clone() {
    return new l2c_friend_personal_data_modify(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendRetType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRetType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_personal_data_modify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_personal_data_modify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_personal_data_modify other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendRetType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_OPT_APPLY			= 55217; // 操作好友申请
/// </summary>
public sealed partial class c2l_friend_opt_apply : pb::IMessage<c2l_friend_opt_apply> {
  private static readonly pb::MessageParser<c2l_friend_opt_apply> _parser = new pb::MessageParser<c2l_friend_opt_apply>(() => new c2l_friend_opt_apply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_opt_apply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[271]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_opt_apply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_opt_apply(c2l_friend_opt_apply other) : this() {
    type_ = other.type_;
    accountId_ = other.accountId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_opt_apply Clone() {
    return new c2l_friend_opt_apply(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendApplyOptType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendApplyOptType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 2;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_opt_apply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_opt_apply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (AccountId != other.AccountId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (AccountId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_opt_apply other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendApplyOptType) input.ReadEnum();
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_OPT_APPLY			= 55218;
/// </summary>
public sealed partial class l2c_friend_opt_apply : pb::IMessage<l2c_friend_opt_apply> {
  private static readonly pb::MessageParser<l2c_friend_opt_apply> _parser = new pb::MessageParser<l2c_friend_opt_apply>(() => new l2c_friend_opt_apply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_opt_apply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[272]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_opt_apply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_opt_apply(l2c_friend_opt_apply other) : this() {
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_opt_apply Clone() {
    return new l2c_friend_opt_apply(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendRetType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRetType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_opt_apply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_opt_apply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_opt_apply other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendRetType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_PERSONAL_DATA_UPD
/// </summary>
public sealed partial class l2c_friend_personal_data_upd : pb::IMessage<l2c_friend_personal_data_upd> {
  private static readonly pb::MessageParser<l2c_friend_personal_data_upd> _parser = new pb::MessageParser<l2c_friend_personal_data_upd>(() => new l2c_friend_personal_data_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_personal_data_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[273]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_upd(l2c_friend_personal_data_upd other) : this() {
    data_ = other.data_ != null ? other.data_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_personal_data_upd Clone() {
    return new l2c_friend_personal_data_upd(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private global::FriendMsgData data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendMsgData Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_personal_data_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_personal_data_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Data, other.Data)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (data_ != null) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (data_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_personal_data_upd other) {
    if (other == null) {
      return;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        data_ = new global::FriendMsgData();
      }
      Data.MergeFrom(other.Data);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (data_ == null) {
            data_ = new global::FriendMsgData();
          }
          input.ReadMessage(data_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_APPLY_UPD
/// </summary>
public sealed partial class l2c_friend_apply_upd : pb::IMessage<l2c_friend_apply_upd> {
  private static readonly pb::MessageParser<l2c_friend_apply_upd> _parser = new pb::MessageParser<l2c_friend_apply_upd>(() => new l2c_friend_apply_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_apply_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[274]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_apply_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_apply_upd(l2c_friend_apply_upd other) : this() {
    data_ = other.data_ != null ? other.data_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_apply_upd Clone() {
    return new l2c_friend_apply_upd(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private global::FriendRelationMsgData data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRelationMsgData Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_apply_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_apply_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Data, other.Data)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (data_ != null) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (data_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_apply_upd other) {
    if (other == null) {
      return;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        data_ = new global::FriendRelationMsgData();
      }
      Data.MergeFrom(other.Data);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (data_ == null) {
            data_ = new global::FriendRelationMsgData();
          }
          input.ReadMessage(data_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_DEL_UPD 
/// </summary>
public sealed partial class l2c_friend_del_upd : pb::IMessage<l2c_friend_del_upd> {
  private static readonly pb::MessageParser<l2c_friend_del_upd> _parser = new pb::MessageParser<l2c_friend_del_upd>(() => new l2c_friend_del_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_del_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[275]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_del_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_del_upd(l2c_friend_del_upd other) : this() {
    accountId_ = other.accountId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_del_upd Clone() {
    return new l2c_friend_del_upd(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_del_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_del_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_del_upd other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_THUMB_UPD
/// </summary>
public sealed partial class l2c_friend_thumb_upd : pb::IMessage<l2c_friend_thumb_upd> {
  private static readonly pb::MessageParser<l2c_friend_thumb_upd> _parser = new pb::MessageParser<l2c_friend_thumb_upd>(() => new l2c_friend_thumb_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_thumb_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[276]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb_upd(l2c_friend_thumb_upd other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb_upd Clone() {
    return new l2c_friend_thumb_upd(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_thumb_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_thumb_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_thumb_upd other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2L_FRIEND_RELATION_UPD
/// </summary>
public sealed partial class l2l_friend_relation_upd : pb::IMessage<l2l_friend_relation_upd> {
  private static readonly pb::MessageParser<l2l_friend_relation_upd> _parser = new pb::MessageParser<l2l_friend_relation_upd>(() => new l2l_friend_relation_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2l_friend_relation_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[277]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2l_friend_relation_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2l_friend_relation_upd(l2l_friend_relation_upd other) : this() {
    sourceAccount_ = other.sourceAccount_;
    data_ = other.data_ != null ? other.data_.Clone() : null;
    opt_ = other.opt_;
    sourceId_ = other.sourceId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2l_friend_relation_upd Clone() {
    return new l2l_friend_relation_upd(this);
  }

  /// <summary>Field number for the "source_account" field.</summary>
  public const int SourceAccountFieldNumber = 1;
  private string sourceAccount_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SourceAccount {
    get { return sourceAccount_; }
    set {
      sourceAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 2;
  private global::FriendMsgData data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendMsgData Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  /// <summary>Field number for the "opt" field.</summary>
  public const int OptFieldNumber = 3;
  private int opt_;
  /// <summary>
  /// 申请好友 同意好友 被点赞 删除
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Opt {
    get { return opt_; }
    set {
      opt_ = value;
    }
  }

  /// <summary>Field number for the "source_id" field.</summary>
  public const int SourceIdFieldNumber = 4;
  private uint sourceId_;
  /// <summary>
  /// 仅删除操作用到
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SourceId {
    get { return sourceId_; }
    set {
      sourceId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2l_friend_relation_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2l_friend_relation_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SourceAccount != other.SourceAccount) return false;
    if (!object.Equals(Data, other.Data)) return false;
    if (Opt != other.Opt) return false;
    if (SourceId != other.SourceId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SourceAccount.Length != 0) hash ^= SourceAccount.GetHashCode();
    if (data_ != null) hash ^= Data.GetHashCode();
    if (Opt != 0) hash ^= Opt.GetHashCode();
    if (SourceId != 0) hash ^= SourceId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SourceAccount.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SourceAccount);
    }
    if (data_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Data);
    }
    if (Opt != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Opt);
    }
    if (SourceId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(SourceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SourceAccount.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceAccount);
    }
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (Opt != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Opt);
    }
    if (SourceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2l_friend_relation_upd other) {
    if (other == null) {
      return;
    }
    if (other.SourceAccount.Length != 0) {
      SourceAccount = other.SourceAccount;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        data_ = new global::FriendMsgData();
      }
      Data.MergeFrom(other.Data);
    }
    if (other.Opt != 0) {
      Opt = other.Opt;
    }
    if (other.SourceId != 0) {
      SourceId = other.SourceId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SourceAccount = input.ReadString();
          break;
        }
        case 18: {
          if (data_ == null) {
            data_ = new global::FriendMsgData();
          }
          input.ReadMessage(data_);
          break;
        }
        case 24: {
          Opt = input.ReadInt32();
          break;
        }
        case 32: {
          SourceId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_FRIEND_THUMB_PACKAGE_REQ 	= 55224; // 好友点赞礼包
/// </summary>
public sealed partial class c2l_friend_thumb_package_req : pb::IMessage<c2l_friend_thumb_package_req> {
  private static readonly pb::MessageParser<c2l_friend_thumb_package_req> _parser = new pb::MessageParser<c2l_friend_thumb_package_req>(() => new c2l_friend_thumb_package_req());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_friend_thumb_package_req> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[278]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_thumb_package_req() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_thumb_package_req(c2l_friend_thumb_package_req other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_friend_thumb_package_req Clone() {
    return new c2l_friend_thumb_package_req(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_friend_thumb_package_req);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_friend_thumb_package_req other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_friend_thumb_package_req other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_THUMB_PACKAGE_REQ 	= 55225;
/// </summary>
public sealed partial class l2c_friend_thumb_package_req : pb::IMessage<l2c_friend_thumb_package_req> {
  private static readonly pb::MessageParser<l2c_friend_thumb_package_req> _parser = new pb::MessageParser<l2c_friend_thumb_package_req>(() => new l2c_friend_thumb_package_req());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_thumb_package_req> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[279]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb_package_req() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb_package_req(l2c_friend_thumb_package_req other) : this() {
    type_ = other.type_;
    awards_ = other.awards_.Clone();
    nextThumbNum_ = other.nextThumbNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_thumb_package_req Clone() {
    return new l2c_friend_thumb_package_req(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::FriendRetType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRetType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  /// <summary>Field number for the "next_thumb_num" field.</summary>
  public const int NextThumbNumFieldNumber = 3;
  private int nextThumbNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NextThumbNum {
    get { return nextThumbNum_; }
    set {
      nextThumbNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_thumb_package_req);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_thumb_package_req other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if(!awards_.Equals(other.awards_)) return false;
    if (NextThumbNum != other.NextThumbNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    hash ^= awards_.GetHashCode();
    if (NextThumbNum != 0) hash ^= NextThumbNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    awards_.WriteTo(output, _repeated_awards_codec);
    if (NextThumbNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NextThumbNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (NextThumbNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextThumbNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_thumb_package_req other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    awards_.Add(other.awards_);
    if (other.NextThumbNum != 0) {
      NextThumbNum = other.NextThumbNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::FriendRetType) input.ReadEnum();
          break;
        }
        case 18: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
        case 24: {
          NextThumbNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_FRIEND_RELATION_UPD
/// </summary>
public sealed partial class l2c_friend_relation_upd : pb::IMessage<l2c_friend_relation_upd> {
  private static readonly pb::MessageParser<l2c_friend_relation_upd> _parser = new pb::MessageParser<l2c_friend_relation_upd>(() => new l2c_friend_relation_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_friend_relation_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[280]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_relation_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_relation_upd(l2c_friend_relation_upd other) : this() {
    data_ = other.data_ != null ? other.data_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_friend_relation_upd Clone() {
    return new l2c_friend_relation_upd(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private global::FriendRelationMsgData data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FriendRelationMsgData Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_friend_relation_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_friend_relation_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Data, other.Data)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (data_ != null) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (data_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_friend_relation_upd other) {
    if (other == null) {
      return;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        data_ = new global::FriendRelationMsgData();
      }
      Data.MergeFrom(other.Data);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (data_ == null) {
            data_ = new global::FriendRelationMsgData();
          }
          input.ReadMessage(data_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 随机关卡-------------------------------------------------------------------------------------------------	
/// </summary>
public sealed partial class RandomStageInfo : pb::IMessage<RandomStageInfo> {
  private static readonly pb::MessageParser<RandomStageInfo> _parser = new pb::MessageParser<RandomStageInfo>(() => new RandomStageInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RandomStageInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[281]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RandomStageInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RandomStageInfo(RandomStageInfo other) : this() {
    stageType_ = other.stageType_;
    id_ = other.id_;
    isAccept_ = other.isAccept_;
    createTime_ = other.createTime_;
    endTime_ = other.endTime_;
    curSecs_ = other.curSecs_;
    intParam_ = other.intParam_.Clone();
    stringParam_ = other.stringParam_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RandomStageInfo Clone() {
    return new RandomStageInfo(this);
  }

  /// <summary>Field number for the "stage_type" field.</summary>
  public const int StageTypeFieldNumber = 1;
  private int stageType_;
  /// <summary>
  /// 关卡类型（战斗、钓鱼小游戏）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageType {
    get { return stageType_; }
    set {
      stageType_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  /// <summary>
  /// 关卡ID（stage_id）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "is_accept" field.</summary>
  public const int IsAcceptFieldNumber = 3;
  private bool isAccept_;
  /// <summary>
  /// 是否接受
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsAccept {
    get { return isAccept_; }
    set {
      isAccept_ = value;
    }
  }

  /// <summary>Field number for the "create_time" field.</summary>
  public const int CreateTimeFieldNumber = 5;
  private long createTime_;
  /// <summary>
  /// 生成时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CreateTime {
    get { return createTime_; }
    set {
      createTime_ = value;
    }
  }

  /// <summary>Field number for the "end_time" field.</summary>
  public const int EndTimeFieldNumber = 6;
  private long endTime_;
  /// <summary>
  /// 结束时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long EndTime {
    get { return endTime_; }
    set {
      endTime_ = value;
    }
  }

  /// <summary>Field number for the "cur_secs" field.</summary>
  public const int CurSecsFieldNumber = 7;
  private int curSecs_;
  /// <summary>
  /// 当前剩余秒数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurSecs {
    get { return curSecs_; }
    set {
      curSecs_ = value;
    }
  }

  /// <summary>Field number for the "int_param" field.</summary>
  public const int IntParamFieldNumber = 9;
  private static readonly pb::FieldCodec<int> _repeated_intParam_codec
      = pb::FieldCodec.ForInt32(74);
  private readonly pbc::RepeatedField<int> intParam_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 随机关卡参数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> IntParam {
    get { return intParam_; }
  }

  /// <summary>Field number for the "string_param" field.</summary>
  public const int StringParamFieldNumber = 10;
  private static readonly pb::FieldCodec<string> _repeated_stringParam_codec
      = pb::FieldCodec.ForString(82);
  private readonly pbc::RepeatedField<string> stringParam_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// 字符参数（战斗：							钓鱼：）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> StringParam {
    get { return stringParam_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RandomStageInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RandomStageInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageType != other.StageType) return false;
    if (Id != other.Id) return false;
    if (IsAccept != other.IsAccept) return false;
    if (CreateTime != other.CreateTime) return false;
    if (EndTime != other.EndTime) return false;
    if (CurSecs != other.CurSecs) return false;
    if(!intParam_.Equals(other.intParam_)) return false;
    if(!stringParam_.Equals(other.stringParam_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageType != 0) hash ^= StageType.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (IsAccept != false) hash ^= IsAccept.GetHashCode();
    if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
    if (EndTime != 0L) hash ^= EndTime.GetHashCode();
    if (CurSecs != 0) hash ^= CurSecs.GetHashCode();
    hash ^= intParam_.GetHashCode();
    hash ^= stringParam_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageType != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageType);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (IsAccept != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsAccept);
    }
    if (CreateTime != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(CreateTime);
    }
    if (EndTime != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(EndTime);
    }
    if (CurSecs != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(CurSecs);
    }
    intParam_.WriteTo(output, _repeated_intParam_codec);
    stringParam_.WriteTo(output, _repeated_stringParam_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageType);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (IsAccept != false) {
      size += 1 + 1;
    }
    if (CreateTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
    }
    if (EndTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
    }
    if (CurSecs != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurSecs);
    }
    size += intParam_.CalculateSize(_repeated_intParam_codec);
    size += stringParam_.CalculateSize(_repeated_stringParam_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RandomStageInfo other) {
    if (other == null) {
      return;
    }
    if (other.StageType != 0) {
      StageType = other.StageType;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.IsAccept != false) {
      IsAccept = other.IsAccept;
    }
    if (other.CreateTime != 0L) {
      CreateTime = other.CreateTime;
    }
    if (other.EndTime != 0L) {
      EndTime = other.EndTime;
    }
    if (other.CurSecs != 0) {
      CurSecs = other.CurSecs;
    }
    intParam_.Add(other.intParam_);
    stringParam_.Add(other.stringParam_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageType = input.ReadInt32();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          IsAccept = input.ReadBool();
          break;
        }
        case 40: {
          CreateTime = input.ReadInt64();
          break;
        }
        case 48: {
          EndTime = input.ReadInt64();
          break;
        }
        case 56: {
          CurSecs = input.ReadInt32();
          break;
        }
        case 74:
        case 72: {
          intParam_.AddEntriesFrom(input, _repeated_intParam_codec);
          break;
        }
        case 82: {
          stringParam_.AddEntriesFrom(input, _repeated_stringParam_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_random_stage_init : pb::IMessage<c2l_random_stage_init> {
  private static readonly pb::MessageParser<c2l_random_stage_init> _parser = new pb::MessageParser<c2l_random_stage_init>(() => new c2l_random_stage_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_random_stage_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[282]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_stage_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_stage_init(c2l_random_stage_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_stage_init Clone() {
    return new c2l_random_stage_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_random_stage_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_random_stage_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_random_stage_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_random_stage_init : pb::IMessage<l2c_random_stage_init> {
  private static readonly pb::MessageParser<l2c_random_stage_init> _parser = new pb::MessageParser<l2c_random_stage_init>(() => new l2c_random_stage_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_random_stage_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[283]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_stage_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_stage_init(l2c_random_stage_init other) : this() {
    infos_ = other.infos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_stage_init Clone() {
    return new l2c_random_stage_init(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RandomStageInfo> _repeated_infos_codec
      = pb::FieldCodec.ForMessage(10, global::RandomStageInfo.Parser);
  private readonly pbc::RepeatedField<global::RandomStageInfo> infos_ = new pbc::RepeatedField<global::RandomStageInfo>();
  /// <summary>
  /// 所有随机关卡信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RandomStageInfo> Infos {
    get { return infos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_random_stage_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_random_stage_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!infos_.Equals(other.infos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= infos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    infos_.WriteTo(output, _repeated_infos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += infos_.CalculateSize(_repeated_infos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_random_stage_init other) {
    if (other == null) {
      return;
    }
    infos_.Add(other.infos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          infos_.AddEntriesFrom(input, _repeated_infos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_random_stage_upd : pb::IMessage<l2c_random_stage_upd> {
  private static readonly pb::MessageParser<l2c_random_stage_upd> _parser = new pb::MessageParser<l2c_random_stage_upd>(() => new l2c_random_stage_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_random_stage_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[284]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_stage_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_stage_upd(l2c_random_stage_upd other) : this() {
    opts_ = other.opts_;
    info_ = other.info_ != null ? other.info_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_random_stage_upd Clone() {
    return new l2c_random_stage_upd(this);
  }

  /// <summary>Field number for the "opts" field.</summary>
  public const int OptsFieldNumber = 1;
  private global::RandomStageOptType opts_ = 0;
  /// <summary>
  /// 操作类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RandomStageOptType Opts {
    get { return opts_; }
    set {
      opts_ = value;
    }
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 2;
  private global::RandomStageInfo info_;
  /// <summary>
  /// 关卡信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RandomStageInfo Info {
    get { return info_; }
    set {
      info_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_random_stage_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_random_stage_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Opts != other.Opts) return false;
    if (!object.Equals(Info, other.Info)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Opts != 0) hash ^= Opts.GetHashCode();
    if (info_ != null) hash ^= Info.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Opts != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Opts);
    }
    if (info_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Info);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Opts != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Opts);
    }
    if (info_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_random_stage_upd other) {
    if (other == null) {
      return;
    }
    if (other.Opts != 0) {
      Opts = other.Opts;
    }
    if (other.info_ != null) {
      if (info_ == null) {
        info_ = new global::RandomStageInfo();
      }
      Info.MergeFrom(other.Info);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          opts_ = (global::RandomStageOptType) input.ReadEnum();
          break;
        }
        case 18: {
          if (info_ == null) {
            info_ = new global::RandomStageInfo();
          }
          input.ReadMessage(info_);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_random_stage_progress : pb::IMessage<c2l_random_stage_progress> {
  private static readonly pb::MessageParser<c2l_random_stage_progress> _parser = new pb::MessageParser<c2l_random_stage_progress>(() => new c2l_random_stage_progress());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_random_stage_progress> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[285]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_stage_progress() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_stage_progress(c2l_random_stage_progress other) : this() {
    stageId_ = other.stageId_;
    createTime_ = other.createTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_random_stage_progress Clone() {
    return new c2l_random_stage_progress(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 1;
  private int stageId_;
  /// <summary>
  /// 关卡ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "create_time" field.</summary>
  public const int CreateTimeFieldNumber = 2;
  private long createTime_;
  /// <summary>
  /// 生成时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CreateTime {
    get { return createTime_; }
    set {
      createTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_random_stage_progress);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_random_stage_progress other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (CreateTime != other.CreateTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StageId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(StageId);
    }
    if (CreateTime != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(CreateTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageId);
    }
    if (CreateTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_random_stage_progress other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.CreateTime != 0L) {
      CreateTime = other.CreateTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageId = input.ReadInt32();
          break;
        }
        case 16: {
          CreateTime = input.ReadInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_TITLE_INIT				= 55001; // 称号初始化
/// </summary>
public sealed partial class c2l_title_init : pb::IMessage<c2l_title_init> {
  private static readonly pb::MessageParser<c2l_title_init> _parser = new pb::MessageParser<c2l_title_init>(() => new c2l_title_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_title_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[286]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_title_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_title_init(c2l_title_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_title_init Clone() {
    return new c2l_title_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_title_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_title_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_title_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_TITLE_INIT				= 55002;
/// </summary>
public sealed partial class l2c_title_init : pb::IMessage<l2c_title_init> {
  private static readonly pb::MessageParser<l2c_title_init> _parser = new pb::MessageParser<l2c_title_init>(() => new l2c_title_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_title_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[287]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_title_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_title_init(l2c_title_init other) : this() {
    ownTitleId_ = other.ownTitleId_.Clone();
    prefix_ = other.prefix_;
    midfix_ = other.midfix_;
    pofix_ = other.pofix_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_title_init Clone() {
    return new l2c_title_init(this);
  }

  /// <summary>Field number for the "own_title_id" field.</summary>
  public const int OwnTitleIdFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_ownTitleId_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> ownTitleId_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 已拥有的称号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> OwnTitleId {
    get { return ownTitleId_; }
  }

  /// <summary>Field number for the "prefix" field.</summary>
  public const int PrefixFieldNumber = 2;
  private int prefix_;
  /// <summary>
  /// 现在装备的前缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prefix {
    get { return prefix_; }
    set {
      prefix_ = value;
    }
  }

  /// <summary>Field number for the "midfix" field.</summary>
  public const int MidfixFieldNumber = 3;
  private int midfix_;
  /// <summary>
  /// 现在装备的中缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Midfix {
    get { return midfix_; }
    set {
      midfix_ = value;
    }
  }

  /// <summary>Field number for the "pofix" field.</summary>
  public const int PofixFieldNumber = 4;
  private int pofix_;
  /// <summary>
  /// 现在装备的后缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Pofix {
    get { return pofix_; }
    set {
      pofix_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_title_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_title_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ownTitleId_.Equals(other.ownTitleId_)) return false;
    if (Prefix != other.Prefix) return false;
    if (Midfix != other.Midfix) return false;
    if (Pofix != other.Pofix) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ownTitleId_.GetHashCode();
    if (Prefix != 0) hash ^= Prefix.GetHashCode();
    if (Midfix != 0) hash ^= Midfix.GetHashCode();
    if (Pofix != 0) hash ^= Pofix.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    ownTitleId_.WriteTo(output, _repeated_ownTitleId_codec);
    if (Prefix != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Prefix);
    }
    if (Midfix != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Midfix);
    }
    if (Pofix != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Pofix);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ownTitleId_.CalculateSize(_repeated_ownTitleId_codec);
    if (Prefix != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prefix);
    }
    if (Midfix != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Midfix);
    }
    if (Pofix != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pofix);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_title_init other) {
    if (other == null) {
      return;
    }
    ownTitleId_.Add(other.ownTitleId_);
    if (other.Prefix != 0) {
      Prefix = other.Prefix;
    }
    if (other.Midfix != 0) {
      Midfix = other.Midfix;
    }
    if (other.Pofix != 0) {
      Pofix = other.Pofix;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          ownTitleId_.AddEntriesFrom(input, _repeated_ownTitleId_codec);
          break;
        }
        case 16: {
          Prefix = input.ReadInt32();
          break;
        }
        case 24: {
          Midfix = input.ReadInt32();
          break;
        }
        case 32: {
          Pofix = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_C2L_CHANGE_TITLE				= 55003; // 改变称号
/// </summary>
public sealed partial class c2l_change_title : pb::IMessage<c2l_change_title> {
  private static readonly pb::MessageParser<c2l_change_title> _parser = new pb::MessageParser<c2l_change_title>(() => new c2l_change_title());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_change_title> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[288]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_change_title() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_change_title(c2l_change_title other) : this() {
    prefix_ = other.prefix_;
    midfix_ = other.midfix_;
    pofix_ = other.pofix_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_change_title Clone() {
    return new c2l_change_title(this);
  }

  /// <summary>Field number for the "prefix" field.</summary>
  public const int PrefixFieldNumber = 1;
  private int prefix_;
  /// <summary>
  /// 前缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prefix {
    get { return prefix_; }
    set {
      prefix_ = value;
    }
  }

  /// <summary>Field number for the "midfix" field.</summary>
  public const int MidfixFieldNumber = 2;
  private int midfix_;
  /// <summary>
  /// 中缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Midfix {
    get { return midfix_; }
    set {
      midfix_ = value;
    }
  }

  /// <summary>Field number for the "pofix" field.</summary>
  public const int PofixFieldNumber = 3;
  private int pofix_;
  /// <summary>
  /// 后缀
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Pofix {
    get { return pofix_; }
    set {
      pofix_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_change_title);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_change_title other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Prefix != other.Prefix) return false;
    if (Midfix != other.Midfix) return false;
    if (Pofix != other.Pofix) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Prefix != 0) hash ^= Prefix.GetHashCode();
    if (Midfix != 0) hash ^= Midfix.GetHashCode();
    if (Pofix != 0) hash ^= Pofix.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Prefix != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Prefix);
    }
    if (Midfix != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Midfix);
    }
    if (Pofix != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Pofix);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Prefix != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prefix);
    }
    if (Midfix != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Midfix);
    }
    if (Pofix != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pofix);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_change_title other) {
    if (other == null) {
      return;
    }
    if (other.Prefix != 0) {
      Prefix = other.Prefix;
    }
    if (other.Midfix != 0) {
      Midfix = other.Midfix;
    }
    if (other.Pofix != 0) {
      Pofix = other.Pofix;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Prefix = input.ReadInt32();
          break;
        }
        case 16: {
          Midfix = input.ReadInt32();
          break;
        }
        case 24: {
          Pofix = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_CHANGE_TITLE				= 55004;
/// </summary>
public sealed partial class l2c_change_title : pb::IMessage<l2c_change_title> {
  private static readonly pb::MessageParser<l2c_change_title> _parser = new pb::MessageParser<l2c_change_title>(() => new l2c_change_title());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_change_title> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[289]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_change_title() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_change_title(l2c_change_title other) : this() {
    ret_ = other.ret_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_change_title Clone() {
    return new l2c_change_title(this);
  }

  /// <summary>Field number for the "ret" field.</summary>
  public const int RetFieldNumber = 1;
  private global::TitleRetType ret_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TitleRetType Ret {
    get { return ret_; }
    set {
      ret_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_change_title);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_change_title other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ret != other.Ret) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Ret != 0) hash ^= Ret.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Ret != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Ret);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Ret != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ret);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_change_title other) {
    if (other == null) {
      return;
    }
    if (other.Ret != 0) {
      Ret = other.Ret;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ret_ = (global::TitleRetType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_UNLOCK_TITLE_UPD
/// </summary>
public sealed partial class l2c_unlock_title_upd : pb::IMessage<l2c_unlock_title_upd> {
  private static readonly pb::MessageParser<l2c_unlock_title_upd> _parser = new pb::MessageParser<l2c_unlock_title_upd>(() => new l2c_unlock_title_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_unlock_title_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[290]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_title_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_title_upd(l2c_unlock_title_upd other) : this() {
    titleId_ = other.titleId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_title_upd Clone() {
    return new l2c_unlock_title_upd(this);
  }

  /// <summary>Field number for the "title_id" field.</summary>
  public const int TitleIdFieldNumber = 1;
  private int titleId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TitleId {
    get { return titleId_; }
    set {
      titleId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_unlock_title_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_unlock_title_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TitleId != other.TitleId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TitleId != 0) hash ^= TitleId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TitleId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TitleId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TitleId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TitleId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_unlock_title_upd other) {
    if (other == null) {
      return;
    }
    if (other.TitleId != 0) {
      TitleId = other.TitleId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TitleId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 分享-------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class c2l_share_init : pb::IMessage<c2l_share_init> {
  private static readonly pb::MessageParser<c2l_share_init> _parser = new pb::MessageParser<c2l_share_init>(() => new c2l_share_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_share_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[291]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_share_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_share_init(c2l_share_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_share_init Clone() {
    return new c2l_share_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_share_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_share_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_share_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_share_upd : pb::IMessage<l2c_share_upd> {
  private static readonly pb::MessageParser<l2c_share_upd> _parser = new pb::MessageParser<l2c_share_upd>(() => new l2c_share_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_share_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[292]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_upd(l2c_share_upd other) : this() {
    id_ = other.id_;
    isReward_ = other.isReward_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_upd Clone() {
    return new l2c_share_upd(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 分享ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "is_reward" field.</summary>
  public const int IsRewardFieldNumber = 2;
  private bool isReward_;
  /// <summary>
  /// 是否可以领奖
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsReward {
    get { return isReward_; }
    set {
      isReward_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_share_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_share_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (IsReward != other.IsReward) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (IsReward != false) hash ^= IsReward.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (IsReward != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsReward);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (IsReward != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_share_upd other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.IsReward != false) {
      IsReward = other.IsReward;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          IsReward = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_share_init : pb::IMessage<l2c_share_init> {
  private static readonly pb::MessageParser<l2c_share_init> _parser = new pb::MessageParser<l2c_share_init>(() => new l2c_share_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_share_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[293]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_init(l2c_share_init other) : this() {
    infos_ = other.infos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_init Clone() {
    return new l2c_share_init(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_share_upd> _repeated_infos_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_share_upd.Parser);
  private readonly pbc::RepeatedField<global::l2c_share_upd> infos_ = new pbc::RepeatedField<global::l2c_share_upd>();
  /// <summary>
  /// 初始化信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_share_upd> Infos {
    get { return infos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_share_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_share_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!infos_.Equals(other.infos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= infos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    infos_.WriteTo(output, _repeated_infos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += infos_.CalculateSize(_repeated_infos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_share_init other) {
    if (other == null) {
      return;
    }
    infos_.Add(other.infos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          infos_.AddEntriesFrom(input, _repeated_infos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_share_reward : pb::IMessage<c2l_share_reward> {
  private static readonly pb::MessageParser<c2l_share_reward> _parser = new pb::MessageParser<c2l_share_reward>(() => new c2l_share_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_share_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[294]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_share_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_share_reward(c2l_share_reward other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_share_reward Clone() {
    return new c2l_share_reward(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 分享ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_share_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_share_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_share_reward other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_share_reward : pb::IMessage<l2c_share_reward> {
  private static readonly pb::MessageParser<l2c_share_reward> _parser = new pb::MessageParser<l2c_share_reward>(() => new l2c_share_reward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_share_reward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[295]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_reward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_reward(l2c_share_reward other) : this() {
    result_ = other.result_;
    awards_ = other.awards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_share_reward Clone() {
    return new l2c_share_reward(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 结果 false:不可领取 true：领取成功
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(18, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励元素
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_share_reward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_share_reward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if(!awards_.Equals(other.awards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    hash ^= awards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    awards_.WriteTo(output, _repeated_awards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_share_reward other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    awards_.Add(other.awards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
        case 18: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 徽章-------------------------------------------------------------------------------------------------
/// </summary>
public sealed partial class c2l_badge_init : pb::IMessage<c2l_badge_init> {
  private static readonly pb::MessageParser<c2l_badge_init> _parser = new pb::MessageParser<c2l_badge_init>(() => new c2l_badge_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_badge_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[296]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_badge_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_badge_init(c2l_badge_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_badge_init Clone() {
    return new c2l_badge_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_badge_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_badge_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_badge_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class l2c_badge_init : pb::IMessage<l2c_badge_init> {
  private static readonly pb::MessageParser<l2c_badge_init> _parser = new pb::MessageParser<l2c_badge_init>(() => new l2c_badge_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_badge_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[297]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_init(l2c_badge_init other) : this() {
    curBadgeIds_ = other.curBadgeIds_.Clone();
    ownBadgeIds_ = other.ownBadgeIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_init Clone() {
    return new l2c_badge_init(this);
  }

  /// <summary>Field number for the "cur_badge_ids" field.</summary>
  public const int CurBadgeIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_curBadgeIds_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> curBadgeIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 当前展示徽章
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> CurBadgeIds {
    get { return curBadgeIds_; }
  }

  /// <summary>Field number for the "own_badge_ids" field.</summary>
  public const int OwnBadgeIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_ownBadgeIds_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> ownBadgeIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 已拥有徽章
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> OwnBadgeIds {
    get { return ownBadgeIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_badge_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_badge_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!curBadgeIds_.Equals(other.curBadgeIds_)) return false;
    if(!ownBadgeIds_.Equals(other.ownBadgeIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= curBadgeIds_.GetHashCode();
    hash ^= ownBadgeIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    curBadgeIds_.WriteTo(output, _repeated_curBadgeIds_codec);
    ownBadgeIds_.WriteTo(output, _repeated_ownBadgeIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += curBadgeIds_.CalculateSize(_repeated_curBadgeIds_codec);
    size += ownBadgeIds_.CalculateSize(_repeated_ownBadgeIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_badge_init other) {
    if (other == null) {
      return;
    }
    curBadgeIds_.Add(other.curBadgeIds_);
    ownBadgeIds_.Add(other.ownBadgeIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          curBadgeIds_.AddEntriesFrom(input, _repeated_curBadgeIds_codec);
          break;
        }
        case 18:
        case 16: {
          ownBadgeIds_.AddEntriesFrom(input, _repeated_ownBadgeIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_badge_upd : pb::IMessage<l2c_badge_upd> {
  private static readonly pb::MessageParser<l2c_badge_upd> _parser = new pb::MessageParser<l2c_badge_upd>(() => new l2c_badge_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_badge_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[298]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_upd(l2c_badge_upd other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_upd Clone() {
    return new l2c_badge_upd(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 新增徽章ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_badge_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_badge_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_badge_upd other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_badge_changed : pb::IMessage<c2l_badge_changed> {
  private static readonly pb::MessageParser<c2l_badge_changed> _parser = new pb::MessageParser<c2l_badge_changed>(() => new c2l_badge_changed());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_badge_changed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[299]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_badge_changed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_badge_changed(c2l_badge_changed other) : this() {
    changedIds_ = other.changedIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_badge_changed Clone() {
    return new c2l_badge_changed(this);
  }

  /// <summary>Field number for the "changed_ids" field.</summary>
  public const int ChangedIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_changedIds_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> changedIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 变更后的徽章
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ChangedIds {
    get { return changedIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_badge_changed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_badge_changed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!changedIds_.Equals(other.changedIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= changedIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    changedIds_.WriteTo(output, _repeated_changedIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += changedIds_.CalculateSize(_repeated_changedIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_badge_changed other) {
    if (other == null) {
      return;
    }
    changedIds_.Add(other.changedIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          changedIds_.AddEntriesFrom(input, _repeated_changedIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_badge_changed : pb::IMessage<l2c_badge_changed> {
  private static readonly pb::MessageParser<l2c_badge_changed> _parser = new pb::MessageParser<l2c_badge_changed>(() => new l2c_badge_changed());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_badge_changed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[300]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_changed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_changed(l2c_badge_changed other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_badge_changed Clone() {
    return new l2c_badge_changed(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  /// <summary>
  /// 变更结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_badge_changed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_badge_changed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_badge_changed other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 声望 ------------------------------------------------------------------------------------------------
/// LOGIC_MSG_C2L_REPUTATION_INIT 			= 54701; 
/// </summary>
public sealed partial class c2l_reputation_init : pb::IMessage<c2l_reputation_init> {
  private static readonly pb::MessageParser<c2l_reputation_init> _parser = new pb::MessageParser<c2l_reputation_init>(() => new c2l_reputation_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_reputation_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[301]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reputation_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reputation_init(c2l_reputation_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reputation_init Clone() {
    return new c2l_reputation_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_reputation_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_reputation_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_reputation_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_REPUTATION_INIT			= 54702;
/// </summary>
public sealed partial class l2c_reputation_init : pb::IMessage<l2c_reputation_init> {
  private static readonly pb::MessageParser<l2c_reputation_init> _parser = new pb::MessageParser<l2c_reputation_init>(() => new l2c_reputation_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_reputation_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[302]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_init(l2c_reputation_init other) : this() {
    lastWeekReputation_ = other.lastWeekReputation_.Clone();
    isAwardThisWeek_ = other.isAwardThisWeek_;
    awards_ = other.awards_.Clone();
    counterTick_ = other.counterTick_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_init Clone() {
    return new l2c_reputation_init(this);
  }

  /// <summary>Field number for the "last_week_reputation" field.</summary>
  public const int LastWeekReputationFieldNumber = 1;
  private static readonly pb::FieldCodec<global::l2c_reputation_init.Types.NationReputation> _repeated_lastWeekReputation_codec
      = pb::FieldCodec.ForMessage(10, global::l2c_reputation_init.Types.NationReputation.Parser);
  private readonly pbc::RepeatedField<global::l2c_reputation_init.Types.NationReputation> lastWeekReputation_ = new pbc::RepeatedField<global::l2c_reputation_init.Types.NationReputation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::l2c_reputation_init.Types.NationReputation> LastWeekReputation {
    get { return lastWeekReputation_; }
  }

  /// <summary>Field number for the "is_award_this_week" field.</summary>
  public const int IsAwardThisWeekFieldNumber = 2;
  private bool isAwardThisWeek_;
  /// <summary>
  /// true 本次有奖励 false 本次无奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsAwardThisWeek {
    get { return isAwardThisWeek_; }
    set {
      isAwardThisWeek_ = value;
    }
  }

  /// <summary>Field number for the "awards" field.</summary>
  public const int AwardsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::PTGameElement> _repeated_awards_codec
      = pb::FieldCodec.ForMessage(26, global::PTGameElement.Parser);
  private readonly pbc::RepeatedField<global::PTGameElement> awards_ = new pbc::RepeatedField<global::PTGameElement>();
  /// <summary>
  /// 奖励元素 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PTGameElement> Awards {
    get { return awards_; }
  }

  /// <summary>Field number for the "counter_tick" field.</summary>
  public const int CounterTickFieldNumber = 4;
  private int counterTick_;
  /// <summary>
  /// 距离下次刷新时间倒计时
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CounterTick {
    get { return counterTick_; }
    set {
      counterTick_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_reputation_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_reputation_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!lastWeekReputation_.Equals(other.lastWeekReputation_)) return false;
    if (IsAwardThisWeek != other.IsAwardThisWeek) return false;
    if(!awards_.Equals(other.awards_)) return false;
    if (CounterTick != other.CounterTick) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= lastWeekReputation_.GetHashCode();
    if (IsAwardThisWeek != false) hash ^= IsAwardThisWeek.GetHashCode();
    hash ^= awards_.GetHashCode();
    if (CounterTick != 0) hash ^= CounterTick.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    lastWeekReputation_.WriteTo(output, _repeated_lastWeekReputation_codec);
    if (IsAwardThisWeek != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsAwardThisWeek);
    }
    awards_.WriteTo(output, _repeated_awards_codec);
    if (CounterTick != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(CounterTick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += lastWeekReputation_.CalculateSize(_repeated_lastWeekReputation_codec);
    if (IsAwardThisWeek != false) {
      size += 1 + 1;
    }
    size += awards_.CalculateSize(_repeated_awards_codec);
    if (CounterTick != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CounterTick);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_reputation_init other) {
    if (other == null) {
      return;
    }
    lastWeekReputation_.Add(other.lastWeekReputation_);
    if (other.IsAwardThisWeek != false) {
      IsAwardThisWeek = other.IsAwardThisWeek;
    }
    awards_.Add(other.awards_);
    if (other.CounterTick != 0) {
      CounterTick = other.CounterTick;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          lastWeekReputation_.AddEntriesFrom(input, _repeated_lastWeekReputation_codec);
          break;
        }
        case 16: {
          IsAwardThisWeek = input.ReadBool();
          break;
        }
        case 26: {
          awards_.AddEntriesFrom(input, _repeated_awards_codec);
          break;
        }
        case 32: {
          CounterTick = input.ReadInt32();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the l2c_reputation_init message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class NationReputation : pb::IMessage<NationReputation> {
      private static readonly pb::MessageParser<NationReputation> _parser = new pb::MessageParser<NationReputation>(() => new NationReputation());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<NationReputation> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::l2c_reputation_init.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NationReputation() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NationReputation(NationReputation other) : this() {
        id_ = other.id_;
        level_ = other.level_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public NationReputation Clone() {
        return new NationReputation(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 2;
      private int level_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Level {
        get { return level_; }
        set {
          level_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as NationReputation);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(NationReputation other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Level != other.Level) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Level != 0) hash ^= Level.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Level != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Level);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Level != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(NationReputation other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Level != 0) {
          Level = other.Level;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Level = input.ReadInt32();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

/// <summary>
/// LOGIC_MSG_C2L_REPUTATION_ACTIVITY_INIT 	= 54703;
/// </summary>
public sealed partial class c2l_reputation_activity_init : pb::IMessage<c2l_reputation_activity_init> {
  private static readonly pb::MessageParser<c2l_reputation_activity_init> _parser = new pb::MessageParser<c2l_reputation_activity_init>(() => new c2l_reputation_activity_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_reputation_activity_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[303]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reputation_activity_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reputation_activity_init(c2l_reputation_activity_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_reputation_activity_init Clone() {
    return new c2l_reputation_activity_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_reputation_activity_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_reputation_activity_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_reputation_activity_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class SpeechActivity : pb::IMessage<SpeechActivity> {
  private static readonly pb::MessageParser<SpeechActivity> _parser = new pb::MessageParser<SpeechActivity>(() => new SpeechActivity());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SpeechActivity> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[304]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SpeechActivity() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SpeechActivity(SpeechActivity other) : this() {
    id_ = other.id_;
    counterTick_ = other.counterTick_;
    remainCnts_ = other.remainCnts_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SpeechActivity Clone() {
    return new SpeechActivity(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "counter_tick" field.</summary>
  public const int CounterTickFieldNumber = 2;
  private int counterTick_;
  /// <summary>
  /// 距离下次刷新时间倒计时
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CounterTick {
    get { return counterTick_; }
    set {
      counterTick_ = value;
    }
  }

  /// <summary>Field number for the "remain_cnts" field.</summary>
  public const int RemainCntsFieldNumber = 3;
  private int remainCnts_;
  /// <summary>
  /// 剩余次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RemainCnts {
    get { return remainCnts_; }
    set {
      remainCnts_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SpeechActivity);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SpeechActivity other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (CounterTick != other.CounterTick) return false;
    if (RemainCnts != other.RemainCnts) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (CounterTick != 0) hash ^= CounterTick.GetHashCode();
    if (RemainCnts != 0) hash ^= RemainCnts.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (CounterTick != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CounterTick);
    }
    if (RemainCnts != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RemainCnts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (CounterTick != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CounterTick);
    }
    if (RemainCnts != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainCnts);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SpeechActivity other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.CounterTick != 0) {
      CounterTick = other.CounterTick;
    }
    if (other.RemainCnts != 0) {
      RemainCnts = other.RemainCnts;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          CounterTick = input.ReadInt32();
          break;
        }
        case 24: {
          RemainCnts = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// LOGIC_MSG_L2C_REPUTATION_ACTIVITY_INIT	= 54704;
/// </summary>
public sealed partial class l2c_reputation_activity_init : pb::IMessage<l2c_reputation_activity_init> {
  private static readonly pb::MessageParser<l2c_reputation_activity_init> _parser = new pb::MessageParser<l2c_reputation_activity_init>(() => new l2c_reputation_activity_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_reputation_activity_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[305]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_activity_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_activity_init(l2c_reputation_activity_init other) : this() {
    activityInfo_ = other.activityInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_activity_init Clone() {
    return new l2c_reputation_activity_init(this);
  }

  /// <summary>Field number for the "activity_info" field.</summary>
  public const int ActivityInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::SpeechActivity> _repeated_activityInfo_codec
      = pb::FieldCodec.ForMessage(10, global::SpeechActivity.Parser);
  private readonly pbc::RepeatedField<global::SpeechActivity> activityInfo_ = new pbc::RepeatedField<global::SpeechActivity>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::SpeechActivity> ActivityInfo {
    get { return activityInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_reputation_activity_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_reputation_activity_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!activityInfo_.Equals(other.activityInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= activityInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    activityInfo_.WriteTo(output, _repeated_activityInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += activityInfo_.CalculateSize(_repeated_activityInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_reputation_activity_init other) {
    if (other == null) {
      return;
    }
    activityInfo_.Add(other.activityInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          activityInfo_.AddEntriesFrom(input, _repeated_activityInfo_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_reputation_activity_upd : pb::IMessage<l2c_reputation_activity_upd> {
  private static readonly pb::MessageParser<l2c_reputation_activity_upd> _parser = new pb::MessageParser<l2c_reputation_activity_upd>(() => new l2c_reputation_activity_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_reputation_activity_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[306]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_activity_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_activity_upd(l2c_reputation_activity_upd other) : this() {
    activityInfo_ = other.activityInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_reputation_activity_upd Clone() {
    return new l2c_reputation_activity_upd(this);
  }

  /// <summary>Field number for the "activity_info" field.</summary>
  public const int ActivityInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::SpeechActivity> _repeated_activityInfo_codec
      = pb::FieldCodec.ForMessage(10, global::SpeechActivity.Parser);
  private readonly pbc::RepeatedField<global::SpeechActivity> activityInfo_ = new pbc::RepeatedField<global::SpeechActivity>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::SpeechActivity> ActivityInfo {
    get { return activityInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_reputation_activity_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_reputation_activity_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!activityInfo_.Equals(other.activityInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= activityInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    activityInfo_.WriteTo(output, _repeated_activityInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += activityInfo_.CalculateSize(_repeated_activityInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_reputation_activity_upd other) {
    if (other == null) {
      return;
    }
    activityInfo_.Add(other.activityInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          activityInfo_.AddEntriesFrom(input, _repeated_activityInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// CG --------------------------------------------------------------------------------------------------
///LOGIC_MSG_C2L_UNLOCK_CG_INIT = 54601;
/// </summary>
public sealed partial class c2l_unlock_cg_init : pb::IMessage<c2l_unlock_cg_init> {
  private static readonly pb::MessageParser<c2l_unlock_cg_init> _parser = new pb::MessageParser<c2l_unlock_cg_init>(() => new c2l_unlock_cg_init());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_unlock_cg_init> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[307]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_unlock_cg_init() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_unlock_cg_init(c2l_unlock_cg_init other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_unlock_cg_init Clone() {
    return new c2l_unlock_cg_init(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_unlock_cg_init);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_unlock_cg_init other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_unlock_cg_init other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
///LOGIC_MSG_L2C_UNLOCK_CG_REP = 54602;
/// </summary>
public sealed partial class l2c_unlock_cg_rep : pb::IMessage<l2c_unlock_cg_rep> {
  private static readonly pb::MessageParser<l2c_unlock_cg_rep> _parser = new pb::MessageParser<l2c_unlock_cg_rep>(() => new l2c_unlock_cg_rep());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_unlock_cg_rep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[308]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_cg_rep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_cg_rep(l2c_unlock_cg_rep other) : this() {
    cgId_ = other.cgId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_cg_rep Clone() {
    return new l2c_unlock_cg_rep(this);
  }

  /// <summary>Field number for the "cg_id" field.</summary>
  public const int CgIdFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_cgId_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> cgId_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> CgId {
    get { return cgId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_unlock_cg_rep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_unlock_cg_rep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!cgId_.Equals(other.cgId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= cgId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    cgId_.WriteTo(output, _repeated_cgId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += cgId_.CalculateSize(_repeated_cgId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_unlock_cg_rep other) {
    if (other == null) {
      return;
    }
    cgId_.Add(other.cgId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          cgId_.AddEntriesFrom(input, _repeated_cgId_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///LOGIC_MSG_L2C_UNLOCK_CG_UPD = 54603;
/// </summary>
public sealed partial class l2c_unlock_cg_upd : pb::IMessage<l2c_unlock_cg_upd> {
  private static readonly pb::MessageParser<l2c_unlock_cg_upd> _parser = new pb::MessageParser<l2c_unlock_cg_upd>(() => new l2c_unlock_cg_upd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_unlock_cg_upd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[309]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_cg_upd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_cg_upd(l2c_unlock_cg_upd other) : this() {
    cgId_ = other.cgId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_unlock_cg_upd Clone() {
    return new l2c_unlock_cg_upd(this);
  }

  /// <summary>Field number for the "cg_id" field.</summary>
  public const int CgIdFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_cgId_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> cgId_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> CgId {
    get { return cgId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_unlock_cg_upd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_unlock_cg_upd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!cgId_.Equals(other.cgId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= cgId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    cgId_.WriteTo(output, _repeated_cgId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += cgId_.CalculateSize(_repeated_cgId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_unlock_cg_upd other) {
    if (other == null) {
      return;
    }
    cgId_.Add(other.cgId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          cgId_.AddEntriesFrom(input, _repeated_cgId_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_google_purchase_create : pb::IMessage<c2l_google_purchase_create> {
  private static readonly pb::MessageParser<c2l_google_purchase_create> _parser = new pb::MessageParser<c2l_google_purchase_create>(() => new c2l_google_purchase_create());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_google_purchase_create> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[310]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_google_purchase_create() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_google_purchase_create(c2l_google_purchase_create other) : this() {
    commodityId_ = other.commodityId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_google_purchase_create Clone() {
    return new c2l_google_purchase_create(this);
  }

  /// <summary>Field number for the "commodity_id" field.</summary>
  public const int CommodityIdFieldNumber = 1;
  private int commodityId_;
  /// <summary>
  /// 商品ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CommodityId {
    get { return commodityId_; }
    set {
      commodityId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_google_purchase_create);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_google_purchase_create other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CommodityId != other.CommodityId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CommodityId != 0) hash ^= CommodityId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CommodityId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CommodityId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CommodityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommodityId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_google_purchase_create other) {
    if (other == null) {
      return;
    }
    if (other.CommodityId != 0) {
      CommodityId = other.CommodityId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CommodityId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_google_purchase_create : pb::IMessage<l2c_google_purchase_create> {
  private static readonly pb::MessageParser<l2c_google_purchase_create> _parser = new pb::MessageParser<l2c_google_purchase_create>(() => new l2c_google_purchase_create());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_google_purchase_create> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[311]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_google_purchase_create() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_google_purchase_create(l2c_google_purchase_create other) : this() {
    appOrderNo_ = other.appOrderNo_;
    isTest_ = other.isTest_;
    commodityId_ = other.commodityId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_google_purchase_create Clone() {
    return new l2c_google_purchase_create(this);
  }

  /// <summary>Field number for the "app_order_no" field.</summary>
  public const int AppOrderNoFieldNumber = 1;
  private int appOrderNo_;
  /// <summary>
  /// 游戏订单序号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AppOrderNo {
    get { return appOrderNo_; }
    set {
      appOrderNo_ = value;
    }
  }

  /// <summary>Field number for the "is_test" field.</summary>
  public const int IsTestFieldNumber = 2;
  private bool isTest_;
  /// <summary>
  /// 是否为模拟支付，为模拟支付不要发送c2l_google_purchase_token
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsTest {
    get { return isTest_; }
    set {
      isTest_ = value;
    }
  }

  /// <summary>Field number for the "commodity_id" field.</summary>
  public const int CommodityIdFieldNumber = 3;
  private int commodityId_;
  /// <summary>
  /// 商品ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CommodityId {
    get { return commodityId_; }
    set {
      commodityId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 4;
  private bool result_;
  /// <summary>
  /// 订单生成结果
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_google_purchase_create);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_google_purchase_create other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppOrderNo != other.AppOrderNo) return false;
    if (IsTest != other.IsTest) return false;
    if (CommodityId != other.CommodityId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AppOrderNo != 0) hash ^= AppOrderNo.GetHashCode();
    if (IsTest != false) hash ^= IsTest.GetHashCode();
    if (CommodityId != 0) hash ^= CommodityId.GetHashCode();
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AppOrderNo != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AppOrderNo);
    }
    if (IsTest != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsTest);
    }
    if (CommodityId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CommodityId);
    }
    if (Result != false) {
      output.WriteRawTag(32);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AppOrderNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppOrderNo);
    }
    if (IsTest != false) {
      size += 1 + 1;
    }
    if (CommodityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommodityId);
    }
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_google_purchase_create other) {
    if (other == null) {
      return;
    }
    if (other.AppOrderNo != 0) {
      AppOrderNo = other.AppOrderNo;
    }
    if (other.IsTest != false) {
      IsTest = other.IsTest;
    }
    if (other.CommodityId != 0) {
      CommodityId = other.CommodityId;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AppOrderNo = input.ReadInt32();
          break;
        }
        case 16: {
          IsTest = input.ReadBool();
          break;
        }
        case 24: {
          CommodityId = input.ReadInt32();
          break;
        }
        case 32: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class c2l_google_purchase_token : pb::IMessage<c2l_google_purchase_token> {
  private static readonly pb::MessageParser<c2l_google_purchase_token> _parser = new pb::MessageParser<c2l_google_purchase_token>(() => new c2l_google_purchase_token());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2l_google_purchase_token> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[312]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_google_purchase_token() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_google_purchase_token(c2l_google_purchase_token other) : this() {
    productId_ = other.productId_;
    token_ = other.token_;
    commodityId_ = other.commodityId_;
    appOrderNo_ = other.appOrderNo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2l_google_purchase_token Clone() {
    return new c2l_google_purchase_token(this);
  }

  /// <summary>Field number for the "product_id" field.</summary>
  public const int ProductIdFieldNumber = 1;
  private string productId_ = "";
  /// <summary>
  /// The inapp product SKU (for example, 'com.some.thing.inapp1').
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProductId {
    get { return productId_; }
    set {
      productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 2;
  private string token_ = "";
  /// <summary>
  /// The token provided to the user's device when the inapp product was purchased.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "commodity_id" field.</summary>
  public const int CommodityIdFieldNumber = 3;
  private int commodityId_;
  /// <summary>
  /// 商品ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CommodityId {
    get { return commodityId_; }
    set {
      commodityId_ = value;
    }
  }

  /// <summary>Field number for the "app_order_no" field.</summary>
  public const int AppOrderNoFieldNumber = 5;
  private int appOrderNo_;
  /// <summary>
  /// 游戏订单序号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AppOrderNo {
    get { return appOrderNo_; }
    set {
      appOrderNo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2l_google_purchase_token);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2l_google_purchase_token other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProductId != other.ProductId) return false;
    if (Token != other.Token) return false;
    if (CommodityId != other.CommodityId) return false;
    if (AppOrderNo != other.AppOrderNo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    if (CommodityId != 0) hash ^= CommodityId.GetHashCode();
    if (AppOrderNo != 0) hash ^= AppOrderNo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProductId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ProductId);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Token);
    }
    if (CommodityId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CommodityId);
    }
    if (AppOrderNo != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(AppOrderNo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProductId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
    }
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    if (CommodityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommodityId);
    }
    if (AppOrderNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppOrderNo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2l_google_purchase_token other) {
    if (other == null) {
      return;
    }
    if (other.ProductId.Length != 0) {
      ProductId = other.ProductId;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
    if (other.CommodityId != 0) {
      CommodityId = other.CommodityId;
    }
    if (other.AppOrderNo != 0) {
      AppOrderNo = other.AppOrderNo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ProductId = input.ReadString();
          break;
        }
        case 18: {
          Token = input.ReadString();
          break;
        }
        case 24: {
          CommodityId = input.ReadInt32();
          break;
        }
        case 40: {
          AppOrderNo = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class l2c_google_purchase_token : pb::IMessage<l2c_google_purchase_token> {
  private static readonly pb::MessageParser<l2c_google_purchase_token> _parser = new pb::MessageParser<l2c_google_purchase_token>(() => new l2c_google_purchase_token());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<l2c_google_purchase_token> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LogicReflection.Descriptor.MessageTypes[313]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_google_purchase_token() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_google_purchase_token(l2c_google_purchase_token other) : this() {
    appOrderNo_ = other.appOrderNo_;
    productId_ = other.productId_;
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public l2c_google_purchase_token Clone() {
    return new l2c_google_purchase_token(this);
  }

  /// <summary>Field number for the "app_order_no" field.</summary>
  public const int AppOrderNoFieldNumber = 1;
  private int appOrderNo_;
  /// <summary>
  /// 游戏订单序号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AppOrderNo {
    get { return appOrderNo_; }
    set {
      appOrderNo_ = value;
    }
  }

  /// <summary>Field number for the "product_id" field.</summary>
  public const int ProductIdFieldNumber = 2;
  private string productId_ = "";
  /// <summary>
  /// The inapp product SKU (for example, 'com.some.thing.inapp1').
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProductId {
    get { return productId_; }
    set {
      productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 3;
  private bool result_;
  /// <summary>
  /// 服务器验证app_order_no结果。
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as l2c_google_purchase_token);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(l2c_google_purchase_token other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppOrderNo != other.AppOrderNo) return false;
    if (ProductId != other.ProductId) return false;
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AppOrderNo != 0) hash ^= AppOrderNo.GetHashCode();
    if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
    if (Result != false) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AppOrderNo != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AppOrderNo);
    }
    if (ProductId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ProductId);
    }
    if (Result != false) {
      output.WriteRawTag(24);
      output.WriteBool(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AppOrderNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppOrderNo);
    }
    if (ProductId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
    }
    if (Result != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(l2c_google_purchase_token other) {
    if (other == null) {
      return;
    }
    if (other.AppOrderNo != 0) {
      AppOrderNo = other.AppOrderNo;
    }
    if (other.ProductId.Length != 0) {
      ProductId = other.ProductId;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AppOrderNo = input.ReadInt32();
          break;
        }
        case 18: {
          ProductId = input.ReadString();
          break;
        }
        case 24: {
          Result = input.ReadBool();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
