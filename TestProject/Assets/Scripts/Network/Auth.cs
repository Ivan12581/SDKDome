// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: auth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from auth.proto</summary>
public static partial class AuthReflection {

  #region Descriptor
  /// <summary>File descriptor for auth.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AuthReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgphdXRoLnByb3RvIlgKEGMyYV9yZWdpc3Rlcl9yZXESEAoIdXNlcm5hbWUY",
          "ASABKAkSCQoBcxgCIAEoCRIJCgF2GAMgASgJEg0KBWVtYWlsGAQgASgJEg0K",
          "BXBob25lGAUgASgJIjQKEGEyY19yZWdpc3Rlcl9yZXASIAoGcmVzdWx0GAEg",
          "ASgOMhAuQWNjb3VudE9wUmVzdWx0IicKE2MyYV9sb2dvbl9jaGFsbGVuZ2US",
          "EAoIdXNlcm5hbWUYASABKAkiLgoNYTJjX2xvZ29uX2FzaxISCgpwdWJsaWNf",
          "a2V5GAEgASgJEgkKAXMYAiABKAkiKAoPYzJhX2xvZ29uX3Byb29mEgkKAUEY",
          "ASABKAkSCgoCTTEYAiABKAkidwoNYTJjX2xvZ29uX3JlcBIgCgZyZXN1bHQY",
          "ASABKA4yEC5BY2NvdW50T3BSZXN1bHQSEAoIdXNlcm5hbWUYAiABKAkSEgoK",
          "YWNjb3VudF9pZBgDIAEoDRIMCgRndWlkGAQgASgNEhAKCHNka19jb2RlGAUg",
          "ASgFIiwKEGEyY19sb2dvbl9yZWdpb24SCgoCaXAYASABKAkSDAoEcG9ydBgC",
          "IAEoDSJoCg1jMmFfbG9nb25fc2RrEg4KBmFwcF9pZBgBIAEoCRIOCgZjY2hf",
          "aWQYAiABKAkSFAoMYWNjZXNzX3Rva2VuGAMgASgJEg8KB2FwcF9rZXkYBCAB",
          "KAkSEAoIc2RrX3R5cGUYBSABKAkiIwoPYzJhX2xvZ29uX3N1cGVyEhAKCHVz",
          "ZXJuYW1lGAIgASgJKsYBCg9BY2NvdW50T3BSZXN1bHQSDAoIQU9SX05VTEwQ",
          "ABIKCgZBT1JfT0sQARIVChFBT1JfTkFNRV9UT09fTE9ORxACEhkKFUFPUl9Q",
          "QVNTX1dST05HX0xFTkdUSBADEhoKFkFPUl9OQU1FX0FMUkVBRFlfRVhJU1QQ",
          "BBIWChJBT1JfTkFNRV9OT1RfRVhJU1QQBRIZChVBT1JfREJfSU5URVJOQUxf",
          "RVJST1IQBhIYChRBT1JfUEFTU19XUk9OR19FUlJPUhAHKr8CCglBdXRoTXNn",
          "SUQSEQoNQVVUSF9NU0dfTlVMTBAAEh8KGUFVVEhfTVNHX0MyQV9SRUdJU1RF",
          "Ul9SRVEQydwDEh8KGUFVVEhfTVNHX0EyQ19SRUdJU1RFUl9SRVAQytwDEiIK",
          "HEFVVEhfTVNHX0MyQV9MT0dPTl9DSEFMTEVOR0UQseQDEhwKFkFVVEhfTVNH",
          "X0EyQ19MT0dPTl9BU0sQsuQDEh4KGEFVVEhfTVNHX0MyQV9MT0dPTl9QUk9P",
          "RhCz5AMSHAoWQVVUSF9NU0dfQTJDX0xPR09OX1JFUBC05AMSHwoZQVVUSF9N",
          "U0dfQTJDX0xPR09OX1JFR0lPThC15AMSHAoWQVVUSF9NU0dfQzJBX0xPR09O",
          "X1NESxC25AMSHgoYQVVUSF9NU0dfQzJBX0xPR09OX1NVUEVSELjkA2IGcHJv",
          "dG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AccountOpResult), typeof(global::AuthMsgID), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::c2a_register_req), global::c2a_register_req.Parser, new[]{ "Username", "S", "V", "Email", "Phone" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::a2c_register_rep), global::a2c_register_rep.Parser, new[]{ "Result" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2a_logon_challenge), global::c2a_logon_challenge.Parser, new[]{ "Username" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::a2c_logon_ask), global::a2c_logon_ask.Parser, new[]{ "PublicKey", "S" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2a_logon_proof), global::c2a_logon_proof.Parser, new[]{ "A", "M1" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::a2c_logon_rep), global::a2c_logon_rep.Parser, new[]{ "Result", "Username", "AccountId", "Guid", "SdkCode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::a2c_logon_region), global::a2c_logon_region.Parser, new[]{ "Ip", "Port" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2a_logon_sdk), global::c2a_logon_sdk.Parser, new[]{ "AppId", "CchId", "AccessToken", "AppKey", "SdkType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::c2a_logon_super), global::c2a_logon_super.Parser, new[]{ "Username" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
/// <summary>
/// ÕËºÅ²Ù×÷½á¹û
/// </summary>
public enum AccountOpResult {
  [pbr::OriginalName("AOR_NULL")] AorNull = 0,
  [pbr::OriginalName("AOR_OK")] AorOk = 1,
  [pbr::OriginalName("AOR_NAME_TOO_LONG")] AorNameTooLong = 2,
  [pbr::OriginalName("AOR_PASS_WRONG_LENGTH")] AorPassWrongLength = 3,
  [pbr::OriginalName("AOR_NAME_ALREADY_EXIST")] AorNameAlreadyExist = 4,
  [pbr::OriginalName("AOR_NAME_NOT_EXIST")] AorNameNotExist = 5,
  [pbr::OriginalName("AOR_DB_INTERNAL_ERROR")] AorDbInternalError = 6,
  [pbr::OriginalName("AOR_PASS_WRONG_ERROR")] AorPassWrongError = 7,
}

/// <summary>
/// ÏûÏ¢ID
/// </summary>
public enum AuthMsgID {
  /// <summary>
  /// ½ûÓÃ
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_NULL")] AuthMsgNull = 0,
  /// <summary>
  /// ×¢²áÇëÇó
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_C2A_REGISTER_REQ")] AuthMsgC2ARegisterReq = 61001,
  /// <summary>
  /// ×¢²á·µ»Ø
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_A2C_REGISTER_REP")] AuthMsgA2CRegisterRep = 61002,
  /// <summary>
  /// µÇÂ¼ÇëÇó
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_C2A_LOGON_CHALLENGE")] AuthMsgC2ALogonChallenge = 62001,
  /// <summary>
  /// µÇÂ¼Ñ¯ÎÊ
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_A2C_LOGON_ASK")] AuthMsgA2CLogonAsk = 62002,
  /// <summary>
  /// µÇÂ¼Æ¾¾Ý
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_C2A_LOGON_PROOF")] AuthMsgC2ALogonProof = 62003,
  /// <summary>
  /// µÇÂ¼½á¹û
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_A2C_LOGON_REP")] AuthMsgA2CLogonRep = 62004,
  /// <summary>
  /// µÇÂ¼LogicÐÅÏ¢
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_A2C_LOGON_REGION")] AuthMsgA2CLogonRegion = 62005,
  /// <summary>
  /// SDKµÇÂ¼
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_C2A_LOGON_SDK")] AuthMsgC2ALogonSdk = 62006,
  /// <summary>
  /// ÎÞÃÜÂëµÇÂ¼
  /// </summary>
  [pbr::OriginalName("AUTH_MSG_C2A_LOGON_SUPER")] AuthMsgC2ALogonSuper = 62008,
}

#endregion

#region Messages
public sealed partial class c2a_register_req : pb::IMessage<c2a_register_req> {
  private static readonly pb::MessageParser<c2a_register_req> _parser = new pb::MessageParser<c2a_register_req>(() => new c2a_register_req());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2a_register_req> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_register_req() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_register_req(c2a_register_req other) : this() {
    username_ = other.username_;
    s_ = other.s_;
    v_ = other.v_;
    email_ = other.email_;
    phone_ = other.phone_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_register_req Clone() {
    return new c2a_register_req(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "s" field.</summary>
  public const int SFieldNumber = 2;
  private string s_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string S {
    get { return s_; }
    set {
      s_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "v" field.</summary>
  public const int VFieldNumber = 3;
  private string v_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string V {
    get { return v_; }
    set {
      v_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "email" field.</summary>
  public const int EmailFieldNumber = 4;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 5;
  private string phone_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2a_register_req);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2a_register_req other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    if (S != other.S) return false;
    if (V != other.V) return false;
    if (Email != other.Email) return false;
    if (Phone != other.Phone) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (S.Length != 0) hash ^= S.GetHashCode();
    if (V.Length != 0) hash ^= V.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (S.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(S);
    }
    if (V.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(V);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Email);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Phone);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (S.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(S);
    }
    if (V.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(V);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2a_register_req other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.S.Length != 0) {
      S = other.S;
    }
    if (other.V.Length != 0) {
      V = other.V;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 18: {
          S = input.ReadString();
          break;
        }
        case 26: {
          V = input.ReadString();
          break;
        }
        case 34: {
          Email = input.ReadString();
          break;
        }
        case 42: {
          Phone = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class a2c_register_rep : pb::IMessage<a2c_register_rep> {
  private static readonly pb::MessageParser<a2c_register_rep> _parser = new pb::MessageParser<a2c_register_rep>(() => new a2c_register_rep());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<a2c_register_rep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_register_rep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_register_rep(a2c_register_rep other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_register_rep Clone() {
    return new a2c_register_rep(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private global::AccountOpResult result_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AccountOpResult Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as a2c_register_rep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(a2c_register_rep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(a2c_register_rep other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          result_ = (global::AccountOpResult) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class c2a_logon_challenge : pb::IMessage<c2a_logon_challenge> {
  private static readonly pb::MessageParser<c2a_logon_challenge> _parser = new pb::MessageParser<c2a_logon_challenge>(() => new c2a_logon_challenge());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2a_logon_challenge> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_challenge() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_challenge(c2a_logon_challenge other) : this() {
    username_ = other.username_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_challenge Clone() {
    return new c2a_logon_challenge(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2a_logon_challenge);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2a_logon_challenge other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2a_logon_challenge other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class a2c_logon_ask : pb::IMessage<a2c_logon_ask> {
  private static readonly pb::MessageParser<a2c_logon_ask> _parser = new pb::MessageParser<a2c_logon_ask>(() => new a2c_logon_ask());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<a2c_logon_ask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_ask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_ask(a2c_logon_ask other) : this() {
    publicKey_ = other.publicKey_;
    s_ = other.s_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_ask Clone() {
    return new a2c_logon_ask(this);
  }

  /// <summary>Field number for the "public_key" field.</summary>
  public const int PublicKeyFieldNumber = 1;
  private string publicKey_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PublicKey {
    get { return publicKey_; }
    set {
      publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "s" field.</summary>
  public const int SFieldNumber = 2;
  private string s_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string S {
    get { return s_; }
    set {
      s_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as a2c_logon_ask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(a2c_logon_ask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PublicKey != other.PublicKey) return false;
    if (S != other.S) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
    if (S.Length != 0) hash ^= S.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PublicKey.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PublicKey);
    }
    if (S.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(S);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PublicKey.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
    }
    if (S.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(S);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(a2c_logon_ask other) {
    if (other == null) {
      return;
    }
    if (other.PublicKey.Length != 0) {
      PublicKey = other.PublicKey;
    }
    if (other.S.Length != 0) {
      S = other.S;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PublicKey = input.ReadString();
          break;
        }
        case 18: {
          S = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class c2a_logon_proof : pb::IMessage<c2a_logon_proof> {
  private static readonly pb::MessageParser<c2a_logon_proof> _parser = new pb::MessageParser<c2a_logon_proof>(() => new c2a_logon_proof());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2a_logon_proof> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_proof() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_proof(c2a_logon_proof other) : this() {
    a_ = other.a_;
    m1_ = other.m1_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_proof Clone() {
    return new c2a_logon_proof(this);
  }

  /// <summary>Field number for the "A" field.</summary>
  public const int AFieldNumber = 1;
  private string a_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string A {
    get { return a_; }
    set {
      a_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "M1" field.</summary>
  public const int M1FieldNumber = 2;
  private string m1_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string M1 {
    get { return m1_; }
    set {
      m1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2a_logon_proof);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2a_logon_proof other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (A != other.A) return false;
    if (M1 != other.M1) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (A.Length != 0) hash ^= A.GetHashCode();
    if (M1.Length != 0) hash ^= M1.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (A.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(A);
    }
    if (M1.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(M1);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (A.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(A);
    }
    if (M1.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(M1);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2a_logon_proof other) {
    if (other == null) {
      return;
    }
    if (other.A.Length != 0) {
      A = other.A;
    }
    if (other.M1.Length != 0) {
      M1 = other.M1;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          A = input.ReadString();
          break;
        }
        case 18: {
          M1 = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class a2c_logon_rep : pb::IMessage<a2c_logon_rep> {
  private static readonly pb::MessageParser<a2c_logon_rep> _parser = new pb::MessageParser<a2c_logon_rep>(() => new a2c_logon_rep());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<a2c_logon_rep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_rep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_rep(a2c_logon_rep other) : this() {
    result_ = other.result_;
    username_ = other.username_;
    accountId_ = other.accountId_;
    guid_ = other.guid_;
    sdkCode_ = other.sdkCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_rep Clone() {
    return new a2c_logon_rep(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private global::AccountOpResult result_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AccountOpResult Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 2;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 3;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  /// <summary>Field number for the "guid" field.</summary>
  public const int GuidFieldNumber = 4;
  private uint guid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Guid {
    get { return guid_; }
    set {
      guid_ = value;
    }
  }

  /// <summary>Field number for the "sdk_code" field.</summary>
  public const int SdkCodeFieldNumber = 5;
  private int sdkCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SdkCode {
    get { return sdkCode_; }
    set {
      sdkCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as a2c_logon_rep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(a2c_logon_rep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if (Username != other.Username) return false;
    if (AccountId != other.AccountId) return false;
    if (Guid != other.Guid) return false;
    if (SdkCode != other.SdkCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (Guid != 0) hash ^= Guid.GetHashCode();
    if (SdkCode != 0) hash ^= SdkCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Result);
    }
    if (Username.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Username);
    }
    if (AccountId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(AccountId);
    }
    if (Guid != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Guid);
    }
    if (SdkCode != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(SdkCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (Guid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
    }
    if (SdkCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SdkCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(a2c_logon_rep other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    if (other.Guid != 0) {
      Guid = other.Guid;
    }
    if (other.SdkCode != 0) {
      SdkCode = other.SdkCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          result_ = (global::AccountOpResult) input.ReadEnum();
          break;
        }
        case 18: {
          Username = input.ReadString();
          break;
        }
        case 24: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 32: {
          Guid = input.ReadUInt32();
          break;
        }
        case 40: {
          SdkCode = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class a2c_logon_region : pb::IMessage<a2c_logon_region> {
  private static readonly pb::MessageParser<a2c_logon_region> _parser = new pb::MessageParser<a2c_logon_region>(() => new a2c_logon_region());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<a2c_logon_region> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_region() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_region(a2c_logon_region other) : this() {
    ip_ = other.ip_;
    port_ = other.port_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public a2c_logon_region Clone() {
    return new a2c_logon_region(this);
  }

  /// <summary>Field number for the "ip" field.</summary>
  public const int IpFieldNumber = 1;
  private string ip_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Ip {
    get { return ip_; }
    set {
      ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "port" field.</summary>
  public const int PortFieldNumber = 2;
  private uint port_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as a2c_logon_region);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(a2c_logon_region other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ip != other.Ip) return false;
    if (Port != other.Port) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Ip.Length != 0) hash ^= Ip.GetHashCode();
    if (Port != 0) hash ^= Port.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Ip.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Port);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Ip.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
    }
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(a2c_logon_region other) {
    if (other == null) {
      return;
    }
    if (other.Ip.Length != 0) {
      Ip = other.Ip;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Ip = input.ReadString();
          break;
        }
        case 16: {
          Port = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class c2a_logon_sdk : pb::IMessage<c2a_logon_sdk> {
  private static readonly pb::MessageParser<c2a_logon_sdk> _parser = new pb::MessageParser<c2a_logon_sdk>(() => new c2a_logon_sdk());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2a_logon_sdk> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_sdk() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_sdk(c2a_logon_sdk other) : this() {
    appId_ = other.appId_;
    cchId_ = other.cchId_;
    accessToken_ = other.accessToken_;
    appKey_ = other.appKey_;
    sdkType_ = other.sdkType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_sdk Clone() {
    return new c2a_logon_sdk(this);
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 1;
  private string appId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AppId {
    get { return appId_; }
    set {
      appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cch_id" field.</summary>
  public const int CchIdFieldNumber = 2;
  private string cchId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CchId {
    get { return cchId_; }
    set {
      cchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "access_token" field.</summary>
  public const int AccessTokenFieldNumber = 3;
  private string accessToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "app_key" field.</summary>
  public const int AppKeyFieldNumber = 4;
  private string appKey_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AppKey {
    get { return appKey_; }
    set {
      appKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sdk_type" field.</summary>
  public const int SdkTypeFieldNumber = 5;
  private string sdkType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SdkType {
    get { return sdkType_; }
    set {
      sdkType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2a_logon_sdk);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2a_logon_sdk other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppId != other.AppId) return false;
    if (CchId != other.CchId) return false;
    if (AccessToken != other.AccessToken) return false;
    if (AppKey != other.AppKey) return false;
    if (SdkType != other.SdkType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AppId.Length != 0) hash ^= AppId.GetHashCode();
    if (CchId.Length != 0) hash ^= CchId.GetHashCode();
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (AppKey.Length != 0) hash ^= AppKey.GetHashCode();
    if (SdkType.Length != 0) hash ^= SdkType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AppId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AppId);
    }
    if (CchId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CchId);
    }
    if (AccessToken.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(AccessToken);
    }
    if (AppKey.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(AppKey);
    }
    if (SdkType.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(SdkType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AppId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
    }
    if (CchId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CchId);
    }
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (AppKey.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AppKey);
    }
    if (SdkType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2a_logon_sdk other) {
    if (other == null) {
      return;
    }
    if (other.AppId.Length != 0) {
      AppId = other.AppId;
    }
    if (other.CchId.Length != 0) {
      CchId = other.CchId;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    if (other.AppKey.Length != 0) {
      AppKey = other.AppKey;
    }
    if (other.SdkType.Length != 0) {
      SdkType = other.SdkType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AppId = input.ReadString();
          break;
        }
        case 18: {
          CchId = input.ReadString();
          break;
        }
        case 26: {
          AccessToken = input.ReadString();
          break;
        }
        case 34: {
          AppKey = input.ReadString();
          break;
        }
        case 42: {
          SdkType = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class c2a_logon_super : pb::IMessage<c2a_logon_super> {
  private static readonly pb::MessageParser<c2a_logon_super> _parser = new pb::MessageParser<c2a_logon_super>(() => new c2a_logon_super());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<c2a_logon_super> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_super() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_super(c2a_logon_super other) : this() {
    username_ = other.username_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public c2a_logon_super Clone() {
    return new c2a_logon_super(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 2;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as c2a_logon_super);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(c2a_logon_super other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Username);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(c2a_logon_super other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Username = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
