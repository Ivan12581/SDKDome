// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgwrap.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from msgwrap.proto</summary>
public static partial class MsgwrapReflection {

  #region Descriptor
  /// <summary>File descriptor for msgwrap.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MsgwrapReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1tc2d3cmFwLnByb3RvIkQKB01zZ1dyYXASCgoCaWQYASABKAUSDQoFb3Bf",
          "aWQYAiABKAkSEQoJb3BfaWRfaWR4GAMgASgFEgsKA21zZxgEIAEoDCoVCgVN",
          "c2dJRBIMCghNU0dfTlVMTBAAYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MsgID), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgWrap), global::MsgWrap.Parser, new[]{ "Id", "OpId", "OpIdIdx", "Msg" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum MsgID {
  /// <summary>
  /// 禁用
  /// </summary>
  [pbr::OriginalName("MSG_NULL")] MsgNull = 0,
}

#endregion

#region Messages
/// <summary>
/// 消息包
/// </summary>
public sealed partial class MsgWrap : pb::IMessage<MsgWrap> {
  private static readonly pb::MessageParser<MsgWrap> _parser = new pb::MessageParser<MsgWrap>(() => new MsgWrap());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgWrap> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MsgwrapReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgWrap() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgWrap(MsgWrap other) : this() {
    id_ = other.id_;
    opId_ = other.opId_;
    opIdIdx_ = other.opIdIdx_;
    msg_ = other.msg_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgWrap Clone() {
    return new MsgWrap(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "op_id" field.</summary>
  public const int OpIdFieldNumber = 2;
  private string opId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OpId {
    get { return opId_; }
    set {
      opId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "op_id_idx" field.</summary>
  public const int OpIdIdxFieldNumber = 3;
  private int opIdIdx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OpIdIdx {
    get { return opIdIdx_; }
    set {
      opIdIdx_ = value;
    }
  }

  /// <summary>Field number for the "msg" field.</summary>
  public const int MsgFieldNumber = 4;
  private pb::ByteString msg_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Msg {
    get { return msg_; }
    set {
      msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgWrap);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgWrap other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (OpId != other.OpId) return false;
    if (OpIdIdx != other.OpIdIdx) return false;
    if (Msg != other.Msg) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (OpId.Length != 0) hash ^= OpId.GetHashCode();
    if (OpIdIdx != 0) hash ^= OpIdIdx.GetHashCode();
    if (Msg.Length != 0) hash ^= Msg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (OpId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(OpId);
    }
    if (OpIdIdx != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(OpIdIdx);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(Msg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (OpId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OpId);
    }
    if (OpIdIdx != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpIdIdx);
    }
    if (Msg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Msg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgWrap other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.OpId.Length != 0) {
      OpId = other.OpId;
    }
    if (other.OpIdIdx != 0) {
      OpIdIdx = other.OpIdIdx;
    }
    if (other.Msg.Length != 0) {
      Msg = other.Msg;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          OpId = input.ReadString();
          break;
        }
        case 24: {
          OpIdIdx = input.ReadInt32();
          break;
        }
        case 34: {
          Msg = input.ReadBytes();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
